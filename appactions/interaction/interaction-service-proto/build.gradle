/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import androidx.build.BundleInsideHelper
import androidx.build.LibraryType
import androidx.build.Publish
import androidx.build.RunApiTasks

plugins {
    id("AndroidXPlugin")
    id("java-library")
    id("com.google.protobuf")
}

BundleInsideHelper.forInsideAar(
        project,
        [
            new BundleInsideHelper.Relocation(/* from = */ "io.grpc.protobuf",
        /* to =   */ "androidx.appactions.interaction.grpc.protobuf"),
            new BundleInsideHelper.Relocation(/* from = */ "com.google.protobuf",
        /* to =   */ "androidx.appactions.interaction.protobuf")
    ]
)

dependencies {
    // TODO(b/268709908): Bump this to version 1.52.0 and make available from libs.grpcProtobufLite
    bundleInside(compileOnly("io.grpc:grpc-protobuf-lite:1.45.1") {
        // Ensure we only bundle grpc-protobuf-lite. Any of its dependencies should be added
        // as `implementation` dependencies below.
        exclude group: 'com.google.protobuf'
        exclude group: 'com.google.guava'
        exclude group: 'io.grpc'
        exclude group: 'com.google.code.findbugs'
    })

    // We need to use the non-shadow configurations at compile time to pick up the protos at the
    // original package location (before renaming). The final AAR will have the renamed/shadowed
    // configurations which are bundled here and in interaction-service.
    compileOnly(project(path:":appactions:interaction:interaction-proto", configuration:"archives"))

    // These are the compile-time dependencies needed to build the interaction-service-proto
    // with the grpc-protobuf-lite dependencies bundled. They need to be added as dependencies in
    // any library that bundles interaction-service-proto.
    compileOnly(libs.protobufLite)
    compileOnly(libs.grpcStub)
    compileOnly("androidx.annotation:annotation:1.1.0")
    compileOnly("javax.annotation:javax.annotation-api:1.3.2")
}

protobuf {
    protoc {
        artifact = libs.protobufCompiler.get()
    }
    // Configure the codegen plugins for GRPC.
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.52.0'
        }
    }

    // Generates the java proto-lite code for the protos in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

afterEvaluate {
    lint {
        lintOptions {
            // protobuf generates unannotated and synthetic accessor methods
            disable("UnknownNullness", "SyntheticAccessor")
            abortOnError(false)
            checkReleaseBuilds(false)
        }
    }
    // Explicitly declares generateTestProto as a dependency for some of the lint tasks
    // run on regular AndroidX libraries.
    project.tasks.getByName("generateTestProto") {
        mustRunAfter(":appactions:interaction:interaction-service-proto:lintReport")
        mustRunAfter(":appactions:interaction:interaction-service-proto:lintAnalyze")
    }
}

androidx {
    name = "androidx.appactions.interaction:interaction-service-proto"
    publish = Publish.NONE
    inceptionYear = "2023"
    description = "Internal protos for Interaction Service"
    runApiTasks = new RunApiTasks.No("No public API required for internal use with app widgets.")
}
