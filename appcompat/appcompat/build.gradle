plugins {
    id("com.android.library")
    id("maven-publish")
    id("kotlin-android")
}

dependencies {
    api("androidx.annotation:annotation:1.3.0")
    api project(":core:core")

    // Required to make activity 1.5.0-rc01 dependencies resolve.
    api project(":core:core-ktx")
    implementation(libs.kotlinStdlib)

    implementation("androidx.emoji2:emoji2:1.3.0")
    implementation("androidx.emoji2:emoji2-views-helper:1.2.0")
    implementation("androidx.collection:collection:1.0.0")
    api("androidx.cursoradapter:cursoradapter:1.0.0")
    api("androidx.activity:activity:1.7.0")
    api project(":fragment:fragment")
    api("androidx.appcompat:appcompat-resources:1.6.1")
    api project(":drawerlayout:drawerlayout")
    implementation("androidx.lifecycle:lifecycle-runtime:2.6.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.1")
    implementation("androidx.profileinstaller:profileinstaller:1.3.1")
    implementation("androidx.resourceinspection:resourceinspection-annotation:1.0.1")
    api("androidx.savedstate:savedstate:1.2.1")

//    kapt("androidx.resourceinspection:resourceinspection-processor:1.0.1")
//
//    androidTestImplementation(libs.kotlinStdlib)
//    androidTestImplementation(libs.testExtJunit)
//    androidTestImplementation(libs.testCore)
//    androidTestImplementation(libs.testRunner)
//    androidTestImplementation(libs.testRules)
//    androidTestImplementation(libs.testUiautomator)
//    androidTestImplementation(libs.truth)
//    androidTestImplementation(libs.espressoCore, excludes.espresso)
//    androidTestImplementation(libs.mockitoCore, excludes.bytebuddy) // DexMaker has it's own MockMaker
//    androidTestImplementation(libs.dexmakerMockito, excludes.bytebuddy) // DexMaker has it's own MockMaker
//    androidTestImplementation("androidx.lifecycle:lifecycle-viewmodel:2.6.1")
//    androidTestImplementation("androidx.lifecycle:lifecycle-runtime-testing:2.6.1", {
//        // Needed to ensure that the same version of lifecycle-runtime-ktx
//        // is pulled into main and androidTest configurations. Otherwise,
//        // potentially leads to confusing errors about resolution
//        // ambiguity, especially from playground build which replaces
//        // project dependency with snapshot artifacts.
//        exclude group: "androidx.lifecycle", module: "lifecycle-runtime-ktx"
//    })
//    androidTestImplementation(project(":internal-testutils-runtime"))
//    androidTestImplementation(project(":internal-testutils-appcompat"), {
//        exclude group: "androidx.appcompat", module: "appcompat"
//        exclude group: "androidx.core", module: "core"
//    })
//    androidTestImplementation(libs.multidex)
//
//    testImplementation(libs.kotlinStdlib)
//    testImplementation(libs.testCore)
//    testImplementation(libs.junit)
//    testImplementation(libs.robolectric)
//
    lintPublish project(":appcompat:appcompat-lint")
}

android {
    defaultConfig {

        // This disables the builds tools automatic vector -> PNG generation
        generatedDensities = []
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
    }

   sourceSets {
        main.res.srcDirs += "src/main/res-public"
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
        noCompress "ttf"
    }

//    testOptions {
//        animationsDisabled = true
//
//        unitTests {
//            includeAndroidResources = true
//        }
//    }

    buildTypes.configureEach {
        consumerProguardFiles("proguard-rules.pro")
    }

//    useLibrary "android.test.runner"
//    useLibrary "android.test.base"
//    useLibrary "android.test.mock"
//    testNamespace "androidx.appcompat.test"

    namespace = "androidx.appcompat"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

}

ext {
    POM_NAME = "SESL AppCompat"
    POM_DESCRIPTION = "SESL variant of android jetpack androidx.appcompat:appcompat module." +
            " - Provides backwards-compatible implementations of UI-related Android SDK " +
            "functionality, including dark mode and Material theming."
}
