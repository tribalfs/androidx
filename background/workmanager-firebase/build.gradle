/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import android.support.LibraryGroups
import android.support.LibraryVersions
import android.support.SupportLibraryExtension

plugins {
    id("SupportAndroidLibraryPlugin")
}

android {
    defaultConfig {
        minSdkVersion flatfoot.min_sdk
    }

    buildTypes {
        release {
            proguardFiles 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        // This is needed due to a compatibility issue with espresso_core and play_services_base
        // Being resolved by GMSCore in b/64815250
        pickFirst 'protobuf.meta'
    }
}

dependencies {
    api project(":background:workmanager")
    api libs.firebase_jobdispatcher
    androidTestImplementation project(":background:workmanager")
    androidTestImplementation libs.espresso_core, { exclude module: 'support-annotations' }
    androidTestImplementation libs.mockito_core, { exclude group: 'net.bytebuddy' }
    // DexMaker has it"s own MockMaker
    androidTestImplementation libs.dexmaker_mockito, { exclude group: 'net.bytebuddy' }
}

createAndroidCheckstyle(project)

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def suffix = name.capitalize()
    project.tasks.create(name: "jar${suffix}", type: Jar){
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir
        destinationDir new File(project.buildDir, "libJar")
    }
}

version = LibraryVersions.WORKMANAGER.toString()
supportLibrary {
    name = "Android WorkManager Firebase"
    publish = true
    mavenGroup = LibraryGroups.WORKMANAGER
    inceptionYear = "2017"
    description = "Android WorkManager Firebase"
    url = SupportLibraryExtension.ARCHITECTURE_URL
}
