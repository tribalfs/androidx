/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.android.application") version "8.3.1" apply false
    id("com.android.library") version "8.3.1" apply false
    id("org.jetbrains.kotlin.android") version "1.9.10" apply false
}

apply from: new File("manifest.gradle")

/**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))


allprojects {
    tasks.withType(Javadoc).tap {
        configureEach {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
            options.addStringOption('charSet', 'UTF-8')
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

subprojects {

    project.plugins.whenPluginAdded { plugin ->
        def isAndroidLibrary = "com.android.build.gradle.LibraryPlugin" == plugin.class.name
        def isAndroidApp = "com.android.build.gradle.AppPlugin" == plugin.class.name
        def isAndroidTest = "com.android.build.gradle.TestPlugin" == plugin.class.name

        if (isAndroidLibrary || isAndroidApp || isAndroidTest) {
            project.android {
                compileSdk = rootProject.ext.compile_sdk
                defaultConfig.minSdk = rootProject.ext.min_sdk
                defaultConfig.targetSdk = rootProject.ext.target_sdk
                def versionInfoKey = "androidx." + project.projectDir.getName()
                def version_info = rootProject.ext.versions_metadata[versionInfoKey]
                defaultConfig.minSdk = version_info[3]

                if (isAndroidLibrary) {
                    defaultConfig.versionName = "${version_info[0]}+${version_info[1]}+${version_info[2]}"
                    println "set versionName=${defaultConfig.versionName}"

                    android {
                        lint {
                            baseline = file("lint-baseline.xml")
                        }
                    }

                    publishing {
                        singleVariant("release"){
                            withSourcesJar()
                            withJavadocJar()
                        }
                    }


                    afterEvaluate {
                        def JAVA_RESOURCES_TEMP_DIR = "$buildDir/javaResources"
                        def versionFileName = namespace + '_' + project.projectDir.getName() + '.version'
                        task writeVersionFile() {
                            def versionFileDir = JAVA_RESOURCES_TEMP_DIR + '/META-INF'
                            new File(versionFileDir).mkdirs()
                            new File(versionFileDir + '/' + versionFileName).text = defaultConfig.versionName + "\n"
                        }
                        println "writeVersionFile $defaultConfig.versionName >> $versionFileName"

                        libraryVariants.all {
                            it.processJavaResourcesProvider.get().dependsOn(writeVersionFile)
                        }

                        project.android.sourceSets.main.resources.srcDir JAVA_RESOURCES_TEMP_DIR
                    }

                }
            }
        }
        if (isAndroidLibrary) {

            project.afterEvaluate {
                publishing {
                    publications {
                        gpr(MavenPublication) {
                            version = android.defaultConfig.versionName
                            afterEvaluate {
                                from components.release
                            }

                        }
                    }

                    repositories {
                        maven {
                            name = "GitHubPackages"
                            /** Configure path of your package repository on Github
                             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
                             */
                            url = uri("https://maven.pkg.github.com/tribalfs/sesl-androidx")

                            credentials {
                                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
                                username = githubProperties['gpr.usr'] ?: System.getenv("gpr.usr")
                                password = githubProperties['gpr.key'] ?: System.getenv("gpr.key")
                            }
                        }
                    }
                }
            }
        }
    }

}