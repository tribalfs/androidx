/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import android.support.ModifiedProjectsReporter

def supportRoot = ext.supportRootFolder
task(reportModifications) {
    doLast {
        if (!rootProject.hasProperty("SHAs") && !rootProject.hasProperty("buildIds")) {
            throw new GradleException("You must specify SHAs range: -PSHAs=<rev1>...<rev2>"
                    + "or builds range: -PbuildIds=<buildId1>..<buildId2>")
        }
        def modificationsReporter = new ModifiedProjectsReporter()
        if (rootProject.hasProperty("SHAs")) {
            def range = SHAs.tokenize('...')
            if (range.size() != 2) {
                throw new GradleException("You must specify SHAs in format: <rev1>...<rev2>")
            }
            modificationsReporter.printModifiedProjectsSHAs(supportRoot, range[0], range[1], rootProject)
        }

        if (rootProject.hasProperty("buildIds")) {
            def range = buildIds.tokenize('...')
            if (range.size() != 2) {
                throw new GradleException("You must specify builds in format: <buildId1>..<buildId2")
            }
            modificationsReporter.printModifiedProjectsbyBuildIds(supportRoot, range[0].toInteger(),
                    range[1].toInteger(), rootProject)
        }
    }
}