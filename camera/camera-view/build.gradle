/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.Publish

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("kotlin-android")
}

apply(from: "dependencies.gradle")

dependencies {
    api("androidx.lifecycle:lifecycle-common:2.0.0")
    api("androidx.annotation:annotation:1.2.0")
    api("androidx.camera:camera-core:${VIEW_ATOMIC_GROUP_PINNED_VER}")
    implementation("androidx.camera:camera-lifecycle:${VIEW_ATOMIC_GROUP_PINNED_VER}")
    implementation("androidx.annotation:annotation-experimental:1.1.0-rc01")
    implementation(GUAVA_LISTENABLE_FUTURE)
    implementation("androidx.core:core:1.3.2")
    implementation("androidx.concurrent:concurrent-futures:1.0.0")
    implementation(AUTO_VALUE_ANNOTATIONS)
    implementation("androidx.appcompat:appcompat:1.1.0")
    // Added for annotation-experimental
    compileOnly(KOTLIN_STDLIB)

    annotationProcessor(AUTO_VALUE)

    testImplementation(ANDROIDX_TEST_RUNNER)
    testImplementation(MOCKITO_CORE)
    testImplementation(ROBOLECTRIC)
    testImplementation(KOTLIN_STDLIB)
    testImplementation(TRUTH)
    testImplementation(ANDROIDX_TEST_RULES)
    testImplementation(ANDROIDX_TEST_CORE)
    testImplementation(project(":camera:camera-testing")) {
        // Ensure camera-testing does not pull in camera-core project dependency which will
        // override pinned dependency.
        exclude(group:"androidx.camera", module:"camera-core")
    }

    androidTestImplementation(project(":camera:camera-testing"))  {
        // Ensure camera-testing does not pull in camera-core project dependency which will
        // override pinned dependency.
        exclude(group:"androidx.camera", module:"camera-core")
    }
    androidTestImplementation(MOCKITO_CORE)
    androidTestImplementation(ESPRESSO_CORE)
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(ANDROIDX_TEST_CORE)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ANDROIDX_TEST_RULES)
    androidTestImplementation(ANDROIDX_TEST_UIAUTOMATOR)
    androidTestImplementation(KOTLIN_STDLIB)
    androidTestImplementation(TRUTH)
    androidTestImplementation("androidx.camera:camera-camera2:${VIEW_ATOMIC_GROUP_PINNED_VER}")
    androidTestImplementation(MOCKITO_CORE, excludes.bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation(DEXMAKER_MOCKITO, excludes.bytebuddy) // DexMaker has it's own MockMaker
}
android {
    defaultConfig {
        minSdkVersion 21
    }
    testOptions.unitTests.includeAndroidResources = true
}
androidx {
    name = "Jetpack Camera View Library"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.CAMERA_VIEW
    mavenGroup = LibraryGroups.CAMERA
    inceptionYear = "2019"
    description = "UI tools for the Jetpack Camera Library, a library providing a consistent and " +
            "reliable camera foundation that enables great camera driven experiences across all " +
            "of Android."
}
