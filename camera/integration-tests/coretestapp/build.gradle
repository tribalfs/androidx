/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
}

android {
    defaultConfig {
        applicationId "androidx.camera.integration.core"
        minSdkVersion 21
        versionCode 1
        multiDexEnabled true
        testInstrumentationRunnerArgument "listener", "leakcanary.FailAnnotatedTestOnLeakRunListener "
    }

    sourceSets {
        main.manifest.srcFile 'src/main/AndroidManifest.xml'
        main.java.srcDirs = ['src/main/java']
        main.java.excludes = ['**/build/**']
        main.java.includes = ['**/*.java']
        main.res.srcDirs = ['src/main/res']
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            pseudoLocalesEnabled true
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"))
        }
    }
}

dependencies {
    // Internal library
    implementation(project(":camera:camera-camera2"))
    implementation(project(":camera:camera-core"))
    implementation(project(":camera:camera-lifecycle"))
    implementation(project(":lifecycle:lifecycle-extensions"))
    implementation("androidx.concurrent:concurrent-futures:1.0.0")

    // Android Support Library
    api(CONSTRAINT_LAYOUT, { transitive = true })
    implementation("androidx.appcompat:appcompat:1.1.0")
    implementation(GUAVA_ANDROID)
    implementation(ESPRESSO_IDLING_RESOURCE)

    // 3P library
    debugImplementation(LEAKCANARY)

    // Testing framework
    androidTestImplementation(ANDROIDX_TEST_CORE)
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(ANDROIDX_TEST_RULES)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ANDROIDX_TEST_UIAUTOMATOR)
    androidTestImplementation(ESPRESSO_CORE)
    androidTestImplementation(ESPRESSO_IDLING_RESOURCE)
    androidTestImplementation(KOTLIN_STDLIB)
    androidTestImplementation(KOTLIN_COROUTINES_ANDROID)
    androidTestImplementation(LEAKCANARY)
    androidTestImplementation(LEAKCANARY_INSTRUMENTATION)
    androidTestImplementation(TRUTH)
    androidTestImplementation(project(":camera:camera-testing"))
    androidTestImplementation(project(":concurrent:concurrent-futures"))
    androidTestImplementation(project(":concurrent:concurrent-futures-ktx"))
    androidTestImplementation(project(':internal-testutils-runtime'))

}

