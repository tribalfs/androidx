import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryGroups
import androidx.build.LibraryVersions

plugins {
    id("SupportAndroidLibraryPlugin")
}

dependencies {
    api(project(":appcompat"))
    api("androidx.cardview:cardview:1.0.0")
    api("androidx.coordinatorlayout:coordinatorlayout:1.0.0")
    api(project(":annotation"))
    api(project(":recyclerview"))
    api("androidx.gridlayout:gridlayout:1.0.0")
    api("androidx.preference:preference:1.0.0")
    api(CONSTRAINT_LAYOUT, { transitive = true })
    api(MATERIAL)

    androidTestImplementation(TEST_EXT_JUNIT)
    androidTestImplementation(TEST_CORE)
    androidTestImplementation(TEST_RUNNER)
    androidTestImplementation(TEST_RULES)
    androidTestImplementation(ESPRESSO_CORE, libs.exclude_for_espresso)
    androidTestImplementation(ESPRESSO_CONTRIB, libs.exclude_for_espresso)
    androidTestImplementation(MOCKITO_CORE, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker
    androidTestImplementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker

    testImplementation(JUNIT)
    testImplementation(TEST_EXT_JUNIT)
    testImplementation(TEST_CORE)
    testImplementation(TEST_RUNNER)
    testImplementation(MOCKITO_CORE)

    compileOnly fileTree(dir: '../stubs', include: ['android.car.jar'])
    // androidTest uses android.car APIs to provide test utility.
    androidTestCompileOnly fileTree(dir: '../stubs', include: ['android.car.jar'])
}

android {
    defaultConfig {
        minSdkVersion 24
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.res.srcDirs 'res', 'res-public'
    }
}

supportLibrary {
    name = "Android Car Support UI"
    publish = true
    mavenVersion = LibraryVersions.CAR
    mavenGroup = LibraryGroups.CAR
    inceptionYear = "2017"
    description = "Android Car Support UI"
    failOnUncheckedWarnings = false
}
