//
// Source
// ------------------------------------------

@file:OptIn(
  InternalComposeApi::class,
)
package test

import androidx.compose.runtime.InternalComposeApi
import androidx.compose.runtime.ComposeCompilerApi
import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable


val bar: Int @Composable get() { return 123 }

@NonRestartableComposable @Composable fun Example() {
    bar
}

//
// Transformed IR
// ------------------------------------------

val bar: Int
  @Composable @JvmName(name = "getBar")
  get() {
    %composer.startReplaceableGroup(<>)
    sourceInformation(%composer, "C:Test.kt#2487m")
    if (isTraceInProgress()) {
      traceEventStart(<>, %changed, -1, <>)
    }
    val tmp0 = 123
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    %composer.endReplaceableGroup()
    return tmp0
  }
@NonRestartableComposable
@Composable
fun Example(%composer: Composer?, %changed: Int) {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "C(Example)<bar>:Test.kt#2487m")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  <get-bar>(%composer, 0)
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endReplaceableGroup()
}
