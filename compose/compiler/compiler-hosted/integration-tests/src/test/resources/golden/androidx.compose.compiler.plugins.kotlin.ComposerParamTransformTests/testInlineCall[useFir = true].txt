//
// Source
// ------------------------------------------

@file:OptIn(
  InternalComposeApi::class,
)
package test

import androidx.compose.runtime.InternalComposeApi
import androidx.compose.runtime.ComposeCompilerApi
import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable


@Composable inline fun Example(content: @Composable () -> Unit) {
    content()
}

@NonRestartableComposable
@Composable fun Test() {
    Example {}
}

//
// Transformed IR
// ------------------------------------------

@Composable
@ComposableInferredTarget(scheme = "[0[0]]")
fun Example(content: Function2<Composer, Int, Unit>, %composer: Composer?, %changed: Int) {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "CC(Example)<conten...>:Test.kt#2487m")
  content(%composer, 0b1110 and %changed)
  %composer.endReplaceableGroup()
}
@NonRestartableComposable
@Composable
fun Test(%composer: Composer?, %changed: Int) {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "C(Test)<Exampl...>:Test.kt#2487m")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  Example({ %composer: Composer?, %changed: Int ->
    sourceInformationMarkerStart(%composer, <>, "C:Test.kt#2487m")
    Unit
    sourceInformationMarkerEnd(%composer)
  }, %composer, 0)
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endReplaceableGroup()
}
