//
// Source
// ------------------------------------------

@file:OptIn(
  InternalComposeApi::class,
)
package test

import androidx.compose.runtime.InternalComposeApi
import androidx.compose.runtime.ComposeCompilerApi
import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable


@NonRestartableComposable
@Composable
fun Wat() {}

@NonRestartableComposable
@Composable
fun Foo(x: Int) {
    Wat()
    @NonRestartableComposable
    @Composable fun goo() { Wat() }
    class Bar {
        @NonRestartableComposable
        @Composable fun baz() { Wat() }
    }
    goo()
    Bar().baz()
}

//
// Transformed IR
// ------------------------------------------

@NonRestartableComposable
@Composable
fun Wat(%composer: Composer?, %changed: Int) {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "C(Wat):Test.kt#2487m")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endReplaceableGroup()
}
@NonRestartableComposable
@Composable
fun Foo(x: Int, %composer: Composer?, %changed: Int) {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "C(Foo)<Wat()>,<goo()>,<baz()>:Test.kt#2487m")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  Wat(%composer, 0)
  @NonRestartableComposable
  @Composable
  fun goo(%composer: Composer?, %changed: Int) {
    %composer.startReplaceableGroup(<>)
    sourceInformation(%composer, "C(goo)<Wat()>:Test.kt#2487m")
    if (isTraceInProgress()) {
      traceEventStart(<>, %changed, -1, <>)
    }
    Wat(%composer, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    %composer.endReplaceableGroup()
  }
  class Bar {
    @NonRestartableComposable
    @Composable
    fun baz(%composer: Composer?, %changed: Int) {
      %composer.startReplaceableGroup(<>)
      sourceInformation(%composer, "C(baz)<Wat()>:Test.kt#2487m")
      if (isTraceInProgress()) {
        traceEventStart(<>, %changed, -1, <>)
      }
      Wat(%composer, 0)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
      %composer.endReplaceableGroup()
    }
  }
  goo(%composer, 0)
  Bar().baz(%composer, 0)
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endReplaceableGroup()
}
