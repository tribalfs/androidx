//
// Source
// ------------------------------------------

import androidx.compose.runtime.*

@Composable
private fun Test(param: String?): String? {
    return Test(
        if (param == null) {
           Test(
                if (param == null) {
                    remember { "" }
                } else {
                    null
                }
           )
        } else {
            null
        },
    )
}

//
// Transformed IR
// ------------------------------------------

@Composable
private fun Test(param: String?, %composer: Composer?, %changed: Int): String? {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "C(Test)<Test(>:Test.kt")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  val tmp0 = Test(<block>{
    %composer.startReplaceableGroup(<>)
    sourceInformation(%composer, "<Test(>")
    val tmp2_group = if (param == null) {
      Test(<block>{
        %composer.startReplaceableGroup(<>)
        sourceInformation(%composer, "<rememb...>")
        val tmp1_group = if (param == null) {
          remember({
            ""
          }, %composer, 0)
        } else {
          null
        }
        %composer.endReplaceableGroup()
        tmp1_group
      }, %composer, 0)
    } else {
      null
    }
    %composer.endReplaceableGroup()
    tmp2_group
  }, %composer, 0)
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endReplaceableGroup()
  return tmp0
}
