import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable
import androidx.compose.runtime.ReadOnlyComposable


@Composable fun Test(x: Int) = A()

/********
 * TRANSFORMED
 ********/

@Composable
fun Test(x: Int, %composer: Composer?, %changed: Int): Int {
  %composer.startReplaceableGroup(<>)
  sourceInformation(%composer, "C(Test)<A()>:Test.kt")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  val tmp0 = A(0, 0, %composer, 0, 0b0011)
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endReplaceableGroup()
  return tmp0
}
