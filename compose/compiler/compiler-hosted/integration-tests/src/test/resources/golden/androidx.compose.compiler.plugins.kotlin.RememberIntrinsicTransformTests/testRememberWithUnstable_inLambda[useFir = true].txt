//
// Source
// ------------------------------------------

import androidx.compose.runtime.*

@Composable fun Test(param: String, unstable: List<*>) {
    Wrapper {
        remember(param, unstable) { param }
    }
}

//
// Transformed IR
// ------------------------------------------

@Composable
fun Test(param: String, unstable: List<*>, %composer: Composer?, %changed: Int) {
  %composer = %composer.startRestartGroup(<>)
  sourceInformation(%composer, "C(Test)<Wrappe...>:Test.kt")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  Wrapper(composableLambda(%composer, <>, true) { %composer: Composer?, %changed: Int ->
    sourceInformation(%composer, "C<rememb...>:Test.kt")
    if (%changed and 0b1011 != 0b0010 || !%composer.skipping) {
      if (isTraceInProgress()) {
        traceEventStart(<>, %changed, -1, <>)
      }
      %composer.startReplaceableGroup(<>)
      sourceInformation(%composer, "CC(remember):Test.kt#9igjgp")
      %composer.cache(%composer.changed(param) or %composer.changed(unstable)) {
        param
      }
      %composer.endReplaceableGroup()
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      %composer.skipToGroupEnd()
    }
  }, %composer, 0b0110)
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  %composer.endRestartGroup()?.updateScope { %composer: Composer?, %force: Int ->
    Test(param, unstable, %composer, updateChangedFlags(%changed or 0b0001))
  }
}
