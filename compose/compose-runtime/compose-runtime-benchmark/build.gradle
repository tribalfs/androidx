/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXUiPlugin")
    id("kotlin-android")
}

android {
    defaultConfig {
        minSdkVersion 21
    }
    lintOptions {
        disable("SyntheticAccessor")
    }
    buildTypes {
        debug {
            testCoverageEnabled = false
        }
        release {
            testCoverageEnabled = false
        }
    }
}

dependencies {
    kotlinPlugin project(path: ":compose:compose-compiler", configuration: "embeddablePlugin")

    androidTestImplementation(project(":compose:compose-runtime"))
    androidTestImplementation(project(":ui:ui-core"))
    androidTestImplementation(project(":ui:ui-framework"))
    androidTestImplementation(project(":ui:ui-layout"))
    androidTestImplementation(project(":ui:ui-material"))
    androidTestImplementation(project(":ui:ui-platform"))
    androidTestImplementation(project(":ui:ui-foundation"))

    androidTestImplementation(JUNIT)
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(ANDROIDX_TEST_CORE)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ANDROIDX_TEST_RULES)
    androidTestImplementation(KOTLIN_STDLIB)
    androidTestImplementation(project(":benchmark"))
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        useIR = true
    }
}
