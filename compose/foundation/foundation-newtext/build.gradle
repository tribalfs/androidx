/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.AndroidXComposePlugin
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

dependencies {

    if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        api("androidx.annotation:annotation:1.1.0")
        api("androidx.compose.animation:animation:1.2.1")
        api("androidx.compose.runtime:runtime:1.3.1")
        api(project(":compose:ui:ui"))

        implementation(libs.kotlinStdlibCommon)
        implementation(project(':compose:foundation:foundation'))
        implementation(project(":compose:foundation:foundation-layout"))
        implementation(project(":emoji2:emoji2"))

        implementation("androidx.compose.ui:ui-text:1.2.1")
        implementation("androidx.compose.ui:ui-util:1.2.1")

        lintChecks(project(":compose:foundation:foundation-lint"))
        lintPublish(project(":compose:foundation:foundation-lint"))

        testImplementation(project(":compose:test-utils"))
        testImplementation(libs.testRules)
        testImplementation(libs.testRunner)
        testImplementation(libs.junit)
        testImplementation(libs.truth)
        testImplementation(libs.kotlinTest)
        testImplementation(libs.mockitoCore4)
        testImplementation(libs.mockitoKotlin4)

        androidTestImplementation(project(":compose:test-utils"))
        androidTestImplementation(project(":internal-testutils-fonts"))
        androidTestImplementation(project(":internal-testutils-runtime"))
        androidTestImplementation(libs.testRules)
        androidTestImplementation(libs.testRunner)
        androidTestImplementation(libs.testMonitor)
        androidTestImplementation(libs.junit)
        androidTestImplementation(libs.kotlinTest)
        androidTestImplementation(libs.truth)
        androidTestImplementation(libs.dexmakerMockito)
        androidTestImplementation(libs.mockitoCore)
        androidTestImplementation(libs.mockitoKotlin)
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    androidXComposeMultiplatform {
        android()
        desktop()
    }

    kotlin {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinStdlibCommon)
                api(project(':compose:animation:animation'))
                api(project(':compose:runtime:runtime'))
                api(project(':compose:ui:ui'))

                implementation(project(":compose:ui:ui-text"))
                implementation(project(":compose:ui:ui-util"))

                implementation(project(':compose:foundation:foundation'))
                implementation(project(':compose:foundation:foundation-layout'))
            }
            androidMain.dependencies {
                api("androidx.annotation:annotation:1.1.0")
                implementation(project(":emoji2:emoji2"))
            }

            desktopMain.dependencies {
                implementation(libs.kotlinStdlib)
            }

            androidTest.dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.mockitoCore4)
                implementation(libs.truth)
                implementation(libs.kotlinReflect)
                implementation(libs.mockitoKotlin4)
            }

            commonTest.dependencies {
                implementation(libs.kotlinTest)
                implementation(libs.kotlinCoroutinesTest)
            }

            androidAndroidTest.dependencies {
                implementation(project(":compose:test-utils"))
                implementation(project(":internal-testutils-fonts"))
                implementation(project(":internal-testutils-runtime"))

                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.testMonitor)
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(libs.dexmakerMockito)
                implementation(libs.mockitoCore)
                implementation(libs.mockitoKotlin)
            }
        }
    }
}

android {
    namespace "androidx.compose.foundation.newtext"
}

androidx {
    name = "Compose Foundation NewText"
    type = LibraryType.UNSET /* This module will never be published */
    inceptionYear = "2022"
    description = "Working module for developing Text modifier"
}
