<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.0-alpha07" type="baseline" client="gradle" dependencies="false" name="AGP (8.0.0-beta03)" variant="all" version="8.1.0-alpha07">

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Message: Java heap space&#xA;Stack: `OutOfMemoryError:OpenAddressLinearProbingHashTable.rehash(OpenAddressLinearProbingHashTable.kt:93)←OpenAddressLinearProbingHashTable.put(OpenAddressLinearProbingHashTable.kt:83)←SlicedMapImpl.put(SlicedMapImpl.java:79)←BindingTraceContext.record(BindingTraceContext.java:137)←CliBindingTraceForLint.record(Fe10UastEnvironment.kt:388)←QualifiedExpressionResolver.storeResult(QualifiedExpressionResolver.kt:750)←QualifiedExpressionResolver.access$storeResult(QualifiedExpressionResolver.kt:53)←QualifiedExpressionResolver$processSingleImport$1.invoke(QualifiedExpressionResolver.kt:346)←QualifiedExpressionResolver$processSingleImport$1.invoke(QualifiedExpressionResolver.kt:344)←CallOnceFunction.invoke(CallOnceFunction.kt:13)←LazyExplicitImportScope.storeReferencesToDescriptors$frontend(LazyExplicitImportScope.kt:120)←LazyImportResolverForKtImportDirective$forceResolveImportDirective$1.invoke(LazyImportScope.kt:172)←LazyImportResolverForKtImportDirective$forceResolveImportDirective$1.invoke(LazyImportScope.kt:169)←LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:578)←LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:651)←LazyImportResolverForKtImportDirective.forceResolveImport(LazyImportScope.kt:231)←LazyImportResolverForKtImportDirective$forceResolveNonDefaultImportsTask$1.invoke(LazyImportScope.kt:184)←LazyImportResolverForKtImportDirective$forceResolveNonDefaultImportsTask$1.invoke(LazyImportScope.kt:181)←LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:408)←LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:527)←LazyImportResolverForKtImportDirective.forceResolveNonDefaultImports(LazyImportScope.kt:214)←FileScopeFactory$FilesScopesBuilder$importResolver$1.forceResolveNonDefaultImports(FileScopeFactory.kt:170)←LazyTopDownAnalyzer.resolveImportsInFile(LazyTopDownAnalyzer.kt:252)←LazyTopDownAnalyzer.resolveImportsInAllFiles(LazyTopDownAnalyzer.kt:247)←LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:229)←LazyTopDownAnalyzer.analyzeDeclarations$default(LazyTopDownAnalyzer.kt:58)←TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.kt:130)←TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(TopDownAnalyzerFacadeForJVM.kt:99)←Fe10UastEnvironment.analyzeFiles(Fe10UastEnvironment.kt:170)←LintCliClient$LintCliUastParser.prepare(LintCliClient.kt:1850)←UastParser.prepare$default(UastParser.kt:59)←LintDriver.prepareUast(LintDriver.kt:2107)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="material-icons-core"/>
    </issue>

</issues>
