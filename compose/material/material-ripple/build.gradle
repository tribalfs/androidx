/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.AndroidXUiPlugin
import androidx.build.LibraryGroups
import androidx.build.LibraryType

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXUiPlugin")
}

AndroidXUiPlugin.applyAndConfigureKotlinPlugin(project)

dependencies {
    kotlinPlugin(project(":compose:compiler:compiler"))

    if(!AndroidXUiPlugin.isMultiplatformEnabled(project)) {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block below
         */
        api(project(":compose:foundation:foundation"))
        api(project(":compose:runtime:runtime"))

        implementation(KOTLIN_STDLIB_COMMON)
        implementation(project(":compose:animation:animation"))
        implementation(project(":compose:ui:ui-util"))

        testImplementation(ANDROIDX_TEST_RULES)
        testImplementation(ANDROIDX_TEST_RUNNER)
        testImplementation(JUNIT)
        testImplementation(TRUTH)

        androidTestImplementation(project(":compose:test-utils"))
        androidTestImplementation(ANDROIDX_TEST_RULES)
        androidTestImplementation(ANDROIDX_TEST_RUNNER)
        androidTestImplementation(JUNIT)
        androidTestImplementation(TRUTH)
    }
}

if(AndroidXUiPlugin.isMultiplatformEnabled(project)) {
    kotlin {
        android()
        jvm("desktop")

        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(KOTLIN_STDLIB_COMMON)
                api(project(":compose:foundation:foundation"))
                api(project(":compose:runtime:runtime"))

                implementation(project(":compose:animation:animation"))
                implementation(project(":compose:ui:ui-util"))
            }

            desktopMain.dependsOn(jvmMain)

            test.dependencies {
                implementation(ANDROIDX_TEST_RULES)
                implementation(ANDROIDX_TEST_RUNNER)
                implementation(JUNIT)
                implementation(TRUTH)
            }

            androidAndroidTest.dependencies {
                implementation(project(":compose:test-utils"))

                implementation(ANDROIDX_TEST_RULES)
                implementation(ANDROIDX_TEST_RUNNER)
                implementation(JUNIT)
                implementation(TRUTH)
            }
        }
    }
}

androidx {
    name = "Compose Material Ripple"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.Compose.MATERIAL
    inceptionYear = "2020"
    description = "Material ripple used to build interactive components"
    // Disable strict API mode for MPP builds as it will fail to compile androidAndroidTest
    // sources, as it doesn't understand that they are tests and thinks they should have explicit
    // visibility
    legacyDisableKotlinStrictApiMode = AndroidXUiPlugin.isMultiplatformEnabled(project)
}
