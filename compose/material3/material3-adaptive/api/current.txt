// Signature format: 4.0
package androidx.compose.material3.adaptive {

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public interface AdaptStrategy {
    method public String adapt();
    field public static final androidx.compose.material3.adaptive.AdaptStrategy.Companion Companion;
  }

  public static final class AdaptStrategy.Companion {
    method public androidx.compose.material3.adaptive.AdaptStrategy getHide();
    property public final androidx.compose.material3.adaptive.AdaptStrategy Hide;
  }

  public final class AndroidPosture_androidKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.Posture calculatePosture(java.util.List<? extends androidx.window.layout.FoldingFeature> foldingFeatures);
  }

  public final class AndroidWindowInfo_androidKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.adaptive.WindowAdaptiveInfo calculateWindowAdaptiveInfo();
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<java.util.List<androidx.window.layout.FoldingFeature>> foldingFeaturesAsState();
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<androidx.compose.ui.unit.IntSize> windowSizeAsState();
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This material3-adaptive API is experimental and is likely to change or to be" + "removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalMaterial3AdaptiveApi {
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class GutterSizes {
    ctor public GutterSizes(float outerVertical, float innerVertical, optional float outerHorizontal, optional float innerHorizontal);
    method public float getInnerHorizontal();
    method public float getInnerVertical();
    method public float getOuterHorizontal();
    method public float getOuterVertical();
    property public final float innerHorizontal;
    property public final float innerVertical;
    property public final float outerHorizontal;
    property public final float outerVertical;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class HingePolicy {
    field public static final androidx.compose.material3.adaptive.HingePolicy.Companion Companion;
  }

  public static final class HingePolicy.Companion {
    method public int getAlwaysAvoid();
    method public int getAvoidOccluding();
    method public int getAvoidSeparating();
    method public int getNeverAvoid();
    property public final int AlwaysAvoid;
    property public final int AvoidOccluding;
    property public final int AvoidSeparating;
    property public final int NeverAvoid;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ListDetailPaneScaffoldDefaults {
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies(optional androidx.compose.material3.adaptive.AdaptStrategy detailPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy listPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy extraPaneAdaptStrategy);
    field public static final androidx.compose.material3.adaptive.ListDetailPaneScaffoldDefaults INSTANCE;
  }

  public final class ListDetailPaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void ListDetailPaneScaffold(androidx.compose.material3.adaptive.ListDetailPaneScaffoldState layoutState, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit> listPane, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit>? extraPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit> detailPane);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.adaptive.ListDetailPaneScaffoldState rememberListDetailPaneScaffoldState(optional androidx.compose.material3.adaptive.PaneScaffoldDirective scaffoldDirective, optional androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies, optional java.util.List<? extends androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole> initialFocusHistory);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public enum ListDetailPaneScaffoldRole {
    method public static androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole[] values();
    enum_constant public static final androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole Detail;
    enum_constant public static final androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole Extra;
    enum_constant public static final androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole List;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public interface ListDetailPaneScaffoldState {
    method public boolean canNavigateBack(optional boolean layoutValueMustChange);
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldValue getLayoutValue();
    method public androidx.compose.material3.adaptive.PaneScaffoldDirective getScaffoldDirective();
    method public boolean navigateBack(optional boolean popUntilLayoutValueChange);
    method public void navigateTo(androidx.compose.material3.adaptive.ListDetailPaneScaffoldRole pane);
    property public abstract androidx.compose.material3.adaptive.ThreePaneScaffoldValue layoutValue;
    property public abstract androidx.compose.material3.adaptive.PaneScaffoldDirective scaffoldDirective;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class NavigationSuiteColors {
    method public long getNavigationBarContainerColor();
    method public long getNavigationBarContentColor();
    method public long getNavigationDrawerContainerColor();
    method public long getNavigationDrawerContentColor();
    method public long getNavigationRailContainerColor();
    method public long getNavigationRailContentColor();
    property public final long navigationBarContainerColor;
    property public final long navigationBarContentColor;
    property public final long navigationDrawerContainerColor;
    property public final long navigationDrawerContentColor;
    property public final long navigationRailContainerColor;
    property public final long navigationRailContentColor;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class NavigationSuiteDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.adaptive.NavigationSuiteColors colors(optional long navigationBarContainerColor, optional long navigationBarContentColor, optional long navigationRailContainerColor, optional long navigationRailContentColor, optional long navigationDrawerContainerColor, optional long navigationDrawerContentColor);
    field public static final androidx.compose.material3.adaptive.NavigationSuiteDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class NavigationSuiteItemColors {
    method public androidx.compose.material3.NavigationBarItemColors getNavigationBarItemColors();
    method public androidx.compose.material3.NavigationDrawerItemColors getNavigationDrawerItemColors();
    method public androidx.compose.material3.NavigationRailItemColors getNavigationRailItemColors();
    property public final androidx.compose.material3.NavigationBarItemColors navigationBarItemColors;
    property public final androidx.compose.material3.NavigationDrawerItemColors navigationDrawerItemColors;
    property public final androidx.compose.material3.NavigationRailItemColors navigationRailItemColors;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class NavigationSuiteScaffoldDefaults {
    method public String calculateFromAdaptiveInfo(androidx.compose.material3.adaptive.WindowAdaptiveInfo adaptiveInfo);
    field public static final androidx.compose.material3.adaptive.NavigationSuiteScaffoldDefaults INSTANCE;
  }

  public final class NavigationSuiteScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void NavigationSuite(optional androidx.compose.ui.Modifier modifier, optional String layoutType, optional androidx.compose.material3.adaptive.NavigationSuiteColors colors, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.NavigationSuiteScope,kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void NavigationSuiteScaffold(kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.NavigationSuiteScope,kotlin.Unit> navigationSuiteItems, optional androidx.compose.ui.Modifier modifier, optional String layoutType, optional long containerColor, optional long contentColor, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void NavigationSuiteScaffoldLayout(kotlin.jvm.functions.Function0<kotlin.Unit> navigationSuite, optional String layoutType, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public interface NavigationSuiteScope {
    method public void item(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional boolean alwaysShowLabel, optional kotlin.jvm.functions.Function0<kotlin.Unit>? badge, optional androidx.compose.material3.adaptive.NavigationSuiteItemColors? colors, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @kotlin.jvm.JvmInline public final value class NavigationSuiteType {
    field public static final androidx.compose.material3.adaptive.NavigationSuiteType.Companion Companion;
  }

  public static final class NavigationSuiteType.Companion {
    method public String getNavigationBar();
    method public String getNavigationDrawer();
    method public String getNavigationRail();
    property public final String NavigationBar;
    property public final String NavigationDrawer;
    property public final String NavigationRail;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @kotlin.jvm.JvmInline public final value class PaneAdaptedValue {
    field public static final androidx.compose.material3.adaptive.PaneAdaptedValue.Companion Companion;
  }

  public static final class PaneAdaptedValue.Companion {
    method public String getExpanded();
    method public String getHidden();
    property public final String Expanded;
    property public final String Hidden;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class PaneScaffoldDirective {
    ctor public PaneScaffoldDirective(int maxHorizontalPartitions, androidx.compose.material3.adaptive.GutterSizes gutterSizes, int maxVerticalPartitions, java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getExcludedBounds();
    method public androidx.compose.material3.adaptive.GutterSizes getGutterSizes();
    method public int getMaxHorizontalPartitions();
    method public int getMaxVerticalPartitions();
    property public final java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds;
    property public final androidx.compose.material3.adaptive.GutterSizes gutterSizes;
    property public final int maxHorizontalPartitions;
    property public final int maxVerticalPartitions;
  }

  public final class PaneScaffoldDirectiveKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.PaneScaffoldDirective calculateDensePaneScaffoldDirective(androidx.compose.material3.adaptive.WindowAdaptiveInfo windowAdaptiveInfo, optional int hingePolicy);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.PaneScaffoldDirective calculateStandardPaneScaffoldDirective(androidx.compose.material3.adaptive.WindowAdaptiveInfo windowAdaptiveInfo, optional int hingePolicy);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public interface PaneScaffoldScope {
    method public androidx.compose.ui.Modifier preferredWidth(androidx.compose.ui.Modifier, float width);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class Posture {
    ctor public Posture(optional boolean isTabletop, optional java.util.List<androidx.compose.ui.geometry.Rect> separatingHingeBounds, optional java.util.List<androidx.compose.ui.geometry.Rect> occludingHingeBounds, optional java.util.List<androidx.compose.ui.geometry.Rect> allHingeBounds);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getAllHingeBounds();
    method public java.util.List<androidx.compose.ui.geometry.Rect> getOccludingHingeBounds();
    method public java.util.List<androidx.compose.ui.geometry.Rect> getSeparatingHingeBounds();
    method public boolean isTabletop();
    property public final java.util.List<androidx.compose.ui.geometry.Rect> allHingeBounds;
    property public final boolean isTabletop;
    property public final java.util.List<androidx.compose.ui.geometry.Rect> occludingHingeBounds;
    property public final java.util.List<androidx.compose.ui.geometry.Rect> separatingHingeBounds;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class SupportingPaneScaffoldDefaults {
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies(optional androidx.compose.material3.adaptive.AdaptStrategy mainPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy supportingPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy extraPaneAdaptStrategy);
    field public static final androidx.compose.material3.adaptive.SupportingPaneScaffoldDefaults INSTANCE;
  }

  public final class SupportingPaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void SupportingPaneScaffold(androidx.compose.material3.adaptive.SupportingPaneScaffoldState scaffoldState, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit> supportingPane, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit>? extraPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit> mainPane);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.adaptive.SupportingPaneScaffoldState rememberSupportingPaneScaffoldState(optional androidx.compose.material3.adaptive.PaneScaffoldDirective scaffoldDirective, optional androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies, optional java.util.List<? extends androidx.compose.material3.adaptive.SupportingPaneScaffoldRole> initialFocusHistory);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public enum SupportingPaneScaffoldRole {
    method public static androidx.compose.material3.adaptive.SupportingPaneScaffoldRole valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static androidx.compose.material3.adaptive.SupportingPaneScaffoldRole[] values();
    enum_constant public static final androidx.compose.material3.adaptive.SupportingPaneScaffoldRole Extra;
    enum_constant public static final androidx.compose.material3.adaptive.SupportingPaneScaffoldRole Main;
    enum_constant public static final androidx.compose.material3.adaptive.SupportingPaneScaffoldRole Supporting;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public interface SupportingPaneScaffoldState {
    method public boolean canNavigateBack(optional boolean layoutValueMustChange);
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldValue getLayoutValue();
    method public androidx.compose.material3.adaptive.PaneScaffoldDirective getScaffoldDirective();
    method public boolean navigateBack(optional boolean popUntilLayoutValueChange);
    method public void navigateTo(androidx.compose.material3.adaptive.SupportingPaneScaffoldRole pane);
    property public abstract androidx.compose.material3.adaptive.ThreePaneScaffoldValue layoutValue;
    property public abstract androidx.compose.material3.adaptive.PaneScaffoldDirective scaffoldDirective;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ThreePaneScaffoldAdaptStrategies {
    ctor public ThreePaneScaffoldAdaptStrategies(androidx.compose.material3.adaptive.AdaptStrategy primaryPaneAdaptStrategy, androidx.compose.material3.adaptive.AdaptStrategy secondaryPaneAdaptStrategy, androidx.compose.material3.adaptive.AdaptStrategy tertiaryPaneAdaptStrategy);
    method public operator androidx.compose.material3.adaptive.AdaptStrategy get(androidx.compose.material3.adaptive.ThreePaneScaffoldRole role);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneScaffoldArrangement {
    ctor public ThreePaneScaffoldArrangement(androidx.compose.material3.adaptive.ThreePaneScaffoldRole firstPane, androidx.compose.material3.adaptive.ThreePaneScaffoldRole secondPane, androidx.compose.material3.adaptive.ThreePaneScaffoldRole thirdPane);
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldRole getFirstPane();
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldRole getSecondPane();
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldRole getThirdPane();
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldRole firstPane;
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldRole secondPane;
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldRole thirdPane;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ThreePaneScaffoldDefaults {
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies(optional androidx.compose.material3.adaptive.AdaptStrategy primaryPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy secondaryPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy tertiaryPaneAdaptStrategy);
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement getListDetailLayoutArrangement();
    method public float getSecondaryPanePreferredWidth();
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement getSupportingPaneLayoutArrangement();
    method public float getTertiaryPanePreferredWidth();
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement ListDetailLayoutArrangement;
    property public final float SecondaryPanePreferredWidth;
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement SupportingPaneLayoutArrangement;
    property public final float TertiaryPanePreferredWidth;
    field public static final androidx.compose.material3.adaptive.ThreePaneScaffoldDefaults INSTANCE;
  }

  public final class ThreePaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void AnimatedPane(androidx.compose.material3.adaptive.ThreePaneScaffoldScope, androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.PaneAdaptedValue,kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void ThreePaneScaffold(androidx.compose.ui.Modifier modifier, androidx.compose.material3.adaptive.PaneScaffoldDirective scaffoldDirective, androidx.compose.material3.adaptive.ThreePaneScaffoldValue scaffoldValue, androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement arrangement, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit> secondaryPane, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit>? tertiaryPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,kotlin.Unit> primaryPane);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public enum ThreePaneScaffoldRole {
    method public static androidx.compose.material3.adaptive.ThreePaneScaffoldRole valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static androidx.compose.material3.adaptive.ThreePaneScaffoldRole[] values();
    enum_constant public static final androidx.compose.material3.adaptive.ThreePaneScaffoldRole Primary;
    enum_constant public static final androidx.compose.material3.adaptive.ThreePaneScaffoldRole Secondary;
    enum_constant public static final androidx.compose.material3.adaptive.ThreePaneScaffoldRole Tertiary;
  }

  public interface ThreePaneScaffoldScope extends androidx.compose.material3.adaptive.PaneScaffoldScope {
    method public String getAnimationToolingLabel();
    method public androidx.compose.animation.EnterTransition getEnterTransition();
    method public androidx.compose.animation.ExitTransition getExitTransition();
    method public String getPaneAdaptedValue();
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>? getPositionAnimationSpec();
    property public abstract String animationToolingLabel;
    property public abstract androidx.compose.animation.EnterTransition enterTransition;
    property public abstract androidx.compose.animation.ExitTransition exitTransition;
    property public abstract String paneAdaptedValue;
    property public abstract androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>? positionAnimationSpec;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneScaffoldValue {
    ctor public ThreePaneScaffoldValue(String primary, String secondary, String tertiary);
    method public operator String get(androidx.compose.material3.adaptive.ThreePaneScaffoldRole role);
    method public String getPrimary();
    method public String getSecondary();
    method public String getTertiary();
    property public final String primary;
    property public final String secondary;
    property public final String tertiary;
  }

  public final class ThreePaneScaffoldValueKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.ThreePaneScaffoldValue calculateThreePaneScaffoldValue(int maxHorizontalPartitions, optional androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies, optional androidx.compose.material3.adaptive.ThreePaneScaffoldRole? currentFocus);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class WindowAdaptiveInfo {
    ctor public WindowAdaptiveInfo(androidx.compose.material3.windowsizeclass.WindowSizeClass windowSizeClass, androidx.compose.material3.adaptive.Posture posture);
    method public androidx.compose.material3.adaptive.Posture getPosture();
    method public androidx.compose.material3.windowsizeclass.WindowSizeClass getWindowSizeClass();
    property public final androidx.compose.material3.adaptive.Posture posture;
    property public final androidx.compose.material3.windowsizeclass.WindowSizeClass windowSizeClass;
  }

}

