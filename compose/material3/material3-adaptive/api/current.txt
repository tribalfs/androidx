// Signature format: 4.0
package androidx.compose.material3.adaptive {

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public interface AdaptStrategy {
    method public String adapt();
    field public static final androidx.compose.material3.adaptive.AdaptStrategy.Companion Companion;
  }

  public static final class AdaptStrategy.Companion {
    method public androidx.compose.material3.adaptive.AdaptStrategy getHide();
    property public final androidx.compose.material3.adaptive.AdaptStrategy Hide;
  }

  @androidx.compose.runtime.Immutable public final class AdaptiveLayoutDirective {
    ctor public AdaptiveLayoutDirective(int maxHorizontalPartitions, androidx.compose.material3.adaptive.GutterSizes gutterSizes, optional int maxVerticalPartitions);
    method public androidx.compose.material3.adaptive.GutterSizes getGutterSizes();
    method public int getMaxHorizontalPartitions();
    method public int getMaxVerticalPartitions();
    property public final androidx.compose.material3.adaptive.GutterSizes gutterSizes;
    property public final int maxHorizontalPartitions;
    property public final int maxVerticalPartitions;
  }

  public final class AdaptiveLayoutDirectiveKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.AdaptiveLayoutDirective calculateDenseAdaptiveLayoutDirective(androidx.compose.material3.adaptive.WindowAdaptiveInfo windowAdaptiveInfo);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.AdaptiveLayoutDirective calculateStandardAdaptiveLayoutDirective(androidx.compose.material3.adaptive.WindowAdaptiveInfo windowAdaptiveInfo);
  }

  public final class AndroidPosture_androidKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.Posture calculatePosture(java.util.List<? extends androidx.window.layout.FoldingFeature> foldingFeatures);
  }

  public final class AndroidWindowInfo_androidKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.adaptive.WindowAdaptiveInfo calculateWindowAdaptiveInfo(optional @UiContext android.content.Context context);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<java.util.List<androidx.window.layout.FoldingFeature>> foldingFeaturesAsState(optional @UiContext android.content.Context context);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<androidx.compose.ui.unit.IntSize> windowSizeAsState(optional @UiContext android.content.Context context);
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This material3-adaptive API is experimental and is likely to change or to be" + "removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalMaterial3AdaptiveApi {
  }

  @androidx.compose.runtime.Immutable public final class GutterSizes {
    ctor public GutterSizes(float outerVertical, float innerVertical, optional float outerHorizontal, optional float innerHorizontal);
    method public float getInnerHorizontal();
    method public float getInnerVertical();
    method public float getOuterHorizontal();
    method public float getOuterVertical();
    property public final float innerHorizontal;
    property public final float innerVertical;
    property public final float outerHorizontal;
    property public final float outerVertical;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @kotlin.jvm.JvmInline public final value class PaneAdaptedValue {
    field public static final androidx.compose.material3.adaptive.PaneAdaptedValue.Companion Companion;
  }

  public static final class PaneAdaptedValue.Companion {
    method public String getExpanded();
    method public String getHidden();
    property public final String Expanded;
    property public final String Hidden;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public interface PaneScaffoldScope {
    method public androidx.compose.ui.Modifier preferredWidth(androidx.compose.ui.Modifier, float width);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class Posture {
    ctor public Posture(optional boolean hasVerticalHinge, optional boolean isTabletop, optional boolean hasSeparatingHinge);
    method public boolean getHasSeparatingHinge();
    method public boolean getHasVerticalHinge();
    method public boolean isTabletop();
    property public final boolean hasSeparatingHinge;
    property public final boolean hasVerticalHinge;
    property public final boolean isTabletop;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ThreePaneScaffoldAdaptStrategies {
    ctor public ThreePaneScaffoldAdaptStrategies(androidx.compose.material3.adaptive.AdaptStrategy primaryPaneAdaptStrategy, androidx.compose.material3.adaptive.AdaptStrategy secondaryPaneAdaptStrategy, androidx.compose.material3.adaptive.AdaptStrategy tertiaryPaneAdaptStrategy);
    method public operator androidx.compose.material3.adaptive.AdaptStrategy get(androidx.compose.material3.adaptive.ThreePaneScaffoldRole role);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneScaffoldArrangement {
    ctor public ThreePaneScaffoldArrangement(androidx.compose.material3.adaptive.ThreePaneScaffoldRole firstPane, androidx.compose.material3.adaptive.ThreePaneScaffoldRole secondPane, androidx.compose.material3.adaptive.ThreePaneScaffoldRole thirdPane);
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldRole getFirstPane();
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldRole getSecondPane();
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldRole getThirdPane();
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldRole firstPane;
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldRole secondPane;
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldRole thirdPane;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ThreePaneScaffoldDefaults {
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement getListDetailLayoutArrangement();
    method public androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies threePaneScaffoldAdaptStrategies(optional androidx.compose.material3.adaptive.AdaptStrategy primaryPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy secondaryPaneAdaptStrategy, optional androidx.compose.material3.adaptive.AdaptStrategy tertiaryPaneAdaptStrategy);
    property public final androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement ListDetailLayoutArrangement;
    field public static final androidx.compose.material3.adaptive.ThreePaneScaffoldDefaults INSTANCE;
  }

  public final class ThreePaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void ThreePaneScaffold(androidx.compose.ui.Modifier modifier, androidx.compose.material3.adaptive.AdaptiveLayoutDirective layoutDirective, androidx.compose.material3.adaptive.ThreePaneScaffoldValue scaffoldValue, androidx.compose.material3.adaptive.ThreePaneScaffoldArrangement arrangement, kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.PaneAdaptedValue,kotlin.Unit> secondaryPane, optional kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.PaneAdaptedValue,kotlin.Unit>? tertiaryPane, kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.PaneAdaptedValue,kotlin.Unit> primaryPane);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public enum ThreePaneScaffoldRole {
    method public static androidx.compose.material3.adaptive.ThreePaneScaffoldRole valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static androidx.compose.material3.adaptive.ThreePaneScaffoldRole[] values();
    enum_constant public static final androidx.compose.material3.adaptive.ThreePaneScaffoldRole Primary;
    enum_constant public static final androidx.compose.material3.adaptive.ThreePaneScaffoldRole Secondary;
    enum_constant public static final androidx.compose.material3.adaptive.ThreePaneScaffoldRole Tertiary;
  }

  public interface ThreePaneScaffoldScope extends androidx.compose.material3.adaptive.PaneScaffoldScope {
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneScaffoldValue {
    ctor public ThreePaneScaffoldValue(String primary, String secondary, String tertiary);
    method public operator String get(androidx.compose.material3.adaptive.ThreePaneScaffoldRole role);
    method public String getPrimary();
    method public String getSecondary();
    method public String getTertiary();
    property public final String primary;
    property public final String secondary;
    property public final String tertiary;
  }

  public final class ThreePaneScaffoldValueKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.ThreePaneScaffoldValue calculateThreePaneScaffoldValue(int maxHorizontalPartitions, optional androidx.compose.material3.adaptive.ThreePaneScaffoldAdaptStrategies adaptStrategies, optional androidx.compose.material3.adaptive.ThreePaneScaffoldRole? currentFocus);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class WindowAdaptiveInfo {
    ctor public WindowAdaptiveInfo(androidx.compose.material3.windowsizeclass.WindowSizeClass windowSizeClass, androidx.compose.material3.adaptive.Posture posture);
    method public androidx.compose.material3.adaptive.Posture getPosture();
    method public androidx.compose.material3.windowsizeclass.WindowSizeClass getWindowSizeClass();
    property public final androidx.compose.material3.adaptive.Posture posture;
    property public final androidx.compose.material3.windowsizeclass.WindowSizeClass windowSizeClass;
  }

}

