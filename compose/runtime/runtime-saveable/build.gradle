/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.KmpPlatformsKt
import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("AndroidXComposePlugin")
    id("com.android.library")
}

def desktopEnabled = KmpPlatformsKt.enableDesktop(project)

androidXMultiplatform {
    android()
    if (desktopEnabled) desktop()

    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlibCommon)

                api project(":compose:runtime:runtime")
            }
        }

        commonTest {
            dependencies {
            }
        }

        jvmMain {
            dependencies {
            }
        }


        androidMain {
            dependsOn(jvmMain)
            dependencies {
                implementation(libs.kotlinStdlib)
                api "androidx.annotation:annotation:1.1.0"
            }
        }

        if (desktopEnabled) {
            desktopMain {
                dependsOn(jvmMain)
            }
        }

        jvmTest {
            dependencies {
            }
        }

        androidAndroidTest {
            dependsOn(jvmTest)
            dependencies {
                implementation project(':compose:ui:ui')
                implementation project(":compose:ui:ui-test-junit4")
                implementation project(":compose:test-utils")
                implementation "androidx.fragment:fragment:1.3.0"
                implementation "androidx.activity:activity-compose:1.3.1"
                implementation(libs.testUiautomator)
                implementation(libs.testCore)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.espressoCore)
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(libs.dexmakerMockito)
                implementation(libs.mockitoCore)
            }
        }

        // TODO(b/214407011): These dependencies leak into instrumented tests as well. If you
        //  need to add Robolectric (which must be kept out of androidAndroidTest), use a top
        //  level dependencies block instead:
        //  `dependencies { testImplementation(libs.robolectric) }`
        androidTest {
            dependsOn(jvmTest)
            dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.truth)
            }
        }

        if (desktopEnabled) {
            desktopTest {
                dependsOn(jvmTest)
            }
        }
    }
}

dependencies {
    samples(projectOrArtifact(":compose:runtime:runtime-saveable:runtime-saveable-samples"))
    lintPublish(project(":compose:runtime:runtime-saveable-lint"))
}

androidx {
    name = "Compose Saveable"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2020"
    description = "Compose components that allow saving and restoring the local ui state"
    legacyDisableKotlinStrictApiMode = true
}

android {
    namespace "androidx.compose.runtime.saveable"
}
