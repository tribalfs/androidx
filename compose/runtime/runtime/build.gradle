/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.KmpPlatformsKt
import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("AndroidXComposePlugin")
    id("com.android.library")
}

def desktopEnabled = KmpPlatformsKt.enableDesktop(project)

androidXMultiplatform {
    android()
    if (desktopEnabled) desktop()

    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlibCommon)
                implementation(libs.kotlinCoroutinesCore)
            }
        }

        commonTest {
            dependencies {
                implementation kotlin("test")
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.kotlinReflect)
            }
        }

        jvmMain {
            dependencies {
                implementation(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
            }
        }


        androidMain {
            dependsOn(jvmMain)
            dependencies {
                api(libs.kotlinCoroutinesAndroid)
                api("androidx.annotation:annotation:1.1.0")
            }
        }

        if (desktopEnabled) {
            desktopMain {
                dependsOn(jvmMain)
            }
        }

        jvmTest {
            dependsOn(commonTest)
            dependencies {
            }
        }

        nonEmulatorCommonTest {
            dependsOn(commonTest)
            dependencies {
            }
        }

        nonEmulatorJvmTest {
            dependsOn(nonEmulatorCommonTest)
            dependencies {
            }
        }

        androidAndroidTest {
            dependsOn(jvmTest)
            dependencies {
                implementation(libs.testExtJunit)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.truth)
            }
        }

        androidTest {
            dependsOn(jvmTest)
            dependsOn(nonEmulatorJvmTest)
        }

        if (desktopEnabled) {
            desktopTest {
                dependsOn(jvmTest)
                dependsOn(nonEmulatorJvmTest)
            }
        }
    }
}

dependencies {
    lintChecks(projectOrArtifact(":compose:runtime:runtime-lint"))
    lintPublish(projectOrArtifact(":compose:runtime:runtime-lint"))
    samples(projectOrArtifact(":compose:runtime:runtime:runtime-samples"))
}

android {
    defaultConfig {
        consumerProguardFiles 'proguard-rules.pro'
    }
    namespace "androidx.compose.runtime"
}

androidx {
    name = "Compose Runtime"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2019"
    description = "Tree composition support for code generated by the Compose compiler plugin and corresponding public API"
    legacyDisableKotlinStrictApiMode = true
}
