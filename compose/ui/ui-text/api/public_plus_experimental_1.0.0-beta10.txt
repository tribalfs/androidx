// Signature format: 4.0
package androidx.compose.ui.text {

  public final class ActualAtomicReferenceJvmKt {
  }

  @androidx.compose.runtime.Immutable public final class AnnotatedString implements java.lang.CharSequence {
    ctor public AnnotatedString(String text, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> paragraphStyles);
    method public operator char get(int index);
    method public int getLength();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> getParagraphStyles();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> getSpanStyles();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<java.lang.String>> getStringAnnotations(String tag, int start, int end);
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<java.lang.String>> getStringAnnotations(int start, int end);
    method public String getText();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.TtsAnnotation>> getTtsAnnotations(int start, int end);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.AnnotatedString plus(androidx.compose.ui.text.AnnotatedString other);
    method public androidx.compose.ui.text.AnnotatedString subSequence(int startIndex, int endIndex);
    method public androidx.compose.ui.text.AnnotatedString subSequence-5zc-tL8(long range);
    property public int length;
    property public final java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> paragraphStyles;
    property public final java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles;
    property public final String text;
  }

  public static final class AnnotatedString.Builder {
    ctor public AnnotatedString.Builder(optional int capacity);
    ctor public AnnotatedString.Builder(String text);
    ctor public AnnotatedString.Builder(androidx.compose.ui.text.AnnotatedString text);
    method public void addStringAnnotation(String tag, String annotation, int start, int end);
    method public void addStyle(androidx.compose.ui.text.SpanStyle style, int start, int end);
    method public void addStyle(androidx.compose.ui.text.ParagraphStyle style, int start, int end);
    method @androidx.compose.ui.text.ExperimentalTextApi public void addTtsAnnotation(androidx.compose.ui.text.TtsAnnotation ttsAnnotation, int start, int end);
    method public void append(String text);
    method public void append(char p);
    method public void append(androidx.compose.ui.text.AnnotatedString text);
    method public int getLength();
    method public void pop();
    method public void pop(int index);
    method public int pushStringAnnotation(String tag, String annotation);
    method public int pushStyle(androidx.compose.ui.text.SpanStyle style);
    method public int pushStyle(androidx.compose.ui.text.ParagraphStyle style);
    method public int pushTtsAnnotation(androidx.compose.ui.text.TtsAnnotation ttsAnnotation);
    method public androidx.compose.ui.text.AnnotatedString toAnnotatedString();
    property public final int length;
  }

  @androidx.compose.runtime.Immutable public static final class AnnotatedString.Range<T> {
    ctor public AnnotatedString.Range(T? item, int start, int end, String tag);
    ctor public AnnotatedString.Range(T? item, int start, int end);
    method public T! component1();
    method public int component2();
    method public int component3();
    method public String component4();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.AnnotatedString.Range<T> copy(T! item, int start, int end, String tag);
    method public int getEnd();
    method public T! getItem();
    method public int getStart();
    method public String getTag();
    property public final int end;
    property public final T! item;
    property public final int start;
    property public final String tag;
  }

  public final class AnnotatedStringKt {
    method public static androidx.compose.ui.text.AnnotatedString AnnotatedString(String text, androidx.compose.ui.text.SpanStyle spanStyle, optional androidx.compose.ui.text.ParagraphStyle? paragraphStyle);
    method public static androidx.compose.ui.text.AnnotatedString AnnotatedString(String text, androidx.compose.ui.text.ParagraphStyle paragraphStyle);
    method public static inline androidx.compose.ui.text.AnnotatedString buildAnnotatedString(kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,kotlin.Unit> builder);
    method public static androidx.compose.ui.text.AnnotatedString capitalize(androidx.compose.ui.text.AnnotatedString, optional androidx.compose.ui.text.intl.LocaleList localeList);
    method public static androidx.compose.ui.text.AnnotatedString decapitalize(androidx.compose.ui.text.AnnotatedString, optional androidx.compose.ui.text.intl.LocaleList localeList);
    method public static androidx.compose.ui.text.AnnotatedString toLowerCase(androidx.compose.ui.text.AnnotatedString, optional androidx.compose.ui.text.intl.LocaleList localeList);
    method public static androidx.compose.ui.text.AnnotatedString toUpperCase(androidx.compose.ui.text.AnnotatedString, optional androidx.compose.ui.text.intl.LocaleList localeList);
    method @androidx.compose.ui.text.ExperimentalTextApi public static inline <R> R withAnnotation(androidx.compose.ui.text.AnnotatedString.Builder, String tag, String annotation, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,? extends R> block);
    method @androidx.compose.ui.text.ExperimentalTextApi public static inline <R> R withAnnotation(androidx.compose.ui.text.AnnotatedString.Builder, androidx.compose.ui.text.TtsAnnotation ttsAnnotation, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,? extends R> block);
    method public static inline <R> R withStyle(androidx.compose.ui.text.AnnotatedString.Builder, androidx.compose.ui.text.SpanStyle style, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,? extends R> block);
    method public static inline <R> R withStyle(androidx.compose.ui.text.AnnotatedString.Builder, androidx.compose.ui.text.ParagraphStyle style, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,? extends R> block);
  }

  @kotlin.RequiresOptIn(message="This API is experimental and is likely to change in the future.") public @interface ExperimentalTextApi {
  }

  @kotlin.RequiresOptIn(level=kotlin.RequiresOptIn.Level, message="This is internal API that may change frequently and without warning.") @kotlin.annotation.Target(allowedTargets={kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget}) public @interface InternalTextApi {
  }

  public final class JvmAnnotatedString_jvmKt {
  }

  public final class JvmCharHelpers_androidKt {
  }

  public final class MultiParagraph {
    ctor public MultiParagraph(androidx.compose.ui.text.MultiParagraphIntrinsics intrinsics, optional int maxLines, optional boolean ellipsis, float width);
    ctor public MultiParagraph(androidx.compose.ui.text.AnnotatedString annotatedString, androidx.compose.ui.text.TextStyle style, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, optional int maxLines, optional boolean ellipsis, float width, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int offset);
    method public androidx.compose.ui.geometry.Rect getBoundingBox(int offset);
    method public androidx.compose.ui.geometry.Rect getCursorRect(int offset);
    method public boolean getDidExceedMaxLines();
    method public float getFirstBaseline();
    method public float getHeight();
    method public float getHorizontalPosition(int offset, boolean usePrimaryDirection);
    method public androidx.compose.ui.text.MultiParagraphIntrinsics getIntrinsics();
    method public float getLastBaseline();
    method public float getLineBottom(int lineIndex);
    method public int getLineCount();
    method public int getLineEnd(int lineIndex, optional boolean visibleEnd);
    method public int getLineForOffset(int offset);
    method public int getLineForVerticalPosition(float vertical);
    method public float getLineHeight(int lineIndex);
    method public float getLineLeft(int lineIndex);
    method public float getLineRight(int lineIndex);
    method public int getLineStart(int lineIndex);
    method public float getLineTop(int lineIndex);
    method public float getLineWidth(int lineIndex);
    method public float getMaxIntrinsicWidth();
    method public int getMaxLines();
    method public float getMinIntrinsicWidth();
    method public int getOffsetForPosition-k-4lQ0M(long position);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int offset);
    method public androidx.compose.ui.graphics.Path getPathForRange(int start, int end);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getPlaceholderRects();
    method public float getWidth();
    method public long getWordBoundary-d9O1mEE(int offset);
    method public boolean isLineEllipsized(int lineIndex);
    method public void paint-TAOIQ28(androidx.compose.ui.graphics.Canvas canvas, optional long color, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.text.style.TextDecoration? decoration);
    property public final boolean didExceedMaxLines;
    property public final float firstBaseline;
    property public final float height;
    property public final androidx.compose.ui.text.MultiParagraphIntrinsics intrinsics;
    property public final float lastBaseline;
    property public final int lineCount;
    property public final float maxIntrinsicWidth;
    property public final int maxLines;
    property public final float minIntrinsicWidth;
    property public final java.util.List<androidx.compose.ui.geometry.Rect> placeholderRects;
    property public final float width;
  }

  public final class MultiParagraphIntrinsics implements androidx.compose.ui.text.ParagraphIntrinsics {
    ctor public MultiParagraphIntrinsics(androidx.compose.ui.text.AnnotatedString annotatedString, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
    method public androidx.compose.ui.text.AnnotatedString getAnnotatedString();
    method public float getMaxIntrinsicWidth();
    method public float getMinIntrinsicWidth();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> getPlaceholders();
    property public final androidx.compose.ui.text.AnnotatedString annotatedString;
    property public float maxIntrinsicWidth;
    property public float minIntrinsicWidth;
    property public final java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders;
  }

  public final class MultiParagraphIntrinsicsKt {
  }

  public final class MultiParagraphKt {
  }

  public interface Paragraph {
    method public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int offset);
    method public androidx.compose.ui.geometry.Rect getBoundingBox(int offset);
    method public androidx.compose.ui.geometry.Rect getCursorRect(int offset);
    method public boolean getDidExceedMaxLines();
    method public float getFirstBaseline();
    method public float getHeight();
    method public float getHorizontalPosition(int offset, boolean usePrimaryDirection);
    method public float getLastBaseline();
    method public float getLineBottom(int lineIndex);
    method public int getLineCount();
    method public int getLineEnd(int lineIndex, optional boolean visibleEnd);
    method public int getLineForOffset(int offset);
    method public int getLineForVerticalPosition(float vertical);
    method public float getLineHeight(int lineIndex);
    method public float getLineLeft(int lineIndex);
    method public float getLineRight(int lineIndex);
    method public int getLineStart(int lineIndex);
    method public float getLineTop(int lineIndex);
    method public float getLineWidth(int lineIndex);
    method public float getMaxIntrinsicWidth();
    method public float getMinIntrinsicWidth();
    method public int getOffsetForPosition-k-4lQ0M(long position);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int offset);
    method public androidx.compose.ui.graphics.Path getPathForRange(int start, int end);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getPlaceholderRects();
    method public float getWidth();
    method public long getWordBoundary-d9O1mEE(int offset);
    method public boolean isLineEllipsized(int lineIndex);
    method public void paint-TAOIQ28(androidx.compose.ui.graphics.Canvas canvas, optional long color, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.text.style.TextDecoration? textDecoration);
    property public abstract boolean didExceedMaxLines;
    property public abstract float firstBaseline;
    property public abstract float height;
    property public abstract float lastBaseline;
    property public abstract int lineCount;
    property public abstract float maxIntrinsicWidth;
    property public abstract float minIntrinsicWidth;
    property public abstract java.util.List<androidx.compose.ui.geometry.Rect> placeholderRects;
    property public abstract float width;
  }

  public interface ParagraphIntrinsics {
    method public float getMaxIntrinsicWidth();
    method public float getMinIntrinsicWidth();
    property public abstract float maxIntrinsicWidth;
    property public abstract float minIntrinsicWidth;
  }

  public final class ParagraphIntrinsicsKt {
    method public static androidx.compose.ui.text.ParagraphIntrinsics ParagraphIntrinsics(String text, androidx.compose.ui.text.TextStyle style, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
  }

  public final class ParagraphKt {
    method public static androidx.compose.ui.text.Paragraph Paragraph(String text, androidx.compose.ui.text.TextStyle style, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, optional int maxLines, optional boolean ellipsis, float width, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
    method public static androidx.compose.ui.text.Paragraph Paragraph(androidx.compose.ui.text.ParagraphIntrinsics paragraphIntrinsics, optional int maxLines, optional boolean ellipsis, float width);
  }

  @androidx.compose.runtime.Immutable public final class ParagraphStyle {
    method public androidx.compose.ui.text.ParagraphStyle copy-QrGfzA0(optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.text.style.TextDirection? textDirection, optional long lineHeight, optional androidx.compose.ui.text.style.TextIndent? textIndent);
    method public operator boolean equals(Object? other);
    method public long getLineHeight-XSAIIZE();
    method public androidx.compose.ui.text.style.TextAlign? getTextAlign-buA522U();
    method public androidx.compose.ui.text.style.TextDirection? getTextDirection-mmuk1to();
    method public androidx.compose.ui.text.style.TextIndent? getTextIndent();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.ParagraphStyle merge(optional androidx.compose.ui.text.ParagraphStyle? other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.ParagraphStyle plus(androidx.compose.ui.text.ParagraphStyle other);
    property public final long lineHeight;
    property public final androidx.compose.ui.text.style.TextAlign? textAlign;
    property public final androidx.compose.ui.text.style.TextDirection? textDirection;
    property public final androidx.compose.ui.text.style.TextIndent? textIndent;
  }

  public final class ParagraphStyleKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.ParagraphStyle lerp(androidx.compose.ui.text.ParagraphStyle start, androidx.compose.ui.text.ParagraphStyle stop, float fraction);
  }

  @androidx.compose.runtime.Immutable public final class Placeholder {
    method public androidx.compose.ui.text.Placeholder copy-KJSDsNM(optional long width, optional long height, optional int placeholderVerticalAlign);
    method public operator boolean equals(Object? other);
    method public long getHeight-XSAIIZE();
    method public int getPlaceholderVerticalAlign-J6kI3mc();
    method public long getWidth-XSAIIZE();
    property public final long height;
    property public final int placeholderVerticalAlign;
    property public final long width;
  }

  public final inline class PlaceholderVerticalAlign {
    ctor public PlaceholderVerticalAlign();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.PlaceholderVerticalAlign.Companion Companion;
  }

  public static final class PlaceholderVerticalAlign.Companion {
    method public int getAboveBaseline-J6kI3mc();
    method public int getBottom-J6kI3mc();
    method public int getCenter-J6kI3mc();
    method public int getTextBottom-J6kI3mc();
    method public int getTextCenter-J6kI3mc();
    method public int getTextTop-J6kI3mc();
    method public int getTop-J6kI3mc();
    property public final int AboveBaseline;
    property public final int Bottom;
    property public final int Center;
    property public final int TextBottom;
    property public final int TextCenter;
    property public final int TextTop;
    property public final int Top;
  }

  public final class SaversKt {
  }

  @androidx.compose.runtime.Immutable public final class SpanStyle {
    method public androidx.compose.ui.text.SpanStyle copy-D5kMcog(optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow);
    method public operator boolean equals(Object? other);
    method public long getBackground-0d7_KjU();
    method public androidx.compose.ui.text.style.BaselineShift? getBaselineShift-5SSeXJ0();
    method public long getColor-0d7_KjU();
    method public androidx.compose.ui.text.font.FontFamily? getFontFamily();
    method public String? getFontFeatureSettings();
    method public long getFontSize-XSAIIZE();
    method public androidx.compose.ui.text.font.FontStyle? getFontStyle-4Lr2A7w();
    method public androidx.compose.ui.text.font.FontSynthesis? getFontSynthesis-ZQGJjVo();
    method public androidx.compose.ui.text.font.FontWeight? getFontWeight();
    method public long getLetterSpacing-XSAIIZE();
    method public androidx.compose.ui.text.intl.LocaleList? getLocaleList();
    method public androidx.compose.ui.graphics.Shadow? getShadow();
    method public androidx.compose.ui.text.style.TextDecoration? getTextDecoration();
    method public androidx.compose.ui.text.style.TextGeometricTransform? getTextGeometricTransform();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.SpanStyle merge(optional androidx.compose.ui.text.SpanStyle? other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.SpanStyle plus(androidx.compose.ui.text.SpanStyle other);
    property public final long background;
    property public final androidx.compose.ui.text.style.BaselineShift? baselineShift;
    property public final long color;
    property public final androidx.compose.ui.text.font.FontFamily? fontFamily;
    property public final String? fontFeatureSettings;
    property public final long fontSize;
    property public final androidx.compose.ui.text.font.FontStyle? fontStyle;
    property public final androidx.compose.ui.text.font.FontSynthesis? fontSynthesis;
    property public final androidx.compose.ui.text.font.FontWeight? fontWeight;
    property public final long letterSpacing;
    property public final androidx.compose.ui.text.intl.LocaleList? localeList;
    property public final androidx.compose.ui.graphics.Shadow? shadow;
    property public final androidx.compose.ui.text.style.TextDecoration? textDecoration;
    property public final androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform;
  }

  public final class SpanStyleKt {
    method public static androidx.compose.ui.text.SpanStyle lerp(androidx.compose.ui.text.SpanStyle start, androidx.compose.ui.text.SpanStyle stop, float fraction);
  }

  public final class StringKt {
    method public static String capitalize(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String capitalize(String, androidx.compose.ui.text.intl.LocaleList localeList);
    method public static String decapitalize(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String decapitalize(String, androidx.compose.ui.text.intl.LocaleList localeList);
    method public static String toLowerCase(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String toLowerCase(String, androidx.compose.ui.text.intl.LocaleList localeList);
    method public static String toUpperCase(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String toUpperCase(String, androidx.compose.ui.text.intl.LocaleList localeList);
  }

  public final class TempListUtilsKt {
  }

  public final class TextLayoutInput {
    method public androidx.compose.ui.text.TextLayoutInput copy-ih31NyA(optional androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.text.TextStyle style, optional java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, optional int maxLines, optional boolean softWrap, optional int overflow, optional androidx.compose.ui.unit.Density density, optional androidx.compose.ui.unit.LayoutDirection layoutDirection, optional androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader, optional long constraints);
    method public operator boolean equals(Object? other);
    method public long getConstraints-msEJaDk();
    method public androidx.compose.ui.unit.Density getDensity();
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method public int getMaxLines();
    method public int getOverflow-gIe3tQ8();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> getPlaceholders();
    method public androidx.compose.ui.text.font.Font.ResourceLoader getResourceLoader();
    method public boolean getSoftWrap();
    method public androidx.compose.ui.text.TextStyle getStyle();
    method public androidx.compose.ui.text.AnnotatedString getText();
    property public final long constraints;
    property public final androidx.compose.ui.unit.Density density;
    property public final androidx.compose.ui.unit.LayoutDirection layoutDirection;
    property public final int maxLines;
    property public final int overflow;
    property public final java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders;
    property public final androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader;
    property public final boolean softWrap;
    property public final androidx.compose.ui.text.TextStyle style;
    property public final androidx.compose.ui.text.AnnotatedString text;
  }

  public final class TextLayoutResult {
    method public androidx.compose.ui.text.TextLayoutResult copy-1moGK-E(optional androidx.compose.ui.text.TextLayoutInput layoutInput, optional long size);
    method public operator boolean equals(Object? other);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int offset);
    method public androidx.compose.ui.geometry.Rect getBoundingBox(int offset);
    method public androidx.compose.ui.geometry.Rect getCursorRect(int offset);
    method public boolean getDidOverflowHeight();
    method public boolean getDidOverflowWidth();
    method public float getFirstBaseline();
    method public boolean getHasVisualOverflow();
    method public float getHorizontalPosition(int offset, boolean usePrimaryDirection);
    method public float getLastBaseline();
    method public androidx.compose.ui.text.TextLayoutInput getLayoutInput();
    method public float getLineBottom(int lineIndex);
    method public int getLineCount();
    method public int getLineEnd(int lineIndex, optional boolean visibleEnd);
    method public int getLineForOffset(int offset);
    method public int getLineForVerticalPosition(float vertical);
    method public float getLineLeft(int lineIndex);
    method public float getLineRight(int lineIndex);
    method public int getLineStart(int lineIndex);
    method public float getLineTop(int lineIndex);
    method public androidx.compose.ui.text.MultiParagraph getMultiParagraph();
    method public int getOffsetForPosition-k-4lQ0M(long position);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int offset);
    method public androidx.compose.ui.graphics.Path getPathForRange(int start, int end);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getPlaceholderRects();
    method public long getSize-YbymL2g();
    method public long getWordBoundary-d9O1mEE(int offset);
    method public boolean isLineEllipsized(int lineIndex);
    property public final boolean didOverflowHeight;
    property public final boolean didOverflowWidth;
    property public final float firstBaseline;
    property public final boolean hasVisualOverflow;
    property public final float lastBaseline;
    property public final androidx.compose.ui.text.TextLayoutInput layoutInput;
    property public final int lineCount;
    property public final androidx.compose.ui.text.MultiParagraph multiParagraph;
    property public final java.util.List<androidx.compose.ui.geometry.Rect> placeholderRects;
    property public final long size;
  }

  public final class TextLayoutResultKt {
    method @Deprecated public static androidx.compose.ui.text.TextLayoutResult createTextLayoutResult-2H_Vf2E(optional androidx.compose.ui.text.TextLayoutInput layoutInput, optional androidx.compose.ui.text.MultiParagraph multiParagraph, optional long size);
  }

  public final class TextPainter {
    method public void paint(androidx.compose.ui.graphics.Canvas canvas, androidx.compose.ui.text.TextLayoutResult textLayoutResult);
    field public static final androidx.compose.ui.text.TextPainter INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final inline class TextRange {
    ctor public TextRange();
    method public static operator boolean contains-5zc-tL8(long $this, long other);
    method public static operator boolean contains-impl(long $this, int offset);
    method @androidx.compose.runtime.Immutable public static inline boolean equals-impl(long p, Object? p1);
    method public static boolean equals-impl0(long p1, long p2);
    method public static boolean getCollapsed-impl(long $this);
    method public static int getEnd-impl(long $this);
    method public static int getLength-impl(long $this);
    method public static int getMax-impl(long $this);
    method public static int getMin-impl(long $this);
    method public static boolean getReversed-impl(long $this);
    method public static int getStart-impl(long $this);
    method @androidx.compose.runtime.Immutable public static inline int hashCode-impl(long p);
    method public static boolean intersects-5zc-tL8(long $this, long other);
    method public static String toString-impl(long $this);
    field public static final androidx.compose.ui.text.TextRange.Companion Companion;
  }

  public static final class TextRange.Companion {
    method public long getZero-d9O1mEE();
    property public final long Zero;
  }

  public final class TextRangeKt {
    method public static long TextRange(int start, int end);
    method public static long TextRange(int index);
    method public static String substring-cWlJSyE(CharSequence, long range);
  }

  @androidx.compose.runtime.Immutable public final class TextStyle {
    method public androidx.compose.ui.text.TextStyle copy-4skVB9c(optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional String? fontFeatureSettings, optional long letterSpacing, optional androidx.compose.ui.text.style.BaselineShift? baselineShift, optional androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, optional androidx.compose.ui.text.intl.LocaleList? localeList, optional long background, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.graphics.Shadow? shadow, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.text.style.TextDirection? textDirection, optional long lineHeight, optional androidx.compose.ui.text.style.TextIndent? textIndent);
    method public long getBackground-0d7_KjU();
    method public androidx.compose.ui.text.style.BaselineShift? getBaselineShift-5SSeXJ0();
    method public long getColor-0d7_KjU();
    method public androidx.compose.ui.text.font.FontFamily? getFontFamily();
    method public String? getFontFeatureSettings();
    method public long getFontSize-XSAIIZE();
    method public androidx.compose.ui.text.font.FontStyle? getFontStyle-4Lr2A7w();
    method public androidx.compose.ui.text.font.FontSynthesis? getFontSynthesis-ZQGJjVo();
    method public androidx.compose.ui.text.font.FontWeight? getFontWeight();
    method public long getLetterSpacing-XSAIIZE();
    method public long getLineHeight-XSAIIZE();
    method public androidx.compose.ui.text.intl.LocaleList? getLocaleList();
    method public androidx.compose.ui.graphics.Shadow? getShadow();
    method public androidx.compose.ui.text.style.TextAlign? getTextAlign-buA522U();
    method public androidx.compose.ui.text.style.TextDecoration? getTextDecoration();
    method public androidx.compose.ui.text.style.TextDirection? getTextDirection-mmuk1to();
    method public androidx.compose.ui.text.style.TextGeometricTransform? getTextGeometricTransform();
    method public androidx.compose.ui.text.style.TextIndent? getTextIndent();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.TextStyle merge(optional androidx.compose.ui.text.TextStyle? other);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.TextStyle merge(androidx.compose.ui.text.SpanStyle other);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.TextStyle merge(androidx.compose.ui.text.ParagraphStyle other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.TextStyle plus(androidx.compose.ui.text.TextStyle other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.TextStyle plus(androidx.compose.ui.text.ParagraphStyle other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.TextStyle plus(androidx.compose.ui.text.SpanStyle other);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.ParagraphStyle toParagraphStyle();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.SpanStyle toSpanStyle();
    property public final long background;
    property public final androidx.compose.ui.text.style.BaselineShift? baselineShift;
    property public final long color;
    property public final androidx.compose.ui.text.font.FontFamily? fontFamily;
    property public final String? fontFeatureSettings;
    property public final long fontSize;
    property public final androidx.compose.ui.text.font.FontStyle? fontStyle;
    property public final androidx.compose.ui.text.font.FontSynthesis? fontSynthesis;
    property public final androidx.compose.ui.text.font.FontWeight? fontWeight;
    property public final long letterSpacing;
    property public final long lineHeight;
    property public final androidx.compose.ui.text.intl.LocaleList? localeList;
    property public final androidx.compose.ui.graphics.Shadow? shadow;
    property public final androidx.compose.ui.text.style.TextAlign? textAlign;
    property public final androidx.compose.ui.text.style.TextDecoration? textDecoration;
    property public final androidx.compose.ui.text.style.TextDirection? textDirection;
    property public final androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform;
    property public final androidx.compose.ui.text.style.TextIndent? textIndent;
    field public static final androidx.compose.ui.text.TextStyle.Companion Companion;
  }

  public static final class TextStyle.Companion {
    method public androidx.compose.ui.text.TextStyle getDefault();
    property public final androidx.compose.ui.text.TextStyle Default;
  }

  public final class TextStyleKt {
    method public static androidx.compose.ui.text.TextStyle lerp(androidx.compose.ui.text.TextStyle start, androidx.compose.ui.text.TextStyle stop, float fraction);
    method public static androidx.compose.ui.text.TextStyle resolveDefaults(androidx.compose.ui.text.TextStyle style, androidx.compose.ui.unit.LayoutDirection direction);
  }

  public abstract sealed class TtsAnnotation {
  }

  public final class VerbatimTtsAnnotation extends androidx.compose.ui.text.TtsAnnotation {
    ctor public VerbatimTtsAnnotation(String verbatim);
    method public String getVerbatim();
    property public final String verbatim;
  }

}

package androidx.compose.ui.text.android {

  @kotlin.RequiresOptIn(level=kotlin.RequiresOptIn.Level, message="This is internal API that may change frequently and without warning.") @kotlin.annotation.Target(allowedTargets={kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget}) public @interface InternalPlatformTextApi {
  }

  public final class LayoutCompatKt {
  }

  public final class LayoutHelperKt {
  }

  public final class LayoutIntrinsicsKt {
  }

  public final class SpannedExtensionsKt {
  }

  public final class StaticLayoutFactoryKt {
  }

  public final class TempListUtilsKt {
  }

  public final class TextLayoutKt {
  }

}

package androidx.compose.ui.text.android.style {

  public final class PlaceholderSpanKt {
  }

}

package androidx.compose.ui.text.font {

  public final class AndroidFontKt {
    method @androidx.compose.runtime.Stable @androidx.compose.ui.text.ExperimentalTextApi public static androidx.compose.ui.text.font.Font Font-3njdYzw(android.content.res.AssetManager assetManager, String path, optional androidx.compose.ui.text.font.FontWeight weight, optional int style);
    method @androidx.compose.runtime.Stable @androidx.compose.ui.text.ExperimentalTextApi public static androidx.compose.ui.text.font.Font Font-eiC3mdU(java.io.File file, optional androidx.compose.ui.text.font.FontWeight weight, optional int style);
    method @RequiresApi(26) @androidx.compose.runtime.Stable @androidx.compose.ui.text.ExperimentalTextApi public static androidx.compose.ui.text.font.Font Font-galngd0(android.os.ParcelFileDescriptor fileDescriptor, optional androidx.compose.ui.text.font.FontWeight weight, optional int style);
  }

  public final class AndroidTypeface_androidKt {
    method public static androidx.compose.ui.text.font.FontFamily FontFamily(android.graphics.Typeface typeface);
    method public static androidx.compose.ui.text.font.Typeface Typeface(android.content.Context context, androidx.compose.ui.text.font.FontFamily fontFamily, optional java.util.List<kotlin.Pair<androidx.compose.ui.text.font.FontWeight,androidx.compose.ui.text.font.FontStyle>>? styles);
    method public static androidx.compose.ui.text.font.Typeface Typeface(android.graphics.Typeface typeface);
  }

  public abstract sealed class FileBasedFontFamily extends androidx.compose.ui.text.font.FontFamily {
  }

  @androidx.compose.runtime.Immutable public interface Font {
    method public int getStyle-_-LCdwA();
    method public androidx.compose.ui.text.font.FontWeight getWeight();
    property public abstract int style;
    property public abstract androidx.compose.ui.text.font.FontWeight weight;
  }

  public static interface Font.ResourceLoader {
    method public Object load(androidx.compose.ui.text.font.Font font);
  }

  @androidx.compose.runtime.Immutable public abstract sealed class FontFamily {
    method public final boolean getCanLoadSynchronously();
    property public final boolean canLoadSynchronously;
    field public static final androidx.compose.ui.text.font.FontFamily.Companion Companion;
  }

  public static final class FontFamily.Companion {
    method public androidx.compose.ui.text.font.GenericFontFamily getCursive();
    method public androidx.compose.ui.text.font.SystemFontFamily getDefault();
    method public androidx.compose.ui.text.font.GenericFontFamily getMonospace();
    method public androidx.compose.ui.text.font.GenericFontFamily getSansSerif();
    method public androidx.compose.ui.text.font.GenericFontFamily getSerif();
    property public final androidx.compose.ui.text.font.GenericFontFamily Cursive;
    property public final androidx.compose.ui.text.font.SystemFontFamily Default;
    property public final androidx.compose.ui.text.font.GenericFontFamily Monospace;
    property public final androidx.compose.ui.text.font.GenericFontFamily SansSerif;
    property public final androidx.compose.ui.text.font.GenericFontFamily Serif;
  }

  public final class FontFamilyKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontFamily FontFamily(java.util.List<? extends androidx.compose.ui.text.font.Font> fonts);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontFamily FontFamily(androidx.compose.ui.text.font.Font... fonts);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontFamily FontFamily(androidx.compose.ui.text.font.Typeface typeface);
  }

  public final class FontKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.Font Font-8TkSW9U(int resId, optional androidx.compose.ui.text.font.FontWeight weight, optional int style);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontFamily toFontFamily(androidx.compose.ui.text.font.Font);
  }

  @androidx.compose.runtime.Immutable public final class FontListFontFamily extends androidx.compose.ui.text.font.FileBasedFontFamily implements kotlin.jvm.internal.markers.KMappedMarker java.util.List<androidx.compose.ui.text.font.Font> {
    method public boolean contains(androidx.compose.ui.text.font.Font element);
    method public boolean containsAll(java.util.Collection<?> elements);
    method public androidx.compose.ui.text.font.Font get(int index);
    method public java.util.List<androidx.compose.ui.text.font.Font> getFonts();
    method public int getSize();
    method public int indexOf(androidx.compose.ui.text.font.Font element);
    method public boolean isEmpty();
    method public java.util.Iterator<androidx.compose.ui.text.font.Font> iterator();
    method public int lastIndexOf(androidx.compose.ui.text.font.Font element);
    method public java.util.ListIterator<androidx.compose.ui.text.font.Font> listIterator();
    method public java.util.ListIterator<androidx.compose.ui.text.font.Font> listIterator(int index);
    method public java.util.List<androidx.compose.ui.text.font.Font> subList(int fromIndex, int toIndex);
    property public final java.util.List<androidx.compose.ui.text.font.Font> fonts;
  }

  public final inline class FontStyle {
    ctor public FontStyle();
    method public static int constructor-impl(int value);
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public int getValue();
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    property public final int value;
    field public static final androidx.compose.ui.text.font.FontStyle.Companion Companion;
  }

  public static final class FontStyle.Companion {
    method public int getItalic-_-LCdwA();
    method public int getNormal-_-LCdwA();
    method public java.util.List<androidx.compose.ui.text.font.FontStyle> values();
    property public final int Italic;
    property public final int Normal;
  }

  public final inline class FontSynthesis {
    ctor public FontSynthesis();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.font.FontSynthesis.Companion Companion;
  }

  public static final class FontSynthesis.Companion {
    method public int getAll-GVVA2EU();
    method public int getNone-GVVA2EU();
    method public int getStyle-GVVA2EU();
    method public int getWeight-GVVA2EU();
    property public final int All;
    property public final int None;
    property public final int Style;
    property public final int Weight;
  }

  @androidx.compose.runtime.Immutable public final class FontWeight implements java.lang.Comparable<androidx.compose.ui.text.font.FontWeight> {
    ctor public FontWeight(int weight);
    method public operator int compareTo(androidx.compose.ui.text.font.FontWeight other);
    method public int getWeight();
    property public final int weight;
    field public static final androidx.compose.ui.text.font.FontWeight.Companion Companion;
  }

  public static final class FontWeight.Companion {
    method public androidx.compose.ui.text.font.FontWeight getBlack();
    method public androidx.compose.ui.text.font.FontWeight getBold();
    method public androidx.compose.ui.text.font.FontWeight getExtraBold();
    method public androidx.compose.ui.text.font.FontWeight getExtraLight();
    method public androidx.compose.ui.text.font.FontWeight getLight();
    method public androidx.compose.ui.text.font.FontWeight getMedium();
    method public androidx.compose.ui.text.font.FontWeight getNormal();
    method public androidx.compose.ui.text.font.FontWeight getSemiBold();
    method public androidx.compose.ui.text.font.FontWeight getThin();
    method public androidx.compose.ui.text.font.FontWeight getW100();
    method public androidx.compose.ui.text.font.FontWeight getW200();
    method public androidx.compose.ui.text.font.FontWeight getW300();
    method public androidx.compose.ui.text.font.FontWeight getW400();
    method public androidx.compose.ui.text.font.FontWeight getW500();
    method public androidx.compose.ui.text.font.FontWeight getW600();
    method public androidx.compose.ui.text.font.FontWeight getW700();
    method public androidx.compose.ui.text.font.FontWeight getW800();
    method public androidx.compose.ui.text.font.FontWeight getW900();
    property public final androidx.compose.ui.text.font.FontWeight Black;
    property public final androidx.compose.ui.text.font.FontWeight Bold;
    property public final androidx.compose.ui.text.font.FontWeight ExtraBold;
    property public final androidx.compose.ui.text.font.FontWeight ExtraLight;
    property public final androidx.compose.ui.text.font.FontWeight Light;
    property public final androidx.compose.ui.text.font.FontWeight Medium;
    property public final androidx.compose.ui.text.font.FontWeight Normal;
    property public final androidx.compose.ui.text.font.FontWeight SemiBold;
    property public final androidx.compose.ui.text.font.FontWeight Thin;
    property public final androidx.compose.ui.text.font.FontWeight W100;
    property public final androidx.compose.ui.text.font.FontWeight W200;
    property public final androidx.compose.ui.text.font.FontWeight W300;
    property public final androidx.compose.ui.text.font.FontWeight W400;
    property public final androidx.compose.ui.text.font.FontWeight W500;
    property public final androidx.compose.ui.text.font.FontWeight W600;
    property public final androidx.compose.ui.text.font.FontWeight W700;
    property public final androidx.compose.ui.text.font.FontWeight W800;
    property public final androidx.compose.ui.text.font.FontWeight W900;
  }

  public final class FontWeightKt {
    method public static androidx.compose.ui.text.font.FontWeight lerp(androidx.compose.ui.text.font.FontWeight start, androidx.compose.ui.text.font.FontWeight stop, float fraction);
  }

  @androidx.compose.runtime.Immutable public final class GenericFontFamily extends androidx.compose.ui.text.font.SystemFontFamily {
    method public String getName();
    property public final String name;
  }

  public final class LoadedFontFamily extends androidx.compose.ui.text.font.FontFamily {
    method public androidx.compose.ui.text.font.Typeface getTypeface();
    property public final androidx.compose.ui.text.font.Typeface typeface;
  }

  public final class ResourceFont implements androidx.compose.ui.text.font.Font {
    method public androidx.compose.ui.text.font.ResourceFont copy-8TkSW9U(optional int resId, optional androidx.compose.ui.text.font.FontWeight weight, optional int style);
    method public int getResId();
    method public int getStyle-_-LCdwA();
    method public androidx.compose.ui.text.font.FontWeight getWeight();
    property public final int resId;
    property public int style;
    property public androidx.compose.ui.text.font.FontWeight weight;
  }

  public abstract sealed class SystemFontFamily extends androidx.compose.ui.text.font.FontFamily {
  }

  public interface Typeface {
    method public androidx.compose.ui.text.font.FontFamily? getFontFamily();
    property public abstract androidx.compose.ui.text.font.FontFamily? fontFamily;
  }

}

package androidx.compose.ui.text.input {

  public final class BackspaceCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public BackspaceCommand();
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class CommitTextCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public CommitTextCommand(androidx.compose.ui.text.AnnotatedString annotatedString, int newCursorPosition);
    ctor public CommitTextCommand(String text, int newCursorPosition);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public androidx.compose.ui.text.AnnotatedString getAnnotatedString();
    method public int getNewCursorPosition();
    method public String getText();
    property public final androidx.compose.ui.text.AnnotatedString annotatedString;
    property public final int newCursorPosition;
    property public final String text;
  }

  public final class DeleteAllCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public DeleteAllCommand();
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class DeleteSurroundingTextCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public DeleteSurroundingTextCommand(int lengthBeforeCursor, int lengthAfterCursor);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public int getLengthAfterCursor();
    method public int getLengthBeforeCursor();
    property public final int lengthAfterCursor;
    property public final int lengthBeforeCursor;
  }

  public final class DeleteSurroundingTextInCodePointsCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public DeleteSurroundingTextInCodePointsCommand(int lengthBeforeCursor, int lengthAfterCursor);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public int getLengthAfterCursor();
    method public int getLengthBeforeCursor();
    property public final int lengthAfterCursor;
    property public final int lengthBeforeCursor;
  }

  public interface EditCommand {
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class EditCommandKt {
  }

  public final class EditProcessor {
    ctor public EditProcessor();
    method public androidx.compose.ui.text.input.TextFieldValue apply(java.util.List<? extends androidx.compose.ui.text.input.EditCommand> editCommands);
    method public void reset(androidx.compose.ui.text.input.TextFieldValue value, androidx.compose.ui.text.input.TextInputSession? textInputSession);
    method public androidx.compose.ui.text.input.TextFieldValue toTextFieldValue();
  }

  public final class EditingBuffer {
  }

  public final class EditingBufferKt {
  }

  public final class FinishComposingTextCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public FinishComposingTextCommand();
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class GapBufferKt {
  }

  public final inline class ImeAction {
    ctor public ImeAction();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.input.ImeAction.Companion Companion;
  }

  public static final class ImeAction.Companion {
    method public int getDefault-eUduSuo();
    method public int getDone-eUduSuo();
    method public int getGo-eUduSuo();
    method public int getNext-eUduSuo();
    method public int getNone-eUduSuo();
    method public int getPrevious-eUduSuo();
    method public int getSearch-eUduSuo();
    method public int getSend-eUduSuo();
    property public final int Default;
    property public final int Done;
    property public final int Go;
    property public final int Next;
    property public final int None;
    property public final int Previous;
    property public final int Search;
    property public final int Send;
  }

  @androidx.compose.runtime.Immutable public final class ImeOptions {
    method public androidx.compose.ui.text.input.ImeOptions copy-TWIFjAI(optional boolean singleLine, optional int capitalization, optional boolean autoCorrect, optional int keyboardType, optional int imeAction);
    method public boolean getAutoCorrect();
    method public int getCapitalization-IUNYP9k();
    method public int getImeAction-eUduSuo();
    method public int getKeyboardType-PjHm6EE();
    method public boolean getSingleLine();
    property public final boolean autoCorrect;
    property public final int capitalization;
    property public final int imeAction;
    property public final int keyboardType;
    property public final boolean singleLine;
    field public static final androidx.compose.ui.text.input.ImeOptions.Companion Companion;
  }

  public static final class ImeOptions.Companion {
    method public androidx.compose.ui.text.input.ImeOptions getDefault();
    property public final androidx.compose.ui.text.input.ImeOptions Default;
  }

  @Deprecated public interface InputEventCallback {
    method @Deprecated public void onEditCommands(java.util.List<? extends androidx.compose.ui.text.input.EditCommand> editCommands);
    method @Deprecated public void onImeAction-KlQnJC8(int imeAction);
  }

  public final inline class KeyboardCapitalization {
    ctor public KeyboardCapitalization();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.input.KeyboardCapitalization.Companion Companion;
  }

  public static final class KeyboardCapitalization.Companion {
    method public int getCharacters-IUNYP9k();
    method public int getNone-IUNYP9k();
    method public int getSentences-IUNYP9k();
    method public int getWords-IUNYP9k();
    property public final int Characters;
    property public final int None;
    property public final int Sentences;
    property public final int Words;
  }

  public final inline class KeyboardType {
    ctor public KeyboardType();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.input.KeyboardType.Companion Companion;
  }

  public static final class KeyboardType.Companion {
    method public int getAscii-PjHm6EE();
    method public int getEmail-PjHm6EE();
    method public int getNumber-PjHm6EE();
    method public int getNumberPassword-PjHm6EE();
    method public int getPassword-PjHm6EE();
    method public int getPhone-PjHm6EE();
    method public int getText-PjHm6EE();
    method public int getUri-PjHm6EE();
    property public final int Ascii;
    property public final int Email;
    property public final int Number;
    property public final int NumberPassword;
    property public final int Password;
    property public final int Phone;
    property public final int Text;
    property public final int Uri;
  }

  public final class MoveCursorCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public MoveCursorCommand(int amount);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public int getAmount();
    property public final int amount;
  }

  public interface OffsetMapping {
    method public int originalToTransformed(int offset);
    method public int transformedToOriginal(int offset);
    field public static final androidx.compose.ui.text.input.OffsetMapping.Companion Companion;
  }

  public static final class OffsetMapping.Companion {
    method public androidx.compose.ui.text.input.OffsetMapping getIdentity();
    property public final androidx.compose.ui.text.input.OffsetMapping Identity;
  }

  public final class PasswordVisualTransformation implements androidx.compose.ui.text.input.VisualTransformation {
    ctor public PasswordVisualTransformation(optional char mask);
    method public androidx.compose.ui.text.input.TransformedText filter(androidx.compose.ui.text.AnnotatedString text);
    method public char getMask();
    property public final char mask;
  }

  public interface PlatformTextInputService {
    method public void hideSoftwareKeyboard();
    method public void notifyFocusedRect(androidx.compose.ui.geometry.Rect rect);
    method public void showSoftwareKeyboard();
    method public void startInput(androidx.compose.ui.text.input.TextFieldValue value, androidx.compose.ui.text.input.ImeOptions imeOptions, kotlin.jvm.functions.Function1<? super java.util.List<? extends androidx.compose.ui.text.input.EditCommand>,kotlin.Unit> onEditCommand, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.ImeAction,kotlin.Unit> onImeActionPerformed);
    method public void stopInput();
    method public void updateState(androidx.compose.ui.text.input.TextFieldValue? oldValue, androidx.compose.ui.text.input.TextFieldValue newValue);
  }

  public final class SetComposingRegionCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public SetComposingRegionCommand(int start, int end);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public int getEnd();
    method public int getStart();
    property public final int end;
    property public final int start;
  }

  public final class SetComposingTextCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public SetComposingTextCommand(androidx.compose.ui.text.AnnotatedString annotatedString, int newCursorPosition);
    ctor public SetComposingTextCommand(String text, int newCursorPosition);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public androidx.compose.ui.text.AnnotatedString getAnnotatedString();
    method public int getNewCursorPosition();
    method public String getText();
    property public final androidx.compose.ui.text.AnnotatedString annotatedString;
    property public final int newCursorPosition;
    property public final String text;
  }

  public final class SetSelectionCommand implements androidx.compose.ui.text.input.EditCommand {
    ctor public SetSelectionCommand(int start, int end);
    method public void applyTo(androidx.compose.ui.text.input.EditingBuffer buffer);
    method public int getEnd();
    method public int getStart();
    property public final int end;
    property public final int start;
  }

  @androidx.compose.runtime.Immutable public final class TextFieldValue {
    method public androidx.compose.ui.text.input.TextFieldValue copy-Dr2r1M0(String text, optional long selection, optional androidx.compose.ui.text.TextRange? composition);
    method public androidx.compose.ui.text.input.TextFieldValue copy-ec4yWi8(optional androidx.compose.ui.text.AnnotatedString annotatedString, optional long selection, optional androidx.compose.ui.text.TextRange? composition);
    method public androidx.compose.ui.text.AnnotatedString getAnnotatedString();
    method public androidx.compose.ui.text.TextRange? getComposition-MzsxiRA();
    method public long getSelection-d9O1mEE();
    method public String getText();
    property public final androidx.compose.ui.text.AnnotatedString annotatedString;
    property public final androidx.compose.ui.text.TextRange? composition;
    property public final long selection;
    property public final String text;
    field public static final androidx.compose.ui.text.input.TextFieldValue.Companion Companion;
  }

  public static final class TextFieldValue.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.ui.text.input.TextFieldValue,java.lang.Object> getSaver();
    property public final androidx.compose.runtime.saveable.Saver<androidx.compose.ui.text.input.TextFieldValue,java.lang.Object> Saver;
  }

  public final class TextFieldValueKt {
    method public static androidx.compose.ui.text.AnnotatedString getSelectedText(androidx.compose.ui.text.input.TextFieldValue);
    method public static androidx.compose.ui.text.AnnotatedString getTextAfterSelection(androidx.compose.ui.text.input.TextFieldValue, int maxChars);
    method public static androidx.compose.ui.text.AnnotatedString getTextBeforeSelection(androidx.compose.ui.text.input.TextFieldValue, int maxChars);
  }

  public class TextInputService {
    ctor public TextInputService(androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService);
    method public final void hideSoftwareKeyboard();
    method public final void showSoftwareKeyboard();
    method public androidx.compose.ui.text.input.TextInputSession startInput(androidx.compose.ui.text.input.TextFieldValue value, androidx.compose.ui.text.input.ImeOptions imeOptions, kotlin.jvm.functions.Function1<? super java.util.List<? extends androidx.compose.ui.text.input.EditCommand>,kotlin.Unit> onEditCommand, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.ImeAction,kotlin.Unit> onImeActionPerformed);
    method public void stopInput(androidx.compose.ui.text.input.TextInputSession session);
  }

  public final class TextInputSession {
    ctor public TextInputSession(androidx.compose.ui.text.input.TextInputService textInputService, androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService);
    method public void dispose();
    method public boolean hideSoftwareKeyboard();
    method public boolean isOpen();
    method public boolean notifyFocusedRect(androidx.compose.ui.geometry.Rect rect);
    method public boolean showSoftwareKeyboard();
    method public boolean updateState(androidx.compose.ui.text.input.TextFieldValue? oldValue, androidx.compose.ui.text.input.TextFieldValue newValue);
    property public final boolean isOpen;
  }

  public final class TransformedText {
    ctor public TransformedText(androidx.compose.ui.text.AnnotatedString text, androidx.compose.ui.text.input.OffsetMapping offsetMapping);
    method public androidx.compose.ui.text.input.OffsetMapping getOffsetMapping();
    method public androidx.compose.ui.text.AnnotatedString getText();
    property public final androidx.compose.ui.text.input.OffsetMapping offsetMapping;
    property public final androidx.compose.ui.text.AnnotatedString text;
  }

  @androidx.compose.runtime.Immutable public fun interface VisualTransformation {
    method public androidx.compose.ui.text.input.TransformedText filter(androidx.compose.ui.text.AnnotatedString text);
    field public static final androidx.compose.ui.text.input.VisualTransformation.Companion Companion;
  }

  public static final class VisualTransformation.Companion {
    method public androidx.compose.ui.text.input.VisualTransformation getNone();
    property public final androidx.compose.ui.text.input.VisualTransformation None;
  }

}

package androidx.compose.ui.text.intl {

  public final class AndroidPlatformLocale_androidKt {
  }

  @androidx.compose.runtime.Immutable public final class Locale {
    ctor public Locale(String languageTag);
    method public String getLanguage();
    method public String getRegion();
    method public String getScript();
    method public String toLanguageTag();
    property public final String language;
    property public final String region;
    property public final String script;
    field public static final androidx.compose.ui.text.intl.Locale.Companion Companion;
  }

  public static final class Locale.Companion {
    method public androidx.compose.ui.text.intl.Locale getCurrent();
    property public final androidx.compose.ui.text.intl.Locale current;
  }

  @androidx.compose.runtime.Immutable public final class LocaleList implements java.util.Collection<androidx.compose.ui.text.intl.Locale> kotlin.jvm.internal.markers.KMappedMarker {
    ctor public LocaleList(java.util.List<androidx.compose.ui.text.intl.Locale> localeList);
    ctor public LocaleList(String languageTags);
    ctor public LocaleList(androidx.compose.ui.text.intl.Locale... locales);
    method public operator boolean contains(androidx.compose.ui.text.intl.Locale element);
    method public boolean containsAll(java.util.Collection<?> elements);
    method public operator androidx.compose.ui.text.intl.Locale get(int i);
    method public java.util.List<androidx.compose.ui.text.intl.Locale> getLocaleList();
    method public int getSize();
    method public boolean isEmpty();
    method public java.util.Iterator<androidx.compose.ui.text.intl.Locale> iterator();
    property public final java.util.List<androidx.compose.ui.text.intl.Locale> localeList;
    property public int size;
    field public static final androidx.compose.ui.text.intl.LocaleList.Companion Companion;
  }

  public static final class LocaleList.Companion {
    method public androidx.compose.ui.text.intl.LocaleList getCurrent();
    property public final androidx.compose.ui.text.intl.LocaleList current;
  }

  public final class PlatformLocaleKt {
  }

}

package androidx.compose.ui.text.platform {

  public final class AndroidAccessibilitySpannableString_androidKt {
  }

  public final class AndroidParagraphHelper_androidKt {
  }

  public final class AndroidParagraphIntrinsics_androidKt {
  }

  public final class AndroidParagraph_androidKt {
  }

  public final class AndroidStringDelegate_androidKt {
  }

}

package androidx.compose.ui.text.platform.extensions {

  public final class LocaleExtensions_androidKt {
  }

  public final class PlaceholderExtensions_androidKt {
  }

  public final class SpannableExtensions_androidKt {
  }

  public final class TextPaintExtensions_androidKt {
  }

  public final class TtsAnnotationExtensions_androidKt {
    method public static android.text.style.TtsSpan toSpan(androidx.compose.ui.text.TtsAnnotation);
    method public static android.text.style.TtsSpan toSpan(androidx.compose.ui.text.VerbatimTtsAnnotation);
  }

}

package androidx.compose.ui.text.style {

  @androidx.compose.runtime.Immutable public final inline class BaselineShift {
    ctor public BaselineShift();
    method public static float constructor-impl(float multiplier);
    method @androidx.compose.runtime.Immutable public static inline boolean equals-impl(float p, Object? p1);
    method public static boolean equals-impl0(float p1, float p2);
    method public float getMultiplier();
    method @androidx.compose.runtime.Immutable public static inline int hashCode-impl(float p);
    method @androidx.compose.runtime.Immutable public static inline String! toString-impl(float p);
    property public final float multiplier;
    field public static final androidx.compose.ui.text.style.BaselineShift.Companion Companion;
  }

  public static final class BaselineShift.Companion {
    method public float getNone-y9eOQZs();
    method public float getSubscript-y9eOQZs();
    method public float getSuperscript-y9eOQZs();
    property public final float None;
    property public final float Subscript;
    property public final float Superscript;
  }

  public final class BaselineShiftKt {
    method @androidx.compose.runtime.Stable public static float lerp-ylBt8J4(float start, float stop, float fraction);
  }

  public enum ResolvedTextDirection {
    enum_constant public static final androidx.compose.ui.text.style.ResolvedTextDirection Ltr;
    enum_constant public static final androidx.compose.ui.text.style.ResolvedTextDirection Rtl;
  }

  public final inline class TextAlign {
    ctor public TextAlign();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.style.TextAlign.Companion Companion;
  }

  public static final class TextAlign.Companion {
    method public int getCenter-e0LSkKk();
    method public int getEnd-e0LSkKk();
    method public int getJustify-e0LSkKk();
    method public int getLeft-e0LSkKk();
    method public int getRight-e0LSkKk();
    method public int getStart-e0LSkKk();
    method public java.util.List<androidx.compose.ui.text.style.TextAlign> values();
    property public final int Center;
    property public final int End;
    property public final int Justify;
    property public final int Left;
    property public final int Right;
    property public final int Start;
  }

  @androidx.compose.runtime.Immutable public final class TextDecoration {
    method public operator boolean contains(androidx.compose.ui.text.style.TextDecoration other);
    method public operator boolean equals(Object? other);
    method public int getMask();
    method public operator androidx.compose.ui.text.style.TextDecoration plus(androidx.compose.ui.text.style.TextDecoration decoration);
    property public final int mask;
    field public static final androidx.compose.ui.text.style.TextDecoration.Companion Companion;
  }

  public static final class TextDecoration.Companion {
    method public androidx.compose.ui.text.style.TextDecoration combine(java.util.List<androidx.compose.ui.text.style.TextDecoration> decorations);
    method public androidx.compose.ui.text.style.TextDecoration getLineThrough();
    method public androidx.compose.ui.text.style.TextDecoration getNone();
    method public androidx.compose.ui.text.style.TextDecoration getUnderline();
    property public final androidx.compose.ui.text.style.TextDecoration LineThrough;
    property public final androidx.compose.ui.text.style.TextDecoration None;
    property public final androidx.compose.ui.text.style.TextDecoration Underline;
  }

  public final inline class TextDirection {
    ctor public TextDirection();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.style.TextDirection.Companion Companion;
  }

  public static final class TextDirection.Companion {
    method public int getContent-s_7X-co();
    method public int getContentOrLtr-s_7X-co();
    method public int getContentOrRtl-s_7X-co();
    method public int getLtr-s_7X-co();
    method public int getRtl-s_7X-co();
    property public final int Content;
    property public final int ContentOrLtr;
    property public final int ContentOrRtl;
    property public final int Ltr;
    property public final int Rtl;
  }

  @androidx.compose.runtime.Immutable public final class TextGeometricTransform {
    ctor public TextGeometricTransform(optional float scaleX, optional float skewX);
    method public androidx.compose.ui.text.style.TextGeometricTransform copy(optional float scaleX, optional float skewX);
    method public operator boolean equals(Object? other);
    method public float getScaleX();
    method public float getSkewX();
    property public final float scaleX;
    property public final float skewX;
    field public static final androidx.compose.ui.text.style.TextGeometricTransform.Companion Companion;
  }

  public static final class TextGeometricTransform.Companion {
  }

  public final class TextGeometricTransformKt {
    method public static androidx.compose.ui.text.style.TextGeometricTransform lerp(androidx.compose.ui.text.style.TextGeometricTransform start, androidx.compose.ui.text.style.TextGeometricTransform stop, float fraction);
  }

  @androidx.compose.runtime.Immutable public final class TextIndent {
    method public androidx.compose.ui.text.style.TextIndent copy-8E83U4Q(optional long firstLine, optional long restLine);
    method public operator boolean equals(Object? other);
    method public long getFirstLine-XSAIIZE();
    method public long getRestLine-XSAIIZE();
    property public final long firstLine;
    property public final long restLine;
    field public static final androidx.compose.ui.text.style.TextIndent.Companion Companion;
  }

  public static final class TextIndent.Companion {
    method public androidx.compose.ui.text.style.TextIndent getNone();
    property public final androidx.compose.ui.text.style.TextIndent None;
  }

  public final class TextIndentKt {
    method public static androidx.compose.ui.text.style.TextIndent lerp(androidx.compose.ui.text.style.TextIndent start, androidx.compose.ui.text.style.TextIndent stop, float fraction);
  }

  public final inline class TextOverflow {
    ctor public TextOverflow();
    method public static inline boolean equals-impl(int p, Object? p1);
    method public static boolean equals-impl0(int p1, int p2);
    method public static inline int hashCode-impl(int p);
    method public static String toString-impl(int $this);
    field public static final androidx.compose.ui.text.style.TextOverflow.Companion Companion;
  }

  public static final class TextOverflow.Companion {
    method public int getClip-gIe3tQ8();
    method public int getEllipsis-gIe3tQ8();
    method public int getVisible-gIe3tQ8();
    property public final int Clip;
    property public final int Ellipsis;
    property public final int Visible;
  }

}

