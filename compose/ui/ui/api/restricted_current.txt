// Signature format: 4.0
package androidx.compose.ui {

  public final class AbsoluteAlignment {
    method public androidx.compose.ui.Alignment getBottomLeft();
    method public androidx.compose.ui.Alignment getBottomRight();
    method public androidx.compose.ui.Alignment getCenterLeft();
    method public androidx.compose.ui.Alignment getCenterRight();
    method public androidx.compose.ui.Alignment.Horizontal getLeft();
    method public androidx.compose.ui.Alignment.Horizontal getRight();
    method public androidx.compose.ui.Alignment getTopLeft();
    method public androidx.compose.ui.Alignment getTopRight();
    property public final androidx.compose.ui.Alignment BottomLeft;
    property public final androidx.compose.ui.Alignment BottomRight;
    property public final androidx.compose.ui.Alignment CenterLeft;
    property public final androidx.compose.ui.Alignment CenterRight;
    property public final androidx.compose.ui.Alignment.Horizontal Left;
    property public final androidx.compose.ui.Alignment.Horizontal Right;
    property public final androidx.compose.ui.Alignment TopLeft;
    property public final androidx.compose.ui.Alignment TopRight;
    field public static final androidx.compose.ui.AbsoluteAlignment INSTANCE;
  }

  @androidx.compose.runtime.Immutable public fun interface Alignment {
    method public long align-oYSo38o(long size, long space, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    field public static final androidx.compose.ui.Alignment.Companion Companion;
  }

  public static final class Alignment.Companion {
    method public androidx.compose.ui.Alignment.Vertical getBottom();
    method public androidx.compose.ui.Alignment getBottomCenter();
    method public androidx.compose.ui.Alignment getBottomEnd();
    method public androidx.compose.ui.Alignment getBottomStart();
    method public androidx.compose.ui.Alignment getCenter();
    method public androidx.compose.ui.Alignment getCenterEnd();
    method public androidx.compose.ui.Alignment.Horizontal getCenterHorizontally();
    method public androidx.compose.ui.Alignment getCenterStart();
    method public androidx.compose.ui.Alignment.Vertical getCenterVertically();
    method public androidx.compose.ui.Alignment.Horizontal getEnd();
    method public androidx.compose.ui.Alignment.Horizontal getStart();
    method public androidx.compose.ui.Alignment.Vertical getTop();
    method public androidx.compose.ui.Alignment getTopCenter();
    method public androidx.compose.ui.Alignment getTopEnd();
    method public androidx.compose.ui.Alignment getTopStart();
    property public final androidx.compose.ui.Alignment.Vertical Bottom;
    property public final androidx.compose.ui.Alignment BottomCenter;
    property public final androidx.compose.ui.Alignment BottomEnd;
    property public final androidx.compose.ui.Alignment BottomStart;
    property public final androidx.compose.ui.Alignment Center;
    property public final androidx.compose.ui.Alignment CenterEnd;
    property public final androidx.compose.ui.Alignment.Horizontal CenterHorizontally;
    property public final androidx.compose.ui.Alignment CenterStart;
    property public final androidx.compose.ui.Alignment.Vertical CenterVertically;
    property public final androidx.compose.ui.Alignment.Horizontal End;
    property public final androidx.compose.ui.Alignment.Horizontal Start;
    property public final androidx.compose.ui.Alignment.Vertical Top;
    property public final androidx.compose.ui.Alignment TopCenter;
    property public final androidx.compose.ui.Alignment TopEnd;
    property public final androidx.compose.ui.Alignment TopStart;
  }

  @androidx.compose.runtime.Immutable public static fun interface Alignment.Horizontal {
    method public int align(int size, int space, androidx.compose.ui.unit.LayoutDirection layoutDirection);
  }

  @androidx.compose.runtime.Immutable public static fun interface Alignment.Vertical {
    method public int align(int size, int space);
  }

  @androidx.compose.runtime.Immutable public final class BiasAbsoluteAlignment implements androidx.compose.ui.Alignment {
    ctor public BiasAbsoluteAlignment(float horizontalBias, float verticalBias);
    method public long align-oYSo38o(long size, long space, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.BiasAbsoluteAlignment copy(float horizontalBias, float verticalBias);
  }

  @androidx.compose.runtime.Immutable public static final class BiasAbsoluteAlignment.Horizontal implements androidx.compose.ui.Alignment.Horizontal {
    ctor public BiasAbsoluteAlignment.Horizontal(float bias);
    method public int align(int size, int space, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.BiasAbsoluteAlignment.Horizontal copy(float bias);
  }

  @androidx.compose.runtime.Immutable public final class BiasAlignment implements androidx.compose.ui.Alignment {
    ctor public BiasAlignment(float horizontalBias, float verticalBias);
    method public long align-oYSo38o(long size, long space, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method public float component1();
    method public float component2();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.BiasAlignment copy(float horizontalBias, float verticalBias);
    method public float getHorizontalBias();
    method public float getVerticalBias();
    property public final float horizontalBias;
    property public final float verticalBias;
  }

  @androidx.compose.runtime.Immutable public static final class BiasAlignment.Horizontal implements androidx.compose.ui.Alignment.Horizontal {
    ctor public BiasAlignment.Horizontal(float bias);
    method public int align(int size, int space, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.BiasAlignment.Horizontal copy(float bias);
  }

  @androidx.compose.runtime.Immutable public static final class BiasAlignment.Vertical implements androidx.compose.ui.Alignment.Vertical {
    ctor public BiasAlignment.Vertical(float bias);
    method public int align(int size, int space);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.BiasAlignment.Vertical copy(float bias);
  }

  public final class CombinedModifier implements androidx.compose.ui.Modifier {
    ctor public CombinedModifier(androidx.compose.ui.Modifier outer, androidx.compose.ui.Modifier inner);
    method public boolean all(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public boolean any(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.compose.ui.Modifier.Element,? extends R> operation);
    method public <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.compose.ui.Modifier.Element,? super R,? extends R> operation);
  }

  public final class ComposedModifierKt {
    method public static androidx.compose.ui.Modifier composed(androidx.compose.ui.Modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.platform.InspectorInfo,kotlin.Unit> inspectorInfo, kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier,? extends androidx.compose.ui.Modifier> factory);
    method public static androidx.compose.ui.Modifier materialize(androidx.compose.runtime.Composer, androidx.compose.ui.Modifier modifier);
  }

  @kotlin.RequiresOptIn(message="This API is experimental and is likely to change in the future.") public @interface ExperimentalComposeUiApi {
  }

  @kotlin.RequiresOptIn(message="Unstable API for use only between compose-ui modules sharing the same exact version, " + "subject to change without notice in major, minor, or patch releases.") public @interface InternalComposeUiApi {
  }

  @androidx.compose.runtime.Stable public interface Modifier {
    method public boolean all(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public boolean any(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.compose.ui.Modifier.Element,? extends R> operation);
    method public <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.compose.ui.Modifier.Element,? super R,? extends R> operation);
    method public default infix androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier other);
    field public static final androidx.compose.ui.Modifier.Companion Companion;
  }

  public static final class Modifier.Companion implements androidx.compose.ui.Modifier {
    method public boolean all(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public boolean any(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.compose.ui.Modifier.Element,? extends R> operation);
    method public <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.compose.ui.Modifier.Element,? super R,? extends R> operation);
  }

  public static interface Modifier.Element extends androidx.compose.ui.Modifier {
    method public default boolean all(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public default boolean any(kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier.Element,java.lang.Boolean> predicate);
    method public default <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.compose.ui.Modifier.Element,? extends R> operation);
    method public default <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.compose.ui.Modifier.Element,? super R,? extends R> operation);
  }

  public final class ZIndexModifierKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier zIndex(androidx.compose.ui.Modifier, float zIndex);
  }

}

package androidx.compose.ui.autofill {

  public final class AndroidAutofillDebugUtils_androidKt {
  }

  public final class AndroidAutofillType_androidKt {
  }

  public final class AndroidAutofill_androidKt {
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public interface Autofill {
    method public void cancelAutofillForNode(androidx.compose.ui.autofill.AutofillNode autofillNode);
    method public void requestAutofillForNode(androidx.compose.ui.autofill.AutofillNode autofillNode);
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public final class AutofillNode {
    ctor public AutofillNode(optional java.util.List<? extends androidx.compose.ui.autofill.AutofillType> autofillTypes, optional androidx.compose.ui.geometry.Rect? boundingBox, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit>? onFill);
    method public java.util.List<androidx.compose.ui.autofill.AutofillType> getAutofillTypes();
    method public androidx.compose.ui.geometry.Rect? getBoundingBox();
    method public int getId();
    method public kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit>? getOnFill();
    method public void setBoundingBox(androidx.compose.ui.geometry.Rect? p);
    property public final java.util.List<androidx.compose.ui.autofill.AutofillType> autofillTypes;
    property public final androidx.compose.ui.geometry.Rect? boundingBox;
    property public final int id;
    property public final kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit>? onFill;
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public final class AutofillTree {
    ctor public AutofillTree();
    method public java.util.Map<java.lang.Integer,androidx.compose.ui.autofill.AutofillNode> getChildren();
    method public kotlin.Unit? performAutofill(int id, String value);
    method public operator void plusAssign(androidx.compose.ui.autofill.AutofillNode autofillNode);
    property public final java.util.Map<java.lang.Integer,androidx.compose.ui.autofill.AutofillNode> children;
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public enum AutofillType {
    enum_constant public static final androidx.compose.ui.autofill.AutofillType AddressAuxiliaryDetails;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType AddressCountry;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType AddressLocality;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType AddressRegion;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType AddressStreet;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType BirthDateDay;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType BirthDateFull;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType BirthDateMonth;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType BirthDateYear;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType CreditCardExpirationDate;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType CreditCardExpirationDay;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType CreditCardExpirationMonth;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType CreditCardExpirationYear;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType CreditCardNumber;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType CreditCardSecurityCode;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType EmailAddress;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType Gender;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType NewPassword;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType NewUsername;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType Password;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonFirstName;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonFullName;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonLastName;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonMiddleInitial;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonMiddleName;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonNamePrefix;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PersonNameSuffix;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PhoneCountryCode;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PhoneNumber;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PhoneNumberDevice;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PhoneNumberNational;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PostalAddress;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PostalCode;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType PostalCodeExtended;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType SmsOtpCode;
    enum_constant public static final androidx.compose.ui.autofill.AutofillType Username;
  }

}

package androidx.compose.ui.draw {

  public final class AlphaKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier alpha(androidx.compose.ui.Modifier, float alpha);
  }

  public interface BuildDrawCacheParams {
    method public androidx.compose.ui.unit.Density getDensity();
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method public long getSize-NH-jbRc();
    property public abstract androidx.compose.ui.unit.Density density;
    property public abstract androidx.compose.ui.unit.LayoutDirection layoutDirection;
    property public abstract long size;
  }

  public final class CacheDrawScope implements androidx.compose.ui.unit.Density {
    method public float getDensity();
    method public float getFontScale();
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method public long getSize-NH-jbRc();
    method public androidx.compose.ui.draw.DrawResult onDrawBehind(kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.drawscope.DrawScope,kotlin.Unit> block);
    method public androidx.compose.ui.draw.DrawResult onDrawWithContent(kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.drawscope.ContentDrawScope,kotlin.Unit> block);
    property public float density;
    property public float fontScale;
    property public final androidx.compose.ui.unit.LayoutDirection layoutDirection;
    property public final long size;
  }

  public final class ClipKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier clip(androidx.compose.ui.Modifier, androidx.compose.ui.graphics.Shape shape);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier clipToBounds(androidx.compose.ui.Modifier);
  }

  public interface DrawCacheModifier extends androidx.compose.ui.draw.DrawModifier {
    method public void onBuildCache(androidx.compose.ui.draw.BuildDrawCacheParams params);
  }

  public interface DrawModifier extends androidx.compose.ui.Modifier.Element {
    method public void draw(androidx.compose.ui.graphics.drawscope.ContentDrawScope);
  }

  public final class DrawModifierKt {
    method public static androidx.compose.ui.Modifier drawBehind(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.drawscope.DrawScope,kotlin.Unit> onDraw);
    method public static androidx.compose.ui.Modifier drawWithCache(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.draw.CacheDrawScope,androidx.compose.ui.draw.DrawResult> onBuildDrawCache);
    method public static androidx.compose.ui.Modifier drawWithContent(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.drawscope.ContentDrawScope,kotlin.Unit> onDraw);
  }

  public final class DrawResult {
  }

  public final class PainterModifierKt {
    method public static androidx.compose.ui.Modifier paint(androidx.compose.ui.Modifier, androidx.compose.ui.graphics.painter.Painter painter, optional boolean sizeToIntrinsics, optional androidx.compose.ui.Alignment alignment, optional androidx.compose.ui.layout.ContentScale contentScale, optional float alpha, optional androidx.compose.ui.graphics.ColorFilter? colorFilter);
  }

  public final class RotateKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier rotate(androidx.compose.ui.Modifier, float degrees);
  }

  public final class ScaleKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier scale(androidx.compose.ui.Modifier, float scaleX, float scaleY);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier scale(androidx.compose.ui.Modifier, float scale);
  }

  public final class ShadowKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier shadow-HfQes2E(androidx.compose.ui.Modifier, float elevation, optional androidx.compose.ui.graphics.Shape shape, optional boolean clip);
  }

}

package androidx.compose.ui.focus {

  public final class FocusChangedModifierKt {
    method public static androidx.compose.ui.Modifier onFocusChanged(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.focus.FocusState,kotlin.Unit> onFocusChanged);
  }

  public enum FocusDirection {
    enum_constant public static final androidx.compose.ui.focus.FocusDirection Down;
    enum_constant public static final androidx.compose.ui.focus.FocusDirection Left;
    enum_constant public static final androidx.compose.ui.focus.FocusDirection Next;
    enum_constant public static final androidx.compose.ui.focus.FocusDirection Previous;
    enum_constant public static final androidx.compose.ui.focus.FocusDirection Right;
    enum_constant public static final androidx.compose.ui.focus.FocusDirection Up;
  }

  public interface FocusEventModifier extends androidx.compose.ui.Modifier.Element {
    method public void onFocusEvent(androidx.compose.ui.focus.FocusState focusState);
  }

  public final class FocusEventModifierKt {
    method public static androidx.compose.ui.Modifier onFocusEvent(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.focus.FocusState,kotlin.Unit> onFocusEvent);
  }

  public interface FocusManager {
    method public void clearFocus(optional boolean forcedClear);
    method public boolean moveFocus(androidx.compose.ui.focus.FocusDirection focusDirection);
  }

  public final class FocusModifierKt {
    method public static androidx.compose.ui.Modifier focusModifier(androidx.compose.ui.Modifier);
  }

  public final class FocusNodeUtilsKt {
  }

  public final class FocusOrder {
    ctor public FocusOrder();
    method public androidx.compose.ui.focus.FocusRequester getDown();
    method public androidx.compose.ui.focus.FocusRequester getEnd();
    method public androidx.compose.ui.focus.FocusRequester getLeft();
    method public androidx.compose.ui.focus.FocusRequester getNext();
    method public androidx.compose.ui.focus.FocusRequester getPrevious();
    method public androidx.compose.ui.focus.FocusRequester getRight();
    method public androidx.compose.ui.focus.FocusRequester getStart();
    method public androidx.compose.ui.focus.FocusRequester getUp();
    method public void setDown(androidx.compose.ui.focus.FocusRequester p);
    method public void setEnd(androidx.compose.ui.focus.FocusRequester p);
    method public void setLeft(androidx.compose.ui.focus.FocusRequester p);
    method public void setNext(androidx.compose.ui.focus.FocusRequester p);
    method public void setPrevious(androidx.compose.ui.focus.FocusRequester p);
    method public void setRight(androidx.compose.ui.focus.FocusRequester p);
    method public void setStart(androidx.compose.ui.focus.FocusRequester p);
    method public void setUp(androidx.compose.ui.focus.FocusRequester p);
    property public final androidx.compose.ui.focus.FocusRequester down;
    property public final androidx.compose.ui.focus.FocusRequester end;
    property public final androidx.compose.ui.focus.FocusRequester left;
    property public final androidx.compose.ui.focus.FocusRequester next;
    property public final androidx.compose.ui.focus.FocusRequester previous;
    property public final androidx.compose.ui.focus.FocusRequester right;
    property public final androidx.compose.ui.focus.FocusRequester start;
    property public final androidx.compose.ui.focus.FocusRequester up;
  }

  public interface FocusOrderModifier extends androidx.compose.ui.Modifier.Element {
    method public void populateFocusOrder(androidx.compose.ui.focus.FocusOrder focusOrder);
  }

  public final class FocusOrderModifierKt {
    method public static androidx.compose.ui.Modifier focusOrder(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.focus.FocusOrder,kotlin.Unit> focusOrderReceiver);
    method public static androidx.compose.ui.Modifier focusOrder(androidx.compose.ui.Modifier, androidx.compose.ui.focus.FocusRequester focusRequester);
    method public static androidx.compose.ui.Modifier focusOrder(androidx.compose.ui.Modifier, androidx.compose.ui.focus.FocusRequester focusRequester, kotlin.jvm.functions.Function1<? super androidx.compose.ui.focus.FocusOrder,kotlin.Unit> focusOrderReceiver);
  }

  public final class FocusRequester {
    ctor public FocusRequester();
    method public boolean captureFocus();
    method public boolean freeFocus();
    method public void requestFocus();
    field public static final androidx.compose.ui.focus.FocusRequester.Companion Companion;
  }

  public static final class FocusRequester.Companion {
    method @androidx.compose.ui.ExperimentalComposeUiApi public androidx.compose.ui.focus.FocusRequester.Companion.FocusRequesterFactory createRefs();
    method public androidx.compose.ui.focus.FocusRequester getDefault();
    property public final androidx.compose.ui.focus.FocusRequester Default;
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public static final class FocusRequester.Companion.FocusRequesterFactory {
    method public operator androidx.compose.ui.focus.FocusRequester component1();
    method public operator androidx.compose.ui.focus.FocusRequester component10();
    method public operator androidx.compose.ui.focus.FocusRequester component11();
    method public operator androidx.compose.ui.focus.FocusRequester component12();
    method public operator androidx.compose.ui.focus.FocusRequester component13();
    method public operator androidx.compose.ui.focus.FocusRequester component14();
    method public operator androidx.compose.ui.focus.FocusRequester component15();
    method public operator androidx.compose.ui.focus.FocusRequester component16();
    method public operator androidx.compose.ui.focus.FocusRequester component2();
    method public operator androidx.compose.ui.focus.FocusRequester component3();
    method public operator androidx.compose.ui.focus.FocusRequester component4();
    method public operator androidx.compose.ui.focus.FocusRequester component5();
    method public operator androidx.compose.ui.focus.FocusRequester component6();
    method public operator androidx.compose.ui.focus.FocusRequester component7();
    method public operator androidx.compose.ui.focus.FocusRequester component8();
    method public operator androidx.compose.ui.focus.FocusRequester component9();
    field public static final androidx.compose.ui.focus.FocusRequester.Companion.FocusRequesterFactory INSTANCE;
  }

  public final class FocusRequesterKt {
  }

  public interface FocusRequesterModifier extends androidx.compose.ui.Modifier.Element {
    method public androidx.compose.ui.focus.FocusRequester getFocusRequester();
    property public abstract androidx.compose.ui.focus.FocusRequester focusRequester;
  }

  public final class FocusRequesterModifierKt {
    method public static androidx.compose.ui.Modifier focusRequester(androidx.compose.ui.Modifier, androidx.compose.ui.focus.FocusRequester focusRequester);
  }

  public enum FocusState {
    enum_constant public static final androidx.compose.ui.focus.FocusState Active;
    enum_constant public static final androidx.compose.ui.focus.FocusState ActiveParent;
    enum_constant public static final androidx.compose.ui.focus.FocusState Captured;
    enum_constant public static final androidx.compose.ui.focus.FocusState Disabled;
    enum_constant public static final androidx.compose.ui.focus.FocusState Inactive;
  }

  public final class FocusStateKt {
    method public static boolean isFocused(androidx.compose.ui.focus.FocusState);
  }

  public final class FocusTransactionsKt {
  }

  public final class FocusTraversalKt {
  }

}

package androidx.compose.ui.graphics {

  public final class GraphicsLayerModifierKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier graphicsLayer(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.GraphicsLayerScope,kotlin.Unit> block);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier graphicsLayer-i_P0lGk(androidx.compose.ui.Modifier, optional float scaleX, optional float scaleY, optional float alpha, optional float translationX, optional float translationY, optional float shadowElevation, optional float rotationX, optional float rotationY, optional float rotationZ, optional float cameraDistance, optional long transformOrigin, optional androidx.compose.ui.graphics.Shape shape, optional boolean clip);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier toolingGraphicsLayer(androidx.compose.ui.Modifier);
  }

  public interface GraphicsLayerScope extends androidx.compose.ui.unit.Density {
    method public float getAlpha();
    method public float getCameraDistance();
    method public boolean getClip();
    method public float getRotationX();
    method public float getRotationY();
    method public float getRotationZ();
    method public float getScaleX();
    method public float getScaleY();
    method public float getShadowElevation();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public long getTransformOrigin-SzJe1aQ();
    method public float getTranslationX();
    method public float getTranslationY();
    method public void setAlpha(float p);
    method public void setCameraDistance(float p);
    method public void setClip(boolean p);
    method public void setRotationX(float p);
    method public void setRotationY(float p);
    method public void setRotationZ(float p);
    method public void setScaleX(float p);
    method public void setScaleY(float p);
    method public void setShadowElevation(float p);
    method public void setShape(androidx.compose.ui.graphics.Shape p);
    method public void setTransformOrigin-__ExYCQ(long p);
    method public void setTranslationX(float p);
    method public void setTranslationY(float p);
    property public abstract float alpha;
    property public abstract float cameraDistance;
    property public abstract boolean clip;
    property public abstract float rotationX;
    property public abstract float rotationY;
    property public abstract float rotationZ;
    property public abstract float scaleX;
    property public abstract float scaleY;
    property public abstract float shadowElevation;
    property public abstract androidx.compose.ui.graphics.Shape shape;
    property public abstract long transformOrigin;
    property public abstract float translationX;
    property public abstract float translationY;
  }

  public final class GraphicsLayerScopeKt {
    method public static androidx.compose.ui.graphics.GraphicsLayerScope GraphicsLayerScope();
    field public static final float DefaultCameraDistance = 8.0f;
  }

  @androidx.compose.runtime.Immutable public final inline class TransformOrigin {
    ctor public TransformOrigin();
    method @androidx.compose.runtime.Stable public static inline operator float component1-impl(long $this);
    method @androidx.compose.runtime.Stable public static inline operator float component2-impl(long $this);
    method public static long copy-SzJe1aQ(long $this, optional float pivotFractionX, optional float pivotFractionY);
    method @androidx.compose.runtime.Immutable public static inline boolean equals-impl(long p, Object? p1);
    method public static boolean equals-impl0(long p1, long p2);
    method public static float getPivotFractionX-impl(long $this);
    method public static float getPivotFractionY-impl(long $this);
    method @androidx.compose.runtime.Immutable public static inline int hashCode-impl(long p);
    method @androidx.compose.runtime.Immutable public static inline String! toString-impl(long p);
    field public static final androidx.compose.ui.graphics.TransformOrigin.Companion Companion;
  }

  public static final class TransformOrigin.Companion {
    method public long getCenter-SzJe1aQ();
    property public final long Center;
  }

  public final class TransformOriginKt {
    method public static long TransformOrigin(float pivotFractionX, float pivotFractionY);
  }

}

package androidx.compose.ui.graphics.vector {

  @androidx.compose.runtime.Immutable @androidx.compose.ui.ExperimentalComposeUiApi public final class AnimatedImageVector {
    method public androidx.compose.ui.graphics.vector.ImageVector getImageVector();
    method public int getTotalDuration();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter painterFor(boolean atEnd);
    property public final androidx.compose.ui.graphics.vector.ImageVector imageVector;
    property public final int totalDuration;
  }

  public final class AnimatorKt {
  }

  @androidx.compose.runtime.Immutable public final class ImageVector {
    method public float getDefaultHeight-D9Ej5fM();
    method public float getDefaultWidth-D9Ej5fM();
    method public String getName();
    method public androidx.compose.ui.graphics.vector.VectorGroup getRoot();
    method public androidx.compose.ui.graphics.BlendMode getTintBlendMode();
    method public long getTintColor-0d7_KjU();
    method public float getViewportHeight();
    method public float getViewportWidth();
    property public final float defaultHeight;
    property public final float defaultWidth;
    property public final String name;
    property public final androidx.compose.ui.graphics.vector.VectorGroup root;
    property public final androidx.compose.ui.graphics.BlendMode tintBlendMode;
    property public final long tintColor;
    property public final float viewportHeight;
    property public final float viewportWidth;
    field public static final androidx.compose.ui.graphics.vector.ImageVector.Companion Companion;
  }

  public static final class ImageVector.Builder {
    method public androidx.compose.ui.graphics.vector.ImageVector.Builder addGroup(optional String name, optional float rotate, optional float pivotX, optional float pivotY, optional float scaleX, optional float scaleY, optional float translationX, optional float translationY, optional java.util.List<? extends androidx.compose.ui.graphics.vector.PathNode> clipPathData);
    method public androidx.compose.ui.graphics.vector.ImageVector.Builder addPath(java.util.List<? extends androidx.compose.ui.graphics.vector.PathNode> pathData, optional androidx.compose.ui.graphics.PathFillType pathFillType, optional String name, optional androidx.compose.ui.graphics.Brush? fill, optional float fillAlpha, optional androidx.compose.ui.graphics.Brush? stroke, optional float strokeAlpha, optional float strokeLineWidth, optional androidx.compose.ui.graphics.StrokeCap strokeLineCap, optional androidx.compose.ui.graphics.StrokeJoin strokeLineJoin, optional float strokeLineMiter, optional float trimPathStart, optional float trimPathEnd, optional float trimPathOffset);
    method public androidx.compose.ui.graphics.vector.ImageVector build();
    method public androidx.compose.ui.graphics.vector.ImageVector.Builder clearGroup();
  }

  public static final class ImageVector.Companion {
  }

  public final class ImageVectorKt {
    method public static inline androidx.compose.ui.graphics.vector.ImageVector.Builder group(androidx.compose.ui.graphics.vector.ImageVector.Builder, optional String name, optional float rotate, optional float pivotX, optional float pivotY, optional float scaleX, optional float scaleY, optional float translationX, optional float translationY, optional java.util.List<? extends androidx.compose.ui.graphics.vector.PathNode> clipPathData, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.vector.ImageVector.Builder,kotlin.Unit> block);
    method public static inline androidx.compose.ui.graphics.vector.ImageVector.Builder path(androidx.compose.ui.graphics.vector.ImageVector.Builder, optional String name, optional androidx.compose.ui.graphics.Brush? fill, optional float fillAlpha, optional androidx.compose.ui.graphics.Brush? stroke, optional float strokeAlpha, optional float strokeLineWidth, optional androidx.compose.ui.graphics.StrokeCap strokeLineCap, optional androidx.compose.ui.graphics.StrokeJoin strokeLineJoin, optional float strokeLineMiter, optional androidx.compose.ui.graphics.PathFillType pathFillType, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.vector.PathBuilder,kotlin.Unit> pathBuilder);
  }

  public abstract sealed class VNode {
    method public abstract void draw(androidx.compose.ui.graphics.drawscope.DrawScope);
    method public final void invalidate();
  }

  public final class VectorApplier extends androidx.compose.runtime.AbstractApplier<androidx.compose.ui.graphics.vector.VNode> {
    ctor public VectorApplier(androidx.compose.ui.graphics.vector.VNode root);
    method public void insertBottomUp(int index, androidx.compose.ui.graphics.vector.VNode instance);
    method public void insertTopDown(int index, androidx.compose.ui.graphics.vector.VNode instance);
    method public void move(int from, int to, int count);
    method protected void onClear();
    method public void remove(int index, int count);
  }

  public final class VectorComposeKt {
    method @androidx.compose.runtime.Composable public static void Group(optional String name, optional float rotation, optional float pivotX, optional float pivotY, optional float scaleX, optional float scaleY, optional float translationX, optional float translationY, optional java.util.List<? extends androidx.compose.ui.graphics.vector.PathNode> clipPathData, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Path(java.util.List<? extends androidx.compose.ui.graphics.vector.PathNode> pathData, optional androidx.compose.ui.graphics.PathFillType pathFillType, optional String name, optional androidx.compose.ui.graphics.Brush? fill, optional float fillAlpha, optional androidx.compose.ui.graphics.Brush? stroke, optional float strokeAlpha, optional float strokeLineWidth, optional androidx.compose.ui.graphics.StrokeCap strokeLineCap, optional androidx.compose.ui.graphics.StrokeJoin strokeLineJoin, optional float strokeLineMiter, optional float trimPathStart, optional float trimPathEnd, optional float trimPathOffset);
  }

  @androidx.compose.runtime.Immutable public final class VectorGroup extends androidx.compose.ui.graphics.vector.VectorNode implements java.lang.Iterable<androidx.compose.ui.graphics.vector.VectorNode> kotlin.jvm.internal.markers.KMappedMarker {
    method public operator androidx.compose.ui.graphics.vector.VectorNode get(int index);
    method public java.util.List<androidx.compose.ui.graphics.vector.PathNode> getClipPathData();
    method public String getName();
    method public float getPivotX();
    method public float getPivotY();
    method public float getRotation();
    method public float getScaleX();
    method public float getScaleY();
    method public int getSize();
    method public float getTranslationX();
    method public float getTranslationY();
    method public java.util.Iterator<androidx.compose.ui.graphics.vector.VectorNode> iterator();
    property public final java.util.List<androidx.compose.ui.graphics.vector.PathNode> clipPathData;
    property public final String name;
    property public final float pivotX;
    property public final float pivotY;
    property public final float rotation;
    property public final float scaleX;
    property public final float scaleY;
    property public final int size;
    property public final float translationX;
    property public final float translationY;
  }

  public final class VectorKt {
    method public static inline java.util.List<androidx.compose.ui.graphics.vector.PathNode> PathData(kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.vector.PathBuilder,kotlin.Unit> block);
    method public static java.util.List<androidx.compose.ui.graphics.vector.PathNode> addPathNodes(String? pathStr);
    method public static androidx.compose.ui.graphics.PathFillType getDefaultFillType();
    method public static androidx.compose.ui.graphics.StrokeCap getDefaultStrokeLineCap();
    method public static androidx.compose.ui.graphics.StrokeJoin getDefaultStrokeLineJoin();
    method public static androidx.compose.ui.graphics.BlendMode getDefaultTintBlendMode();
    method public static long getDefaultTintColor();
    method public static java.util.List<androidx.compose.ui.graphics.vector.PathNode> getEmptyPath();
    field public static final String DefaultGroupName = "";
    field public static final String DefaultPathName = "";
    field public static final float DefaultPivotX = 0.0f;
    field public static final float DefaultPivotY = 0.0f;
    field public static final float DefaultRotation = 0.0f;
    field public static final float DefaultScaleX = 1.0f;
    field public static final float DefaultScaleY = 1.0f;
    field public static final float DefaultStrokeLineMiter = 4.0f;
    field public static final float DefaultStrokeLineWidth = 0.0f;
    field public static final float DefaultTranslationX = 0.0f;
    field public static final float DefaultTranslationY = 0.0f;
    field public static final float DefaultTrimPathEnd = 1.0f;
    field public static final float DefaultTrimPathOffset = 0.0f;
    field public static final float DefaultTrimPathStart = 0.0f;
  }

  public abstract sealed class VectorNode {
  }

  public final class VectorPainter extends androidx.compose.ui.graphics.painter.Painter {
    method public long getIntrinsicSize-NH-jbRc();
    method protected void onDraw(androidx.compose.ui.graphics.drawscope.DrawScope);
    property public long intrinsicSize;
  }

  public final class VectorPainterKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.vector.VectorPainter rememberVectorPainter(androidx.compose.ui.graphics.vector.ImageVector image);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.vector.VectorPainter rememberVectorPainter-u_AqRoo(float defaultWidth, float defaultHeight, optional float viewportWidth, optional float viewportHeight, optional String name, optional long tintColor, optional androidx.compose.ui.graphics.BlendMode tintBlendMode, kotlin.jvm.functions.Function2<? super java.lang.Float,? super java.lang.Float,kotlin.Unit> content);
    field public static final String RootGroupName = "VectorRootGroup";
  }

  @androidx.compose.runtime.Immutable public final class VectorPath extends androidx.compose.ui.graphics.vector.VectorNode {
    method public androidx.compose.ui.graphics.Brush? getFill();
    method public float getFillAlpha();
    method public String getName();
    method public java.util.List<androidx.compose.ui.graphics.vector.PathNode> getPathData();
    method public androidx.compose.ui.graphics.PathFillType getPathFillType();
    method public androidx.compose.ui.graphics.Brush? getStroke();
    method public float getStrokeAlpha();
    method public androidx.compose.ui.graphics.StrokeCap getStrokeLineCap();
    method public androidx.compose.ui.graphics.StrokeJoin getStrokeLineJoin();
    method public float getStrokeLineMiter();
    method public float getStrokeLineWidth();
    method public float getTrimPathEnd();
    method public float getTrimPathOffset();
    method public float getTrimPathStart();
    property public final androidx.compose.ui.graphics.Brush? fill;
    property public final float fillAlpha;
    property public final String name;
    property public final java.util.List<androidx.compose.ui.graphics.vector.PathNode> pathData;
    property public final androidx.compose.ui.graphics.PathFillType pathFillType;
    property public final androidx.compose.ui.graphics.Brush? stroke;
    property public final float strokeAlpha;
    property public final androidx.compose.ui.graphics.StrokeCap strokeLineCap;
    property public final androidx.compose.ui.graphics.StrokeJoin strokeLineJoin;
    property public final float strokeLineMiter;
    property public final float strokeLineWidth;
    property public final float trimPathEnd;
    property public final float trimPathOffset;
    property public final float trimPathStart;
  }

}

package androidx.compose.ui.graphics.vector.compat {

  public final class XmlAnimatedVectorParser_androidKt {
  }

  public final class XmlAnimatorParser_androidKt {
  }

  public final class XmlPullParserUtils_androidKt {
  }

  public final class XmlVectorParser_androidKt {
  }

}

package androidx.compose.ui.hapticfeedback {

  public interface HapticFeedback {
    method public void performHapticFeedback(androidx.compose.ui.hapticfeedback.HapticFeedbackType hapticFeedbackType);
  }

  public enum HapticFeedbackType {
    enum_constant public static final androidx.compose.ui.hapticfeedback.HapticFeedbackType LongPress;
    enum_constant public static final androidx.compose.ui.hapticfeedback.HapticFeedbackType TextHandleMove;
  }

}

package androidx.compose.ui.input.key {

  public final inline class Key {
    ctor public Key();
    method public static long constructor-impl(long keyCode);
    method public static inline boolean equals-impl(long p, Object? p1);
    method public static boolean equals-impl0(long p1, long p2);
    method public long getKeyCode();
    method public static inline int hashCode-impl(long p);
    method public static String toString-impl(long $this);
    property public final long keyCode;
    field public static final androidx.compose.ui.input.key.Key.Companion Companion;
  }

  public static final class Key.Companion {
    method public long getA-EK5gGoQ();
    method public long getAllApps-EK5gGoQ();
    method public long getAltLeft-EK5gGoQ();
    method public long getAltRight-EK5gGoQ();
    method public long getApostrophe-EK5gGoQ();
    method public long getAppSwitch-EK5gGoQ();
    method public long getAssist-EK5gGoQ();
    method public long getAt-EK5gGoQ();
    method public long getAvReceiverInput-EK5gGoQ();
    method public long getAvReceiverPower-EK5gGoQ();
    method public long getB-EK5gGoQ();
    method public long getBack-EK5gGoQ();
    method public long getBackslash-EK5gGoQ();
    method public long getBackspace-EK5gGoQ();
    method public long getBookmark-EK5gGoQ();
    method public long getBreak-EK5gGoQ();
    method public long getBrightnessDown-EK5gGoQ();
    method public long getBrightnessUp-EK5gGoQ();
    method public long getBrowser-EK5gGoQ();
    method public long getButton1-EK5gGoQ();
    method public long getButton10-EK5gGoQ();
    method public long getButton11-EK5gGoQ();
    method public long getButton12-EK5gGoQ();
    method public long getButton13-EK5gGoQ();
    method public long getButton14-EK5gGoQ();
    method public long getButton15-EK5gGoQ();
    method public long getButton16-EK5gGoQ();
    method public long getButton2-EK5gGoQ();
    method public long getButton3-EK5gGoQ();
    method public long getButton4-EK5gGoQ();
    method public long getButton5-EK5gGoQ();
    method public long getButton6-EK5gGoQ();
    method public long getButton7-EK5gGoQ();
    method public long getButton8-EK5gGoQ();
    method public long getButton9-EK5gGoQ();
    method public long getButtonA-EK5gGoQ();
    method public long getButtonB-EK5gGoQ();
    method public long getButtonC-EK5gGoQ();
    method public long getButtonL1-EK5gGoQ();
    method public long getButtonL2-EK5gGoQ();
    method public long getButtonMode-EK5gGoQ();
    method public long getButtonR1-EK5gGoQ();
    method public long getButtonR2-EK5gGoQ();
    method public long getButtonSelect-EK5gGoQ();
    method public long getButtonStart-EK5gGoQ();
    method public long getButtonThumbLeft-EK5gGoQ();
    method public long getButtonThumbRight-EK5gGoQ();
    method public long getButtonX-EK5gGoQ();
    method public long getButtonY-EK5gGoQ();
    method public long getButtonZ-EK5gGoQ();
    method public long getC-EK5gGoQ();
    method public long getCalculator-EK5gGoQ();
    method public long getCalendar-EK5gGoQ();
    method public long getCall-EK5gGoQ();
    method public long getCamera-EK5gGoQ();
    method public long getCapsLock-EK5gGoQ();
    method public long getCaptions-EK5gGoQ();
    method public long getChannelDown-EK5gGoQ();
    method public long getChannelUp-EK5gGoQ();
    method public long getClear-EK5gGoQ();
    method public long getComma-EK5gGoQ();
    method public long getContacts-EK5gGoQ();
    method public long getCopy-EK5gGoQ();
    method public long getCtrlLeft-EK5gGoQ();
    method public long getCtrlRight-EK5gGoQ();
    method public long getCut-EK5gGoQ();
    method public long getD-EK5gGoQ();
    method public long getDelete-EK5gGoQ();
    method public long getDirectionCenter-EK5gGoQ();
    method public long getDirectionDown-EK5gGoQ();
    method public long getDirectionDownLeft-EK5gGoQ();
    method public long getDirectionDownRight-EK5gGoQ();
    method public long getDirectionLeft-EK5gGoQ();
    method public long getDirectionRight-EK5gGoQ();
    method public long getDirectionUp-EK5gGoQ();
    method public long getDirectionUpLeft-EK5gGoQ();
    method public long getDirectionUpRight-EK5gGoQ();
    method public long getDvr-EK5gGoQ();
    method public long getE-EK5gGoQ();
    method public long getEight-EK5gGoQ();
    method public long getEisu-EK5gGoQ();
    method public long getEndCall-EK5gGoQ();
    method public long getEnter-EK5gGoQ();
    method public long getEnvelope-EK5gGoQ();
    method public long getEquals-EK5gGoQ();
    method public long getEscape-EK5gGoQ();
    method public long getF-EK5gGoQ();
    method public long getF1-EK5gGoQ();
    method public long getF10-EK5gGoQ();
    method public long getF11-EK5gGoQ();
    method public long getF12-EK5gGoQ();
    method public long getF2-EK5gGoQ();
    method public long getF3-EK5gGoQ();
    method public long getF4-EK5gGoQ();
    method public long getF5-EK5gGoQ();
    method public long getF6-EK5gGoQ();
    method public long getF7-EK5gGoQ();
    method public long getF8-EK5gGoQ();
    method public long getF9-EK5gGoQ();
    method public long getFive-EK5gGoQ();
    method public long getFocus-EK5gGoQ();
    method public long getForward-EK5gGoQ();
    method public long getFour-EK5gGoQ();
    method public long getFunction-EK5gGoQ();
    method public long getG-EK5gGoQ();
    method public long getGrave-EK5gGoQ();
    method public long getGuide-EK5gGoQ();
    method public long getH-EK5gGoQ();
    method public long getHeadsetHook-EK5gGoQ();
    method public long getHelp-EK5gGoQ();
    method public long getHenkan-EK5gGoQ();
    method public long getHome-EK5gGoQ();
    method public long getI-EK5gGoQ();
    method public long getInfo-EK5gGoQ();
    method public long getInsert-EK5gGoQ();
    method public long getJ-EK5gGoQ();
    method public long getK-EK5gGoQ();
    method public long getKana-EK5gGoQ();
    method public long getKatakanaHiragana-EK5gGoQ();
    method public long getL-EK5gGoQ();
    method public long getLanguageSwitch-EK5gGoQ();
    method public long getLastChannel-EK5gGoQ();
    method public long getLeftBracket-EK5gGoQ();
    method public long getM-EK5gGoQ();
    method public long getMannerMode-EK5gGoQ();
    method public long getMediaAudioTrack-EK5gGoQ();
    method public long getMediaClose-EK5gGoQ();
    method public long getMediaEject-EK5gGoQ();
    method public long getMediaFastForward-EK5gGoQ();
    method public long getMediaNext-EK5gGoQ();
    method public long getMediaPause-EK5gGoQ();
    method public long getMediaPlay-EK5gGoQ();
    method public long getMediaPlayPause-EK5gGoQ();
    method public long getMediaPrevious-EK5gGoQ();
    method public long getMediaRecord-EK5gGoQ();
    method public long getMediaRewind-EK5gGoQ();
    method public long getMediaSkipBackward-EK5gGoQ();
    method public long getMediaSkipForward-EK5gGoQ();
    method public long getMediaStepBackward-EK5gGoQ();
    method public long getMediaStepForward-EK5gGoQ();
    method public long getMediaStop-EK5gGoQ();
    method public long getMediaTopMenu-EK5gGoQ();
    method public long getMenu-EK5gGoQ();
    method public long getMetaLeft-EK5gGoQ();
    method public long getMetaRight-EK5gGoQ();
    method public long getMicrophoneMute-EK5gGoQ();
    method public long getMinus-EK5gGoQ();
    method public long getMoveEnd-EK5gGoQ();
    method public long getMoveHome-EK5gGoQ();
    method public long getMuhenkan-EK5gGoQ();
    method public long getMultiply-EK5gGoQ();
    method public long getMusic-EK5gGoQ();
    method public long getN-EK5gGoQ();
    method public long getNavigateIn-EK5gGoQ();
    method public long getNavigateNext-EK5gGoQ();
    method public long getNavigateOut-EK5gGoQ();
    method public long getNavigatePrevious-EK5gGoQ();
    method public long getNine-EK5gGoQ();
    method public long getNotification-EK5gGoQ();
    method public long getNumLock-EK5gGoQ();
    method public long getNumPad0-EK5gGoQ();
    method public long getNumPad1-EK5gGoQ();
    method public long getNumPad2-EK5gGoQ();
    method public long getNumPad3-EK5gGoQ();
    method public long getNumPad4-EK5gGoQ();
    method public long getNumPad5-EK5gGoQ();
    method public long getNumPad6-EK5gGoQ();
    method public long getNumPad7-EK5gGoQ();
    method public long getNumPad8-EK5gGoQ();
    method public long getNumPad9-EK5gGoQ();
    method public long getNumPadAdd-EK5gGoQ();
    method public long getNumPadComma-EK5gGoQ();
    method public long getNumPadDivide-EK5gGoQ();
    method public long getNumPadDot-EK5gGoQ();
    method public long getNumPadEnter-EK5gGoQ();
    method public long getNumPadEquals-EK5gGoQ();
    method public long getNumPadLeftParenthesis-EK5gGoQ();
    method public long getNumPadMultiply-EK5gGoQ();
    method public long getNumPadRightParenthesis-EK5gGoQ();
    method public long getNumPadSubtract-EK5gGoQ();
    method public long getNumber-EK5gGoQ();
    method public long getO-EK5gGoQ();
    method public long getOne-EK5gGoQ();
    method public long getP-EK5gGoQ();
    method public long getPageDown-EK5gGoQ();
    method public long getPageUp-EK5gGoQ();
    method public long getPairing-EK5gGoQ();
    method public long getPaste-EK5gGoQ();
    method public long getPeriod-EK5gGoQ();
    method public long getPictureSymbols-EK5gGoQ();
    method public long getPlus-EK5gGoQ();
    method public long getPound-EK5gGoQ();
    method public long getPower-EK5gGoQ();
    method public long getPrintScreen-EK5gGoQ();
    method public long getProfileSwitch-EK5gGoQ();
    method public long getProgramBlue-EK5gGoQ();
    method public long getProgramGreen-EK5gGoQ();
    method public long getProgramRed-EK5gGoQ();
    method public long getProgramYellow-EK5gGoQ();
    method public long getQ-EK5gGoQ();
    method public long getR-EK5gGoQ();
    method public long getRefresh-EK5gGoQ();
    method public long getRightBracket-EK5gGoQ();
    method public long getRo-EK5gGoQ();
    method public long getS-EK5gGoQ();
    method public long getScrollLock-EK5gGoQ();
    method public long getSearch-EK5gGoQ();
    method public long getSemicolon-EK5gGoQ();
    method public long getSetTopBoxInput-EK5gGoQ();
    method public long getSetTopBoxPower-EK5gGoQ();
    method public long getSettings-EK5gGoQ();
    method public long getSeven-EK5gGoQ();
    method public long getShiftLeft-EK5gGoQ();
    method public long getShiftRight-EK5gGoQ();
    method public long getSix-EK5gGoQ();
    method public long getSlash-EK5gGoQ();
    method public long getSleep-EK5gGoQ();
    method public long getSoftLeft-EK5gGoQ();
    method public long getSoftRight-EK5gGoQ();
    method public long getSoftSleep-EK5gGoQ();
    method public long getSpacebar-EK5gGoQ();
    method public long getStem1-EK5gGoQ();
    method public long getStem2-EK5gGoQ();
    method public long getStem3-EK5gGoQ();
    method public long getStemPrimary-EK5gGoQ();
    method public long getSwitchCharset-EK5gGoQ();
    method public long getSymbol-EK5gGoQ();
    method public long getSystemNavigationDown-EK5gGoQ();
    method public long getSystemNavigationLeft-EK5gGoQ();
    method public long getSystemNavigationRight-EK5gGoQ();
    method public long getSystemNavigationUp-EK5gGoQ();
    method public long getT-EK5gGoQ();
    method public long getTab-EK5gGoQ();
    method public long getThree-EK5gGoQ();
    method public long getThumbsDown-EK5gGoQ();
    method public long getThumbsUp-EK5gGoQ();
    method public long getToggle2D3D-EK5gGoQ();
    method public long getTv-EK5gGoQ();
    method public long getTvAntennaCable-EK5gGoQ();
    method public long getTvAudioDescription-EK5gGoQ();
    method public long getTvAudioDescriptionMixingVolumeDown-EK5gGoQ();
    method public long getTvAudioDescriptionMixingVolumeUp-EK5gGoQ();
    method public long getTvContentsMenu-EK5gGoQ();
    method public long getTvDataService-EK5gGoQ();
    method public long getTvInput-EK5gGoQ();
    method public long getTvInputComponent1-EK5gGoQ();
    method public long getTvInputComponent2-EK5gGoQ();
    method public long getTvInputComposite1-EK5gGoQ();
    method public long getTvInputComposite2-EK5gGoQ();
    method public long getTvInputHdmi1-EK5gGoQ();
    method public long getTvInputHdmi2-EK5gGoQ();
    method public long getTvInputHdmi3-EK5gGoQ();
    method public long getTvInputHdmi4-EK5gGoQ();
    method public long getTvInputVga1-EK5gGoQ();
    method public long getTvMediaContextMenu-EK5gGoQ();
    method public long getTvNetwork-EK5gGoQ();
    method public long getTvNumberEntry-EK5gGoQ();
    method public long getTvPower-EK5gGoQ();
    method public long getTvRadioService-EK5gGoQ();
    method public long getTvSatellite-EK5gGoQ();
    method public long getTvSatelliteBs-EK5gGoQ();
    method public long getTvSatelliteCs-EK5gGoQ();
    method public long getTvSatelliteService-EK5gGoQ();
    method public long getTvTeletext-EK5gGoQ();
    method public long getTvTerrestrialAnalog-EK5gGoQ();
    method public long getTvTerrestrialDigital-EK5gGoQ();
    method public long getTvTimerProgramming-EK5gGoQ();
    method public long getTvZoomMode-EK5gGoQ();
    method public long getTwo-EK5gGoQ();
    method public long getU-EK5gGoQ();
    method public long getUnknown-EK5gGoQ();
    method public long getV-EK5gGoQ();
    method public long getVoiceAssist-EK5gGoQ();
    method public long getVolumeDown-EK5gGoQ();
    method public long getVolumeMute-EK5gGoQ();
    method public long getVolumeUp-EK5gGoQ();
    method public long getW-EK5gGoQ();
    method public long getWakeUp-EK5gGoQ();
    method public long getWindow-EK5gGoQ();
    method public long getX-EK5gGoQ();
    method public long getY-EK5gGoQ();
    method public long getYen-EK5gGoQ();
    method public long getZ-EK5gGoQ();
    method public long getZenkakuHankaru-EK5gGoQ();
    method public long getZero-EK5gGoQ();
    method public long getZoomIn-EK5gGoQ();
    method public long getZoomOut-EK5gGoQ();
    property public final long A;
    property public final long AllApps;
    property public final long AltLeft;
    property public final long AltRight;
    property public final long Apostrophe;
    property public final long AppSwitch;
    property public final long Assist;
    property public final long At;
    property public final long AvReceiverInput;
    property public final long AvReceiverPower;
    property public final long B;
    property public final long Back;
    property public final long Backslash;
    property public final long Backspace;
    property public final long Bookmark;
    property public final long Break;
    property public final long BrightnessDown;
    property public final long BrightnessUp;
    property public final long Browser;
    property public final long Button1;
    property public final long Button10;
    property public final long Button11;
    property public final long Button12;
    property public final long Button13;
    property public final long Button14;
    property public final long Button15;
    property public final long Button16;
    property public final long Button2;
    property public final long Button3;
    property public final long Button4;
    property public final long Button5;
    property public final long Button6;
    property public final long Button7;
    property public final long Button8;
    property public final long Button9;
    property public final long ButtonA;
    property public final long ButtonB;
    property public final long ButtonC;
    property public final long ButtonL1;
    property public final long ButtonL2;
    property public final long ButtonMode;
    property public final long ButtonR1;
    property public final long ButtonR2;
    property public final long ButtonSelect;
    property public final long ButtonStart;
    property public final long ButtonThumbLeft;
    property public final long ButtonThumbRight;
    property public final long ButtonX;
    property public final long ButtonY;
    property public final long ButtonZ;
    property public final long C;
    property public final long Calculator;
    property public final long Calendar;
    property public final long Call;
    property public final long Camera;
    property public final long CapsLock;
    property public final long Captions;
    property public final long ChannelDown;
    property public final long ChannelUp;
    property public final long Clear;
    property public final long Comma;
    property public final long Contacts;
    property public final long Copy;
    property public final long CtrlLeft;
    property public final long CtrlRight;
    property public final long Cut;
    property public final long D;
    property public final long Delete;
    property public final long DirectionCenter;
    property public final long DirectionDown;
    property public final long DirectionDownLeft;
    property public final long DirectionDownRight;
    property public final long DirectionLeft;
    property public final long DirectionRight;
    property public final long DirectionUp;
    property public final long DirectionUpLeft;
    property public final long DirectionUpRight;
    property public final long Dvr;
    property public final long E;
    property public final long Eight;
    property public final long Eisu;
    property public final long EndCall;
    property public final long Enter;
    property public final long Envelope;
    property public final long Equals;
    property public final long Escape;
    property public final long F;
    property public final long F1;
    property public final long F10;
    property public final long F11;
    property public final long F12;
    property public final long F2;
    property public final long F3;
    property public final long F4;
    property public final long F5;
    property public final long F6;
    property public final long F7;
    property public final long F8;
    property public final long F9;
    property public final long Five;
    property public final long Focus;
    property public final long Forward;
    property public final long Four;
    property public final long Function;
    property public final long G;
    property public final long Grave;
    property public final long Guide;
    property public final long H;
    property public final long HeadsetHook;
    property public final long Help;
    property public final long Henkan;
    property public final long Home;
    property public final long I;
    property public final long Info;
    property public final long Insert;
    property public final long J;
    property public final long K;
    property public final long Kana;
    property public final long KatakanaHiragana;
    property public final long L;
    property public final long LanguageSwitch;
    property public final long LastChannel;
    property public final long LeftBracket;
    property public final long M;
    property public final long MannerMode;
    property public final long MediaAudioTrack;
    property public final long MediaClose;
    property public final long MediaEject;
    property public final long MediaFastForward;
    property public final long MediaNext;
    property public final long MediaPause;
    property public final long MediaPlay;
    property public final long MediaPlayPause;
    property public final long MediaPrevious;
    property public final long MediaRecord;
    property public final long MediaRewind;
    property public final long MediaSkipBackward;
    property public final long MediaSkipForward;
    property public final long MediaStepBackward;
    property public final long MediaStepForward;
    property public final long MediaStop;
    property public final long MediaTopMenu;
    property public final long Menu;
    property public final long MetaLeft;
    property public final long MetaRight;
    property public final long MicrophoneMute;
    property public final long Minus;
    property public final long MoveEnd;
    property public final long MoveHome;
    property public final long Muhenkan;
    property public final long Multiply;
    property public final long Music;
    property public final long N;
    property public final long NavigateIn;
    property public final long NavigateNext;
    property public final long NavigateOut;
    property public final long NavigatePrevious;
    property public final long Nine;
    property public final long Notification;
    property public final long NumLock;
    property public final long NumPad0;
    property public final long NumPad1;
    property public final long NumPad2;
    property public final long NumPad3;
    property public final long NumPad4;
    property public final long NumPad5;
    property public final long NumPad6;
    property public final long NumPad7;
    property public final long NumPad8;
    property public final long NumPad9;
    property public final long NumPadAdd;
    property public final long NumPadComma;
    property public final long NumPadDivide;
    property public final long NumPadDot;
    property public final long NumPadEnter;
    property public final long NumPadEquals;
    property public final long NumPadLeftParenthesis;
    property public final long NumPadMultiply;
    property public final long NumPadRightParenthesis;
    property public final long NumPadSubtract;
    property public final long Number;
    property public final long O;
    property public final long One;
    property public final long P;
    property public final long PageDown;
    property public final long PageUp;
    property public final long Pairing;
    property public final long Paste;
    property public final long Period;
    property public final long PictureSymbols;
    property public final long Plus;
    property public final long Pound;
    property public final long Power;
    property public final long PrintScreen;
    property public final long ProfileSwitch;
    property public final long ProgramBlue;
    property public final long ProgramGreen;
    property public final long ProgramRed;
    property public final long ProgramYellow;
    property public final long Q;
    property public final long R;
    property public final long Refresh;
    property public final long RightBracket;
    property public final long Ro;
    property public final long S;
    property public final long ScrollLock;
    property public final long Search;
    property public final long Semicolon;
    property public final long SetTopBoxInput;
    property public final long SetTopBoxPower;
    property public final long Settings;
    property public final long Seven;
    property public final long ShiftLeft;
    property public final long ShiftRight;
    property public final long Six;
    property public final long Slash;
    property public final long Sleep;
    property public final long SoftLeft;
    property public final long SoftRight;
    property public final long SoftSleep;
    property public final long Spacebar;
    property public final long Stem1;
    property public final long Stem2;
    property public final long Stem3;
    property public final long StemPrimary;
    property public final long SwitchCharset;
    property public final long Symbol;
    property public final long SystemNavigationDown;
    property public final long SystemNavigationLeft;
    property public final long SystemNavigationRight;
    property public final long SystemNavigationUp;
    property public final long T;
    property public final long Tab;
    property public final long Three;
    property public final long ThumbsDown;
    property public final long ThumbsUp;
    property public final long Toggle2D3D;
    property public final long Tv;
    property public final long TvAntennaCable;
    property public final long TvAudioDescription;
    property public final long TvAudioDescriptionMixingVolumeDown;
    property public final long TvAudioDescriptionMixingVolumeUp;
    property public final long TvContentsMenu;
    property public final long TvDataService;
    property public final long TvInput;
    property public final long TvInputComponent1;
    property public final long TvInputComponent2;
    property public final long TvInputComposite1;
    property public final long TvInputComposite2;
    property public final long TvInputHdmi1;
    property public final long TvInputHdmi2;
    property public final long TvInputHdmi3;
    property public final long TvInputHdmi4;
    property public final long TvInputVga1;
    property public final long TvMediaContextMenu;
    property public final long TvNetwork;
    property public final long TvNumberEntry;
    property public final long TvPower;
    property public final long TvRadioService;
    property public final long TvSatellite;
    property public final long TvSatelliteBs;
    property public final long TvSatelliteCs;
    property public final long TvSatelliteService;
    property public final long TvTeletext;
    property public final long TvTerrestrialAnalog;
    property public final long TvTerrestrialDigital;
    property public final long TvTimerProgramming;
    property public final long TvZoomMode;
    property public final long Two;
    property public final long U;
    property public final long Unknown;
    property public final long V;
    property public final long VoiceAssist;
    property public final long VolumeDown;
    property public final long VolumeMute;
    property public final long VolumeUp;
    property public final long W;
    property public final long WakeUp;
    property public final long Window;
    property public final long X;
    property public final long Y;
    property public final long Yen;
    property public final long Z;
    property public final long ZenkakuHankaru;
    property public final long Zero;
    property public final long ZoomIn;
    property public final long ZoomOut;
  }

  public final inline class KeyEvent {
    ctor public KeyEvent();
    method public static android.view.KeyEvent! constructor-impl(android.view.KeyEvent nativeKeyEvent);
    method public static inline boolean equals-impl(android.view.KeyEvent! p, Object? p1);
    method public static boolean equals-impl0(android.view.KeyEvent p1, android.view.KeyEvent p2);
    method public android.view.KeyEvent getNativeKeyEvent();
    method public static inline int hashCode-impl(android.view.KeyEvent! p);
    method public static inline String! toString-impl(android.view.KeyEvent! p);
    property public final android.view.KeyEvent nativeKeyEvent;
  }

  public enum KeyEventType {
    enum_constant public static final androidx.compose.ui.input.key.KeyEventType KeyDown;
    enum_constant public static final androidx.compose.ui.input.key.KeyEventType KeyUp;
    enum_constant public static final androidx.compose.ui.input.key.KeyEventType Unknown;
  }

  public final class KeyEvent_androidKt {
    method public static long getKey-ZmokQxo(android.view.KeyEvent);
    method public static androidx.compose.ui.input.key.KeyEventType getType-ZmokQxo(android.view.KeyEvent);
    method public static int getUtf16CodePoint-ZmokQxo(android.view.KeyEvent);
    method public static boolean isAltPressed-ZmokQxo(android.view.KeyEvent);
    method public static boolean isCtrlPressed-ZmokQxo(android.view.KeyEvent);
    method public static boolean isMetaPressed-ZmokQxo(android.view.KeyEvent);
    method public static boolean isShiftPressed-ZmokQxo(android.view.KeyEvent);
  }

  public final class KeyInputModifierKt {
    method public static androidx.compose.ui.Modifier onKeyEvent(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.input.key.KeyEvent,java.lang.Boolean> onKeyEvent);
    method public static androidx.compose.ui.Modifier onPreviewKeyEvent(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.input.key.KeyEvent,java.lang.Boolean> onPreviewKeyEvent);
  }

  public final class Key_androidKt {
    method public static long Key(int nativeKeyCode);
    method public static int getNativeKeyCode-YVgTNJs(long);
  }

}

package androidx.compose.ui.input.nestedscroll {

  public interface NestedScrollConnection {
    method public default suspend Object? onPostFling-k5p9STU(long consumed, long available, kotlin.coroutines.Continuation<? super androidx.compose.ui.unit.Velocity> p);
    method public default long onPostScroll-61dr0bI(long consumed, long available, androidx.compose.ui.input.nestedscroll.NestedScrollSource source);
    method public default suspend Object? onPreFling-bHeVL4A(long available, kotlin.coroutines.Continuation<? super androidx.compose.ui.unit.Velocity> p);
    method public default long onPreScroll-ScU7Jk8(long available, androidx.compose.ui.input.nestedscroll.NestedScrollSource source);
  }

  public final class NestedScrollDelegatingWrapperKt {
  }

  public final class NestedScrollDispatcher {
    ctor public NestedScrollDispatcher();
    method public suspend Object? dispatchPostFling-k5p9STU(long consumed, long available, kotlin.coroutines.Continuation<? super androidx.compose.ui.unit.Velocity> p);
    method public long dispatchPostScroll-61dr0bI(long consumed, long available, androidx.compose.ui.input.nestedscroll.NestedScrollSource source);
    method public suspend Object? dispatchPreFling-bHeVL4A(long available, kotlin.coroutines.Continuation<? super androidx.compose.ui.unit.Velocity> p);
    method public long dispatchPreScroll-ScU7Jk8(long available, androidx.compose.ui.input.nestedscroll.NestedScrollSource source);
    method public kotlinx.coroutines.CoroutineScope getCoroutineScope();
    property public final kotlinx.coroutines.CoroutineScope coroutineScope;
  }

  public final class NestedScrollModifierKt {
    method public static androidx.compose.ui.Modifier nestedScroll(androidx.compose.ui.Modifier, androidx.compose.ui.input.nestedscroll.NestedScrollConnection connection, optional androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher? dispatcher);
  }

  public enum NestedScrollSource {
    enum_constant public static final androidx.compose.ui.input.nestedscroll.NestedScrollSource Drag;
    enum_constant public static final androidx.compose.ui.input.nestedscroll.NestedScrollSource Fling;
  }

}

package androidx.compose.ui.input.pointer {

  @kotlin.coroutines.RestrictsSuspension public interface AwaitPointerEventScope extends androidx.compose.ui.unit.Density {
    method public suspend Object? awaitPointerEvent(optional androidx.compose.ui.input.pointer.PointerEventPass pass, optional kotlin.coroutines.Continuation<? super androidx.compose.ui.input.pointer.PointerEvent> p);
    method public androidx.compose.ui.input.pointer.PointerEvent getCurrentEvent();
    method public long getSize-YbymL2g();
    method public androidx.compose.ui.platform.ViewConfiguration getViewConfiguration();
    property public abstract androidx.compose.ui.input.pointer.PointerEvent currentEvent;
    property public abstract long size;
    property public abstract androidx.compose.ui.platform.ViewConfiguration viewConfiguration;
  }

  public final class ConsumedData {
    ctor public ConsumedData(optional boolean positionChange, optional boolean downChange);
    method public boolean getDownChange();
    method public boolean getPositionChange();
    method public void setDownChange(boolean p);
    method public void setPositionChange(boolean p);
    property public final boolean downChange;
    property public final boolean positionChange;
  }

  public final class HitPathTrackerKt {
  }

  public final class MotionEventAdapter_androidKt {
  }

  public final class PointerEvent {
    ctor public PointerEvent(java.util.List<androidx.compose.ui.input.pointer.PointerInputChange> changes);
    method public java.util.List<androidx.compose.ui.input.pointer.PointerInputChange> component1();
    method public androidx.compose.ui.input.pointer.PointerEvent copy(java.util.List<androidx.compose.ui.input.pointer.PointerInputChange> changes, android.view.MotionEvent? motionEvent);
    method public java.util.List<androidx.compose.ui.input.pointer.PointerInputChange> getChanges();
    property public final java.util.List<androidx.compose.ui.input.pointer.PointerInputChange> changes;
  }

  public final class PointerEventKt {
    method public static boolean anyChangeConsumed(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean changedToDown(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean changedToDownIgnoreConsumed(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean changedToUp(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean changedToUpIgnoreConsumed(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static void consumeAllChanges(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static void consumeDownChange(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static void consumePositionChange(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean isOutOfBounds-MReStF0(androidx.compose.ui.input.pointer.PointerInputChange, long size);
    method public static long positionChange(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean positionChangeConsumed(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static long positionChangeIgnoreConsumed(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean positionChanged(androidx.compose.ui.input.pointer.PointerInputChange);
    method public static boolean positionChangedIgnoreConsumed(androidx.compose.ui.input.pointer.PointerInputChange);
  }

  public enum PointerEventPass {
    enum_constant public static final androidx.compose.ui.input.pointer.PointerEventPass Final;
    enum_constant public static final androidx.compose.ui.input.pointer.PointerEventPass Initial;
    enum_constant public static final androidx.compose.ui.input.pointer.PointerEventPass Main;
  }

  public final inline class PointerId {
    ctor public PointerId();
    method public static long constructor-impl(long value);
    method public static inline boolean equals-impl(long p, Object? p1);
    method public static boolean equals-impl0(long p1, long p2);
    method public long getValue();
    method public static inline int hashCode-impl(long p);
    method public static inline String! toString-impl(long p);
    property public final long value;
  }

  @androidx.compose.runtime.Immutable public final class PointerInputChange {
    method public androidx.compose.ui.input.pointer.PointerInputChange copy-aJ2ieLA(optional long id, optional long currentTime, optional long currentPosition, optional boolean currentPressed, optional long previousTime, optional long previousPosition, optional boolean previousPressed, optional androidx.compose.ui.input.pointer.ConsumedData consumed, optional androidx.compose.ui.input.pointer.PointerType type);
    method public androidx.compose.ui.input.pointer.ConsumedData getConsumed();
    method public long getId-J3iCeTQ();
    method public long getPosition-F1C5BW0();
    method public boolean getPressed();
    method public long getPreviousPosition-F1C5BW0();
    method public boolean getPreviousPressed();
    method public long getPreviousUptimeMillis();
    method public androidx.compose.ui.input.pointer.PointerType getType();
    method public long getUptimeMillis();
    property public final androidx.compose.ui.input.pointer.ConsumedData consumed;
    property public final long id;
    property public final long position;
    property public final boolean pressed;
    property public final long previousPosition;
    property public final boolean previousPressed;
    property public final long previousUptimeMillis;
    property public final androidx.compose.ui.input.pointer.PointerType type;
    property public final long uptimeMillis;
  }

  public final class PointerInputEventProcessorKt {
  }

  public abstract class PointerInputFilter {
    ctor public PointerInputFilter();
    method public final long getSize-YbymL2g();
    method public abstract void onCancel();
    method public abstract void onPointerEvent-d1fqKvQ(androidx.compose.ui.input.pointer.PointerEvent pointerEvent, androidx.compose.ui.input.pointer.PointerEventPass pass, long bounds);
    property public final long size;
  }

  public interface PointerInputModifier extends androidx.compose.ui.Modifier.Element {
    method public androidx.compose.ui.input.pointer.PointerInputFilter getPointerInputFilter();
    property public abstract androidx.compose.ui.input.pointer.PointerInputFilter pointerInputFilter;
  }

  public interface PointerInputScope extends androidx.compose.ui.unit.Density {
    method public suspend <R> Object? awaitPointerEventScope(kotlin.jvm.functions.Function2<? super androidx.compose.ui.input.pointer.AwaitPointerEventScope,? super kotlin.coroutines.Continuation<? super R>,?> block, kotlin.coroutines.Continuation<? super R> p);
    method public long getSize-YbymL2g();
    method public androidx.compose.ui.platform.ViewConfiguration getViewConfiguration();
    property public abstract long size;
    property public abstract androidx.compose.ui.platform.ViewConfiguration viewConfiguration;
  }

  public final class PointerInputTestUtilKt {
  }

  public final class PointerInteropFilter_androidKt {
    method public static androidx.compose.ui.Modifier pointerInteropFilter(androidx.compose.ui.Modifier, optional androidx.compose.ui.input.pointer.RequestDisallowInterceptTouchEvent? requestDisallowInterceptTouchEvent, kotlin.jvm.functions.Function1<? super android.view.MotionEvent,java.lang.Boolean> onTouchEvent);
  }

  public final class PointerInteropUtils_androidKt {
  }

  public enum PointerType {
    enum_constant public static final androidx.compose.ui.input.pointer.PointerType Eraser;
    enum_constant public static final androidx.compose.ui.input.pointer.PointerType Mouse;
    enum_constant public static final androidx.compose.ui.input.pointer.PointerType Stylus;
    enum_constant public static final androidx.compose.ui.input.pointer.PointerType Touch;
    enum_constant public static final androidx.compose.ui.input.pointer.PointerType Unknown;
  }

  public final class RequestDisallowInterceptTouchEvent implements kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> {
    ctor public RequestDisallowInterceptTouchEvent();
    method public void invoke(boolean disallowIntercept);
  }

  public final class SuspendingPointerInputFilterKt {
    method @Deprecated public static androidx.compose.ui.Modifier pointerInput(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function2<? super androidx.compose.ui.input.pointer.PointerInputScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> block);
    method public static androidx.compose.ui.Modifier pointerInput(androidx.compose.ui.Modifier, Object? key1, kotlin.jvm.functions.Function2<? super androidx.compose.ui.input.pointer.PointerInputScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> block);
    method public static androidx.compose.ui.Modifier pointerInput(androidx.compose.ui.Modifier, Object? key1, Object? key2, kotlin.jvm.functions.Function2<? super androidx.compose.ui.input.pointer.PointerInputScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> block);
    method public static androidx.compose.ui.Modifier pointerInput(androidx.compose.ui.Modifier, Object![]? keys, kotlin.jvm.functions.Function2<? super androidx.compose.ui.input.pointer.PointerInputScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> block);
  }

}

package androidx.compose.ui.input.pointer.util {

  public final class VelocityTracker {
    ctor public VelocityTracker();
    method public void addPosition-OX7LsLU(long timeMillis, long position);
    method public long calculateVelocity-9UxMQ8M();
    method public void resetTracking();
  }

  public final class VelocityTrackerKt {
  }

}

package androidx.compose.ui.layout {

  @androidx.compose.runtime.Immutable public abstract sealed class AlignmentLine {
    field public static final androidx.compose.ui.layout.AlignmentLine.Companion Companion;
    field public static final int Unspecified = -2147483648; // 0x80000000
  }

  public static final class AlignmentLine.Companion {
  }

  public final class AlignmentLineKt {
    method public static androidx.compose.ui.layout.HorizontalAlignmentLine getFirstBaseline();
    method public static androidx.compose.ui.layout.HorizontalAlignmentLine getLastBaseline();
  }

  @androidx.compose.runtime.Stable public interface ContentScale {
    method public long computeScaleFactor-AhF4CD4(long srcSize, long dstSize);
    field public static final androidx.compose.ui.layout.ContentScale.Companion Companion;
  }

  public static final class ContentScale.Companion {
    method public androidx.compose.ui.layout.ContentScale getCrop();
    method public androidx.compose.ui.layout.ContentScale getFillBounds();
    method public androidx.compose.ui.layout.ContentScale getFillHeight();
    method public androidx.compose.ui.layout.ContentScale getFillWidth();
    method public androidx.compose.ui.layout.ContentScale getFit();
    method public androidx.compose.ui.layout.ContentScale getInside();
    method public androidx.compose.ui.layout.FixedScale getNone();
    property public final androidx.compose.ui.layout.ContentScale Crop;
    property public final androidx.compose.ui.layout.ContentScale FillBounds;
    property public final androidx.compose.ui.layout.ContentScale FillHeight;
    property public final androidx.compose.ui.layout.ContentScale FillWidth;
    property public final androidx.compose.ui.layout.ContentScale Fit;
    property public final androidx.compose.ui.layout.ContentScale Inside;
    property public final androidx.compose.ui.layout.FixedScale None;
  }

  public final class ContentScaleKt {
  }

  @androidx.compose.runtime.Immutable public final class FixedScale implements androidx.compose.ui.layout.ContentScale {
    ctor public FixedScale(float value);
    method public float component1();
    method public long computeScaleFactor-AhF4CD4(long srcSize, long dstSize);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.layout.FixedScale copy(float value);
    method public float getValue();
    property public final float value;
  }

  public interface GraphicLayerInfo {
    method public long getLayerId();
    property public abstract long layerId;
  }

  public final class HorizontalAlignmentLine extends androidx.compose.ui.layout.AlignmentLine {
    ctor public HorizontalAlignmentLine(kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Integer,java.lang.Integer> merger);
  }

  public interface IntrinsicMeasurable {
    method public Object? getParentData();
    method public int maxIntrinsicHeight(int width);
    method public int maxIntrinsicWidth(int height);
    method public int minIntrinsicHeight(int width);
    method public int minIntrinsicWidth(int height);
    property public abstract Object? parentData;
  }

  public final class IntrinsicMeasurableKt {
  }

  public interface IntrinsicMeasureScope extends androidx.compose.ui.unit.Density {
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    property public abstract androidx.compose.ui.unit.LayoutDirection layoutDirection;
  }

  public interface LayoutCoordinates {
    method public operator int get(androidx.compose.ui.layout.AlignmentLine alignmentLine);
    method public androidx.compose.ui.layout.LayoutCoordinates? getParentCoordinates();
    method public androidx.compose.ui.layout.LayoutCoordinates? getParentLayoutCoordinates();
    method public java.util.Set<androidx.compose.ui.layout.AlignmentLine> getProvidedAlignmentLines();
    method public long getSize-YbymL2g();
    method public boolean isAttached();
    method public androidx.compose.ui.geometry.Rect localBoundingBoxOf(androidx.compose.ui.layout.LayoutCoordinates sourceCoordinates, optional boolean clipBounds);
    method public long localPositionOf-YJiYy8w(androidx.compose.ui.layout.LayoutCoordinates sourceCoordinates, long relativeToSource);
    method public long localToRoot-k-4lQ0M(long relativeToLocal);
    method public long localToWindow-k-4lQ0M(long relativeToLocal);
    method public long windowToLocal-k-4lQ0M(long relativeToWindow);
    property public abstract boolean isAttached;
    property public abstract androidx.compose.ui.layout.LayoutCoordinates? parentCoordinates;
    property public abstract androidx.compose.ui.layout.LayoutCoordinates? parentLayoutCoordinates;
    property public abstract java.util.Set<androidx.compose.ui.layout.AlignmentLine> providedAlignmentLines;
    property public abstract long size;
  }

  public final class LayoutCoordinatesKt {
    method public static androidx.compose.ui.geometry.Rect boundsInParent(androidx.compose.ui.layout.LayoutCoordinates);
    method public static androidx.compose.ui.geometry.Rect boundsInRoot(androidx.compose.ui.layout.LayoutCoordinates);
    method public static androidx.compose.ui.geometry.Rect boundsInWindow(androidx.compose.ui.layout.LayoutCoordinates);
    method public static long positionInParent(androidx.compose.ui.layout.LayoutCoordinates);
    method public static long positionInRoot(androidx.compose.ui.layout.LayoutCoordinates);
    method public static long positionInWindow(androidx.compose.ui.layout.LayoutCoordinates);
  }

  public final class LayoutIdKt {
    method public static Object? getLayoutId(androidx.compose.ui.layout.Measurable);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier layoutId(androidx.compose.ui.Modifier, Object layoutId);
  }

  public interface LayoutIdParentData {
    method public Object getLayoutId();
    property public abstract Object layoutId;
  }

  public interface LayoutInfo {
    method public androidx.compose.ui.layout.LayoutCoordinates getCoordinates();
    method public int getHeight();
    method public java.util.List<androidx.compose.ui.layout.ModifierInfo> getModifierInfo();
    method public androidx.compose.ui.layout.LayoutInfo? getParentInfo();
    method public int getWidth();
    method public boolean isAttached();
    method public boolean isPlaced();
    property public abstract androidx.compose.ui.layout.LayoutCoordinates coordinates;
    property public abstract int height;
    property public abstract boolean isAttached;
    property public abstract boolean isPlaced;
    property public abstract androidx.compose.ui.layout.LayoutInfo? parentInfo;
    property public abstract int width;
  }

  public final class LayoutKt {
    method @androidx.compose.runtime.Composable public static inline void Layout(kotlin.jvm.functions.Function0<kotlin.Unit> content, optional androidx.compose.ui.Modifier modifier, androidx.compose.ui.layout.MeasurePolicy measurePolicy);
    method @Deprecated @androidx.compose.runtime.Composable public static void MultiMeasureLayout(optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function0<kotlin.Unit> content, androidx.compose.ui.layout.MeasurePolicy measurePolicy);
    method @kotlin.PublishedApi internal static kotlin.jvm.functions.Function1<androidx.compose.runtime.SkippableUpdater<androidx.compose.ui.node.ComposeUiNode>,kotlin.Unit> materializerOf(androidx.compose.ui.Modifier modifier);
  }

  public interface LayoutModifier extends androidx.compose.ui.Modifier.Element {
    method public default int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable measurable, int width);
    method public default int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable measurable, int height);
    method public androidx.compose.ui.layout.MeasureResult measure-za8Wrwc(androidx.compose.ui.layout.MeasureScope, androidx.compose.ui.layout.Measurable measurable, long constraints);
    method public default int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable measurable, int width);
    method public default int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable measurable, int height);
  }

  public final class LayoutModifierKt {
    method public static androidx.compose.ui.Modifier layout(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function3<? super androidx.compose.ui.layout.MeasureScope,? super androidx.compose.ui.layout.Measurable,? super androidx.compose.ui.unit.Constraints,? extends androidx.compose.ui.layout.MeasureResult> measure);
  }

  public interface Measurable extends androidx.compose.ui.layout.IntrinsicMeasurable {
    method public androidx.compose.ui.layout.Placeable measure-BRTryo0(long constraints);
  }

  @androidx.compose.runtime.Stable public fun interface MeasurePolicy {
    method public default int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List<? extends androidx.compose.ui.layout.IntrinsicMeasurable> measurables, int width);
    method public default int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List<? extends androidx.compose.ui.layout.IntrinsicMeasurable> measurables, int height);
    method public androidx.compose.ui.layout.MeasureResult measure-8A2P9vY(androidx.compose.ui.layout.MeasureScope, java.util.List<? extends androidx.compose.ui.layout.Measurable> measurables, long constraints);
    method public default int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List<? extends androidx.compose.ui.layout.IntrinsicMeasurable> measurables, int width);
    method public default int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List<? extends androidx.compose.ui.layout.IntrinsicMeasurable> measurables, int height);
  }

  public interface MeasureResult {
    method public java.util.Map<androidx.compose.ui.layout.AlignmentLine,java.lang.Integer> getAlignmentLines();
    method public int getHeight();
    method public int getWidth();
    method public void placeChildren();
    property public abstract java.util.Map<androidx.compose.ui.layout.AlignmentLine,java.lang.Integer> alignmentLines;
    property public abstract int height;
    property public abstract int width;
  }

  public interface MeasureScope extends androidx.compose.ui.layout.IntrinsicMeasureScope {
    method public default androidx.compose.ui.layout.MeasureResult layout(int width, int height, optional java.util.Map<androidx.compose.ui.layout.AlignmentLine,java.lang.Integer> alignmentLines, kotlin.jvm.functions.Function1<? super androidx.compose.ui.layout.Placeable.PlacementScope,kotlin.Unit> placementBlock);
  }

  public final class MeasureScopeKt {
  }

  public interface Measured {
    method public operator int get(androidx.compose.ui.layout.AlignmentLine alignmentLine);
    method public int getMeasuredHeight();
    method public int getMeasuredWidth();
    property public abstract int measuredHeight;
    property public abstract int measuredWidth;
  }

  public final class ModifierInfo {
    ctor public ModifierInfo(androidx.compose.ui.Modifier modifier, androidx.compose.ui.layout.LayoutCoordinates coordinates, optional Object? extra);
    method public androidx.compose.ui.layout.LayoutCoordinates getCoordinates();
    method public Object? getExtra();
    method public androidx.compose.ui.Modifier getModifier();
    property public final androidx.compose.ui.layout.LayoutCoordinates coordinates;
    property public final Object? extra;
    property public final androidx.compose.ui.Modifier modifier;
  }

  public interface OnGloballyPositionedModifier extends androidx.compose.ui.Modifier.Element {
    method public void onGloballyPositioned(androidx.compose.ui.layout.LayoutCoordinates coordinates);
  }

  public final class OnGloballyPositionedModifierKt {
    method public static inline androidx.compose.ui.Modifier onGloballyPositioned(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.layout.LayoutCoordinates,kotlin.Unit> onGloballyPositioned);
  }

  public interface OnRemeasuredModifier extends androidx.compose.ui.Modifier.Element {
    method public void onRemeasured-ozmzZPI(long size);
  }

  public final class OnRemeasuredModifierKt {
    method public static inline androidx.compose.ui.Modifier onSizeChanged(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.unit.IntSize,kotlin.Unit> onSizeChanged);
  }

  public interface ParentDataModifier extends androidx.compose.ui.Modifier.Element {
    method public Object? modifyParentData(androidx.compose.ui.unit.Density, Object? parentData);
  }

  public abstract class Placeable implements androidx.compose.ui.layout.Measured {
    ctor public Placeable();
    method protected final long getApparentToRealOffset-nOcc-ac();
    method public final int getHeight();
    method public int getMeasuredHeight();
    method protected final long getMeasuredSize-YbymL2g();
    method public int getMeasuredWidth();
    method protected final long getMeasurementConstraints-msEJaDk();
    method public final int getWidth();
    method protected abstract void placeAt-rMeLuDI(long position, float zIndex, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.GraphicsLayerScope,kotlin.Unit>? layerBlock);
    method protected final void setMeasuredSize-ozmzZPI(long value);
    method protected final void setMeasurementConstraints-BRTryo0(long p);
    property protected final long apparentToRealOffset;
    property public final int height;
    property public int measuredHeight;
    property protected final long measuredSize;
    property public int measuredWidth;
    property protected final long measurementConstraints;
    property public final int width;
  }

  public abstract static class Placeable.PlacementScope {
    ctor public Placeable.PlacementScope();
    method protected abstract androidx.compose.ui.unit.LayoutDirection getParentLayoutDirection();
    method protected abstract int getParentWidth();
    method public final void place(androidx.compose.ui.layout.Placeable, int x, int y, optional float zIndex);
    method public final void place-z2mxYZE(androidx.compose.ui.layout.Placeable, long position, optional float zIndex);
    method public final void placeRelative(androidx.compose.ui.layout.Placeable, int x, int y, optional float zIndex);
    method public final void placeRelative-z2mxYZE(androidx.compose.ui.layout.Placeable, long position, optional float zIndex);
    method public final void placeRelativeWithLayer(androidx.compose.ui.layout.Placeable, int x, int y, optional float zIndex, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.GraphicsLayerScope,kotlin.Unit> layerBlock);
    method public final void placeRelativeWithLayer-muyPCdA(androidx.compose.ui.layout.Placeable, long position, optional float zIndex, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.GraphicsLayerScope,kotlin.Unit> layerBlock);
    method public final void placeWithLayer(androidx.compose.ui.layout.Placeable, int x, int y, optional float zIndex, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.GraphicsLayerScope,kotlin.Unit> layerBlock);
    method public final void placeWithLayer-muyPCdA(androidx.compose.ui.layout.Placeable, long position, optional float zIndex, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.GraphicsLayerScope,kotlin.Unit> layerBlock);
    property protected abstract androidx.compose.ui.unit.LayoutDirection parentLayoutDirection;
    property protected abstract int parentWidth;
  }

  public final class PlaceableKt {
  }

  public interface Remeasurement {
    method public void forceRemeasure();
  }

  public interface RemeasurementModifier extends androidx.compose.ui.Modifier.Element {
    method public void onRemeasurementAvailable(androidx.compose.ui.layout.Remeasurement remeasurement);
  }

  @androidx.compose.runtime.Immutable public final inline class ScaleFactor {
    ctor public ScaleFactor();
    method @androidx.compose.runtime.Stable public static inline operator float component1-impl(long $this);
    method @androidx.compose.runtime.Stable public static inline operator float component2-impl(long $this);
    method public static long copy-_hLwfpc(long $this, optional float scaleX, optional float scaleY);
    method @androidx.compose.runtime.Stable public static operator long div-_hLwfpc(long $this, float operand);
    method @androidx.compose.runtime.Immutable public static inline boolean equals-impl(long p, Object? p1);
    method public static boolean equals-impl0(long p1, long p2);
    method public static float getScaleX-impl(long $this);
    method public static float getScaleY-impl(long $this);
    method @androidx.compose.runtime.Immutable public static inline int hashCode-impl(long p);
    method @androidx.compose.runtime.Stable public static operator long times-_hLwfpc(long $this, float operand);
    method public static String toString-impl(long $this);
    field public static final androidx.compose.ui.layout.ScaleFactor.Companion Companion;
  }

  public static final class ScaleFactor.Companion {
    method public long getUnspecified-_hLwfpc();
    property public final long Unspecified;
  }

  public final class ScaleFactorKt {
    method @androidx.compose.runtime.Stable public static long ScaleFactor(float scaleX, float scaleY);
    method @androidx.compose.runtime.Stable public static operator long div-ngKnWWw(long, long scaleFactor);
    method public static inline boolean isSpecified-FK8aYYs(long);
    method public static inline boolean isUnspecified-FK8aYYs(long);
    method @androidx.compose.runtime.Stable public static long lerp-bKVCie4(long start, long stop, float fraction);
    method public static inline long takeOrElse-L-byAFk(long, kotlin.jvm.functions.Function0<androidx.compose.ui.layout.ScaleFactor> block);
    method @androidx.compose.runtime.Stable public static operator long times-Sp6zcS4(long, long size);
    method @androidx.compose.runtime.Stable public static operator long times-ngKnWWw(long, long scaleFactor);
  }

  public final class SubcomposeLayoutKt {
    method @androidx.compose.runtime.Composable public static void SubcomposeLayout(optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function2<? super androidx.compose.ui.layout.SubcomposeMeasureScope,? super androidx.compose.ui.unit.Constraints,? extends androidx.compose.ui.layout.MeasureResult> measurePolicy);
  }

  public interface SubcomposeMeasureScope extends androidx.compose.ui.layout.MeasureScope {
    method public java.util.List<androidx.compose.ui.layout.Measurable> subcompose(Object? slotId, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class TestModifierUpdaterKt {
  }

  public final class VerticalAlignmentLine extends androidx.compose.ui.layout.AlignmentLine {
    ctor public VerticalAlignmentLine(kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Integer,java.lang.Integer> merger);
  }

}

package androidx.compose.ui.node {

  @kotlin.PublishedApi internal interface ComposeUiNode {
    method public androidx.compose.ui.unit.Density getDensity();
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method public androidx.compose.ui.layout.MeasurePolicy getMeasurePolicy();
    method public androidx.compose.ui.Modifier getModifier();
    method public void setDensity(androidx.compose.ui.unit.Density p);
    method public void setLayoutDirection(androidx.compose.ui.unit.LayoutDirection p);
    method public void setMeasurePolicy(androidx.compose.ui.layout.MeasurePolicy p);
    method public void setModifier(androidx.compose.ui.Modifier p);
    property public abstract androidx.compose.ui.unit.Density density;
    property public abstract androidx.compose.ui.unit.LayoutDirection layoutDirection;
    property public abstract androidx.compose.ui.layout.MeasurePolicy measurePolicy;
    property public abstract androidx.compose.ui.Modifier modifier;
    field public static final androidx.compose.ui.node.ComposeUiNode.Companion Companion;
  }

  public static final class ComposeUiNode.Companion {
    method public kotlin.jvm.functions.Function0<androidx.compose.ui.node.ComposeUiNode> getConstructor();
    method public kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.unit.Density,kotlin.Unit> getSetDensity();
    method public kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.unit.LayoutDirection,kotlin.Unit> getSetLayoutDirection();
    method public kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.layout.MeasurePolicy,kotlin.Unit> getSetMeasurePolicy();
    method public kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.Modifier,kotlin.Unit> getSetModifier();
    property public final kotlin.jvm.functions.Function0<androidx.compose.ui.node.ComposeUiNode> Constructor;
    property public final kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.unit.Density,kotlin.Unit> SetDensity;
    property public final kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.unit.LayoutDirection,kotlin.Unit> SetLayoutDirection;
    property public final kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.layout.MeasurePolicy,kotlin.Unit> SetMeasurePolicy;
    property public final kotlin.jvm.functions.Function2<androidx.compose.ui.node.ComposeUiNode,androidx.compose.ui.Modifier,kotlin.Unit> SetModifier;
  }

  @kotlin.RequiresOptIn(message="This API is internal to library.") @kotlin.annotation.Target(allowedTargets={kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget}) public @interface InternalCoreApi {
  }

  public final class LayoutNodeKt {
  }

  public final class Ref<T> {
    ctor public Ref();
    method public T? getValue();
    method public void setValue(T? p);
    property public final T? value;
  }

  public interface RootForTest {
    method public androidx.compose.ui.unit.Density getDensity();
    method public androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner();
    method public androidx.compose.ui.text.input.TextInputService getTextInputService();
    method public boolean sendKeyEvent-ZmokQxo(android.view.KeyEvent keyEvent);
    property public abstract androidx.compose.ui.unit.Density density;
    property public abstract androidx.compose.ui.semantics.SemanticsOwner semanticsOwner;
    property public abstract androidx.compose.ui.text.input.TextInputService textInputService;
  }

  public final class ViewInterop_androidKt {
  }

}

package androidx.compose.ui.platform {

  public abstract class AbstractComposeView extends android.view.ViewGroup {
    ctor public AbstractComposeView(android.content.Context context, optional android.util.AttributeSet? attrs, optional int defStyleAttr);
    ctor public AbstractComposeView(android.content.Context context, optional android.util.AttributeSet? attrs);
    ctor public AbstractComposeView(android.content.Context context);
    method @androidx.compose.runtime.Composable public abstract void Content();
    method public final void createComposition();
    method public final void disposeComposition();
    method public final boolean getHasComposition();
    method protected boolean getShouldCreateCompositionOnAttachedToWindow();
    method public final boolean getShowLayoutBounds();
    method protected final void onLayout(boolean changed, int left, int top, int right, int bottom);
    method protected final void onMeasure(int widthMeasureSpec, int heightMeasureSpec);
    method public final void setParentCompositionContext(androidx.compose.runtime.CompositionContext? parent);
    method public final void setShowLayoutBounds(boolean value);
    method public final void setViewCompositionStrategy(androidx.compose.ui.platform.ViewCompositionStrategy strategy);
    property public final boolean hasComposition;
    property protected boolean shouldCreateCompositionOnAttachedToWindow;
    property public final boolean showLayoutBounds;
  }

  public interface AccessibilityManager {
    method public long calculateRecommendedTimeoutMillis(long originalTimeoutMillis, optional boolean containsIcons, optional boolean containsText, optional boolean containsControls);
  }

  public final class AndroidClipboardManager_androidKt {
  }

  public final class AndroidComposeViewAccessibilityDelegateCompat_androidKt {
  }

  public final class AndroidComposeView_androidKt {
  }

  public final class AndroidCompositionLocals_androidKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<android.content.res.Configuration> getLocalConfiguration();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> getLocalContext();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.lifecycle.LifecycleOwner> getLocalLifecycleOwner();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.savedstate.SavedStateRegistryOwner> getLocalSavedStateRegistryOwner();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<android.view.View> getLocalView();
  }

  public final class AndroidUiDispatcher extends kotlinx.coroutines.CoroutineDispatcher {
    method public void dispatch(kotlin.coroutines.CoroutineContext context, Runnable block);
    method public android.view.Choreographer getChoreographer();
    method public androidx.compose.runtime.MonotonicFrameClock getFrameClock();
    property public final android.view.Choreographer choreographer;
    property public final androidx.compose.runtime.MonotonicFrameClock frameClock;
    field public static final androidx.compose.ui.platform.AndroidUiDispatcher.Companion Companion;
  }

  public static final class AndroidUiDispatcher.Companion {
    method public kotlin.coroutines.CoroutineContext getCurrentThread();
    method public kotlin.coroutines.CoroutineContext getMain();
    property public final kotlin.coroutines.CoroutineContext CurrentThread;
    property public final kotlin.coroutines.CoroutineContext Main;
  }

  public final class AndroidUiDispatcher_androidKt {
  }

  public final class AndroidUiFrameClock implements androidx.compose.runtime.MonotonicFrameClock {
    ctor public AndroidUiFrameClock(android.view.Choreographer choreographer);
    method public android.view.Choreographer getChoreographer();
    method public suspend <R> Object? withFrameNanos(kotlin.jvm.functions.Function1<? super java.lang.Long,? extends R> onFrame, kotlin.coroutines.Continuation<? super R> p);
    property public final android.view.Choreographer choreographer;
  }

  public final class AndroidUriHandler implements androidx.compose.ui.platform.UriHandler {
    ctor public AndroidUriHandler(android.content.Context context);
    method public void openUri(String uri);
  }

  public final class AndroidViewConfiguration implements androidx.compose.ui.platform.ViewConfiguration {
    ctor public AndroidViewConfiguration(android.view.ViewConfiguration viewConfiguration);
    method public long getDoubleTapMinTimeMillis();
    method public long getDoubleTapTimeoutMillis();
    method public long getLongPressTimeoutMillis();
    method public float getTouchSlop();
    property public long doubleTapMinTimeMillis;
    property public long doubleTapTimeoutMillis;
    property public long longPressTimeoutMillis;
    property public float touchSlop;
  }

  public interface ClipboardManager {
    method public androidx.compose.ui.text.AnnotatedString? getText();
    method public void setText(androidx.compose.ui.text.AnnotatedString annotatedString);
  }

  public final class ComposeView extends androidx.compose.ui.platform.AbstractComposeView {
    ctor public ComposeView(android.content.Context context, optional android.util.AttributeSet? attrs, optional int defStyleAttr);
    ctor public ComposeView(android.content.Context context, optional android.util.AttributeSet? attrs);
    ctor public ComposeView(android.content.Context context);
    method @androidx.compose.runtime.Composable public void Content();
    method public void setContent(kotlin.jvm.functions.Function0<kotlin.Unit> content);
    property protected boolean shouldCreateCompositionOnAttachedToWindow;
  }

  public final class CompositionLocalsKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.platform.AccessibilityManager> getLocalAccessibilityManager();
    method @androidx.compose.ui.ExperimentalComposeUiApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.autofill.Autofill> getLocalAutofill();
    method @androidx.compose.ui.ExperimentalComposeUiApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.autofill.AutofillTree> getLocalAutofillTree();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.platform.ClipboardManager> getLocalClipboardManager();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.unit.Density> getLocalDensity();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.focus.FocusManager> getLocalFocusManager();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.hapticfeedback.HapticFeedback> getLocalHapticFeedback();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.unit.LayoutDirection> getLocalLayoutDirection();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.input.TextInputService> getLocalTextInputService();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.platform.TextToolbar> getLocalTextToolbar();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.platform.UriHandler> getLocalUriHandler();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.platform.ViewConfiguration> getLocalViewConfiguration();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.platform.WindowInfo> getLocalWindowInfo();
  }

  public final class DebugUtilsKt {
  }

  public final class DisposableSaveableStateRegistry_androidKt {
  }

  public interface InspectableValue {
    method public default kotlin.sequences.Sequence<androidx.compose.ui.platform.ValueElement> getInspectableElements();
    method public default String? getNameFallback();
    method public default Object? getValueOverride();
    property public default kotlin.sequences.Sequence<androidx.compose.ui.platform.ValueElement> inspectableElements;
    property public default String? nameFallback;
    property public default Object? valueOverride;
  }

  public final class InspectableValueKt {
    method public static inline kotlin.jvm.functions.Function1<androidx.compose.ui.platform.InspectorInfo,kotlin.Unit> debugInspectorInfo(kotlin.jvm.functions.Function1<? super androidx.compose.ui.platform.InspectorInfo,kotlin.Unit> definitions);
    method public static kotlin.jvm.functions.Function1<androidx.compose.ui.platform.InspectorInfo,kotlin.Unit> getNoInspectorInfo();
    method public static boolean isDebugInspectorInfoEnabled();
    method public static void setDebugInspectorInfoEnabled(boolean p);
  }

  public final class InspectionModeKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> getLocalInspectionMode();
  }

  public final class InspectorInfo {
    ctor public InspectorInfo();
    method public String? getName();
    method public androidx.compose.ui.platform.ValueElementSequence getProperties();
    method public Object? getValue();
    method public void setName(String? p);
    method public void setValue(Object? p);
    property public final String? name;
    property public final androidx.compose.ui.platform.ValueElementSequence properties;
    property public final Object? value;
  }

  public abstract class InspectorValueInfo implements androidx.compose.ui.platform.InspectableValue {
    ctor public InspectorValueInfo(kotlin.jvm.functions.Function1<? super androidx.compose.ui.platform.InspectorInfo,kotlin.Unit> info);
    property public kotlin.sequences.Sequence<androidx.compose.ui.platform.ValueElement> inspectableElements;
    property public String? nameFallback;
    property public Object? valueOverride;
  }

  public final class JvmActuals_jvmKt {
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public final class LocalSoftwareKeyboardController {
    method @androidx.compose.runtime.Composable public androidx.compose.ui.platform.SoftwareKeyboardController? getCurrent();
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.platform.SoftwareKeyboardController? current;
    field public static final androidx.compose.ui.platform.LocalSoftwareKeyboardController INSTANCE;
  }

  @androidx.compose.ui.ExperimentalComposeUiApi public interface SoftwareKeyboardController {
    method public void hideSoftwareKeyboard();
    method public void showSoftwareKeyboard();
  }

  public final class TestTagKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier testTag(androidx.compose.ui.Modifier, String tag);
  }

  public interface TextToolbar {
    method public androidx.compose.ui.platform.TextToolbarStatus getStatus();
    method public void hide();
    method public void showMenu(androidx.compose.ui.geometry.Rect rect, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onCopyRequested, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onPasteRequested, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onCutRequested, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onSelectAllRequested);
    property public abstract androidx.compose.ui.platform.TextToolbarStatus status;
  }

  public final class TextToolbarKt {
  }

  public enum TextToolbarStatus {
    enum_constant public static final androidx.compose.ui.platform.TextToolbarStatus Hidden;
    enum_constant public static final androidx.compose.ui.platform.TextToolbarStatus Shown;
  }

  public interface UriHandler {
    method public void openUri(String uri);
  }

  public final class ValueElement {
    ctor public ValueElement(String name, Object? value);
    method public String component1();
    method public Object? component2();
    method public androidx.compose.ui.platform.ValueElement copy(String name, Object? value);
    method public String getName();
    method public Object? getValue();
    property public final String name;
    property public final Object? value;
  }

  public final class ValueElementSequence implements kotlin.sequences.Sequence<androidx.compose.ui.platform.ValueElement> {
    ctor public ValueElementSequence();
    method public java.util.Iterator<androidx.compose.ui.platform.ValueElement> iterator();
    method public operator void set(String name, Object? value);
  }

  public interface ViewCompositionStrategy {
    method public kotlin.jvm.functions.Function0<kotlin.Unit> installFor(androidx.compose.ui.platform.AbstractComposeView view);
    field public static final androidx.compose.ui.platform.ViewCompositionStrategy.Companion Companion;
  }

  public static final class ViewCompositionStrategy.Companion {
  }

  public static final class ViewCompositionStrategy.DisposeOnDetachedFromWindow implements androidx.compose.ui.platform.ViewCompositionStrategy {
    method public kotlin.jvm.functions.Function0<kotlin.Unit> installFor(androidx.compose.ui.platform.AbstractComposeView view);
    field public static final androidx.compose.ui.platform.ViewCompositionStrategy.DisposeOnDetachedFromWindow INSTANCE;
  }

  public static final class ViewCompositionStrategy.DisposeOnLifecycleDestroyed implements androidx.compose.ui.platform.ViewCompositionStrategy {
    ctor public ViewCompositionStrategy.DisposeOnLifecycleDestroyed(androidx.lifecycle.Lifecycle lifecycle);
    ctor public ViewCompositionStrategy.DisposeOnLifecycleDestroyed(androidx.lifecycle.LifecycleOwner lifecycleOwner);
    method public kotlin.jvm.functions.Function0<kotlin.Unit> installFor(androidx.compose.ui.platform.AbstractComposeView view);
  }

  public static final class ViewCompositionStrategy.DisposeOnViewTreeLifecycleDestroyed implements androidx.compose.ui.platform.ViewCompositionStrategy {
    method public kotlin.jvm.functions.Function0<kotlin.Unit> installFor(androidx.compose.ui.platform.AbstractComposeView view);
    field public static final androidx.compose.ui.platform.ViewCompositionStrategy.DisposeOnViewTreeLifecycleDestroyed INSTANCE;
  }

  public final class ViewCompositionStrategy_androidKt {
  }

  public interface ViewConfiguration {
    method public long getDoubleTapMinTimeMillis();
    method public long getDoubleTapTimeoutMillis();
    method public long getLongPressTimeoutMillis();
    method public float getTouchSlop();
    property public abstract long doubleTapMinTimeMillis;
    property public abstract long doubleTapTimeoutMillis;
    property public abstract long longPressTimeoutMillis;
    property public abstract float touchSlop;
  }

  @VisibleForTesting public interface ViewRootForTest extends androidx.compose.ui.node.RootForTest {
    method public boolean getHasPendingMeasureOrLayout();
    method public android.view.View getView();
    method public void invalidateDescendants();
    method public boolean isLifecycleInResumedState();
    property public abstract boolean hasPendingMeasureOrLayout;
    property public abstract boolean isLifecycleInResumedState;
    property public abstract android.view.View view;
    field public static final androidx.compose.ui.platform.ViewRootForTest.Companion Companion;
  }

  public static final class ViewRootForTest.Companion {
    method public kotlin.jvm.functions.Function1<androidx.compose.ui.platform.ViewRootForTest,kotlin.Unit>? getOnViewCreatedCallback();
    method public void setOnViewCreatedCallback(kotlin.jvm.functions.Function1<? super androidx.compose.ui.platform.ViewRootForTest,kotlin.Unit>? p);
    property public final kotlin.jvm.functions.Function1<androidx.compose.ui.platform.ViewRootForTest,kotlin.Unit>? onViewCreatedCallback;
  }

  @androidx.compose.runtime.Stable public interface WindowInfo {
    method public boolean isWindowFocused();
    property public abstract boolean isWindowFocused;
  }

  public final class WindowInfoKt {
  }

  @androidx.compose.ui.InternalComposeUiApi public fun interface WindowRecomposerFactory {
    method public androidx.compose.runtime.Recomposer createRecomposer(android.view.View windowRootView);
    field public static final androidx.compose.ui.platform.WindowRecomposerFactory.Companion Companion;
  }

  public static final class WindowRecomposerFactory.Companion {
    method public androidx.compose.ui.platform.WindowRecomposerFactory getLifecycleAware();
    property public final androidx.compose.ui.platform.WindowRecomposerFactory LifecycleAware;
  }

  @androidx.compose.ui.InternalComposeUiApi public final class WindowRecomposerPolicy {
    method @kotlin.PublishedApi internal boolean compareAndSetFactory(androidx.compose.ui.platform.WindowRecomposerFactory expected, androidx.compose.ui.platform.WindowRecomposerFactory factory);
    method @kotlin.PublishedApi internal androidx.compose.ui.platform.WindowRecomposerFactory getAndSetFactory(androidx.compose.ui.platform.WindowRecomposerFactory factory);
    method public void setFactory(androidx.compose.ui.platform.WindowRecomposerFactory factory);
    method public inline <R> R! withFactory(androidx.compose.ui.platform.WindowRecomposerFactory factory, kotlin.jvm.functions.Function0<? extends R> block);
    field public static final androidx.compose.ui.platform.WindowRecomposerPolicy INSTANCE;
  }

  public final class WindowRecomposer_androidKt {
    method public static androidx.compose.runtime.CompositionContext? findViewTreeCompositionContext(android.view.View);
    method public static androidx.compose.runtime.CompositionContext? getCompositionContext(android.view.View);
    method public static void setCompositionContext(android.view.View, androidx.compose.runtime.CompositionContext? value);
  }

  public final class Wrapper_androidKt {
  }

}

package androidx.compose.ui.platform.actionmodecallback {

  public final class TextActionModeCallback_androidKt {
  }

}

package androidx.compose.ui.res {

  public final class AnimatedVectorResources_androidKt {
    method @androidx.compose.runtime.Composable @androidx.compose.ui.ExperimentalComposeUiApi public static androidx.compose.ui.graphics.vector.AnimatedImageVector animatedVectorResource(@DrawableRes int id);
  }

  public final class AnimatorResources_androidKt {
  }

  public final class ColorResources_androidKt {
    method @androidx.compose.runtime.Composable public static long colorResource(@ColorRes int id);
  }

  public final class FontResources_androidKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.text.font.Typeface fontResource(androidx.compose.ui.text.font.FontFamily fontFamily);
  }

  public final class ImageResources_androidKt {
    method public static androidx.compose.ui.graphics.ImageBitmap imageResource(androidx.compose.ui.graphics.ImageBitmap.Companion, android.content.res.Resources res, @DrawableRes int id);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.ImageBitmap imageResource(androidx.compose.ui.graphics.ImageBitmap.Companion, @DrawableRes int id);
  }

  public final class PainterResources_androidKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.painter.Painter painterResource(@DrawableRes int id);
  }

  public final class PrimitiveResources_androidKt {
    method @androidx.compose.runtime.Composable public static boolean booleanResource(@BoolRes int id);
    method @androidx.compose.runtime.Composable public static float dimensionResource(@DimenRes int id);
    method @androidx.compose.runtime.Composable public static int[] integerArrayResource(@ArrayRes int id);
    method @androidx.compose.runtime.Composable public static int integerResource(@IntegerRes int id);
  }

  public final class StringResources_androidKt {
    method @androidx.compose.runtime.Composable public static String![] stringArrayResource(@ArrayRes int id);
    method @androidx.compose.runtime.Composable public static String stringResource(@StringRes int id);
    method @androidx.compose.runtime.Composable public static String stringResource(@StringRes int id, java.lang.Object... formatArgs);
  }

  public final class VectorResources_androidKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.vector.ImageVector vectorResource(androidx.compose.ui.graphics.vector.ImageVector.Companion, @DrawableRes int id);
    method @kotlin.jvm.Throws(exceptionClasses=XmlPullParserException::class) public static androidx.compose.ui.graphics.vector.ImageVector vectorResource(androidx.compose.ui.graphics.vector.ImageVector.Companion, optional android.content.res.Resources.Theme? theme, android.content.res.Resources res, int resId) throws org.xmlpull.v1.XmlPullParserException;
  }

}

package androidx.compose.ui.semantics {

  public final class AccessibilityAction<T extends kotlin.Function<? extends java.lang.Boolean>> {
    ctor public AccessibilityAction(String? label, T? action);
    method public T? getAction();
    method public String? getLabel();
    property public final T? action;
    property public final String? label;
  }

  public final class CustomAccessibilityAction {
    ctor public CustomAccessibilityAction(String label, kotlin.jvm.functions.Function0<java.lang.Boolean> action);
    method public kotlin.jvm.functions.Function0<java.lang.Boolean> getAction();
    method public String getLabel();
    property public final kotlin.jvm.functions.Function0<java.lang.Boolean> action;
    property public final String label;
  }

  public final class ProgressBarRangeInfo {
    ctor public ProgressBarRangeInfo(float current, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> range, optional int steps);
    method public float getCurrent();
    method public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> getRange();
    method public int getSteps();
    property public final float current;
    property public final kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> range;
    property public final int steps;
    field public static final androidx.compose.ui.semantics.ProgressBarRangeInfo.Companion Companion;
  }

  public static final class ProgressBarRangeInfo.Companion {
    method public androidx.compose.ui.semantics.ProgressBarRangeInfo getIndeterminate();
    property public final androidx.compose.ui.semantics.ProgressBarRangeInfo Indeterminate;
  }

  public enum Role {
    enum_constant public static final androidx.compose.ui.semantics.Role Button;
    enum_constant public static final androidx.compose.ui.semantics.Role Checkbox;
    enum_constant public static final androidx.compose.ui.semantics.Role Image;
    enum_constant public static final androidx.compose.ui.semantics.Role RadioButton;
    enum_constant public static final androidx.compose.ui.semantics.Role Switch;
    enum_constant public static final androidx.compose.ui.semantics.Role Tab;
  }

  public final class ScrollAxisRange {
    ctor public ScrollAxisRange(kotlin.jvm.functions.Function0<java.lang.Float> value, kotlin.jvm.functions.Function0<java.lang.Float> maxValue, optional boolean reverseScrolling);
    method public kotlin.jvm.functions.Function0<java.lang.Float> getMaxValue();
    method public boolean getReverseScrolling();
    method public kotlin.jvm.functions.Function0<java.lang.Float> getValue();
    property public final kotlin.jvm.functions.Function0<java.lang.Float> maxValue;
    property public final boolean reverseScrolling;
    property public final kotlin.jvm.functions.Function0<java.lang.Float> value;
  }

  public final class SemanticsActions {
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getCollapse();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getCopyText();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.util.List<androidx.compose.ui.semantics.CustomAccessibilityAction>> getCustomActions();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getCutText();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getDismiss();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getExpand();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function1<java.util.List<androidx.compose.ui.text.TextLayoutResult>,java.lang.Boolean>>> getGetTextLayoutResult();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getOnClick();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getOnLongClick();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> getPasteText();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function2<java.lang.Float,java.lang.Float,java.lang.Boolean>>> getScrollBy();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Boolean>>> getSetProgress();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function3<java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean>>> getSetSelection();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function1<androidx.compose.ui.text.AnnotatedString,java.lang.Boolean>>> getSetText();
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> Collapse;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> CopyText;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.util.List<androidx.compose.ui.semantics.CustomAccessibilityAction>> CustomActions;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> CutText;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> Dismiss;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> Expand;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function1<java.util.List<androidx.compose.ui.text.TextLayoutResult>,java.lang.Boolean>>> GetTextLayoutResult;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> OnClick;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> OnLongClick;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function0<java.lang.Boolean>>> PasteText;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function2<java.lang.Float,java.lang.Float,java.lang.Boolean>>> ScrollBy;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Boolean>>> SetProgress;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function3<java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean>>> SetSelection;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.AccessibilityAction<kotlin.jvm.functions.Function1<androidx.compose.ui.text.AnnotatedString,java.lang.Boolean>>> SetText;
    field public static final androidx.compose.ui.semantics.SemanticsActions INSTANCE;
  }

  public final class SemanticsConfiguration implements java.lang.Iterable<java.util.Map.Entry<? extends androidx.compose.ui.semantics.SemanticsPropertyKey<?>,?>> kotlin.jvm.internal.markers.KMappedMarker androidx.compose.ui.semantics.SemanticsPropertyReceiver {
    ctor public SemanticsConfiguration();
    method public operator <T> boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey<T> key);
    method public androidx.compose.ui.semantics.SemanticsConfiguration copy();
    method public operator <T> T! get(androidx.compose.ui.semantics.SemanticsPropertyKey<T> key);
    method public <T> T! getOrElse(androidx.compose.ui.semantics.SemanticsPropertyKey<T> key, kotlin.jvm.functions.Function0<? extends T> defaultValue);
    method public <T> T? getOrElseNullable(androidx.compose.ui.semantics.SemanticsPropertyKey<T> key, kotlin.jvm.functions.Function0<? extends T> defaultValue);
    method public boolean isClearingSemantics();
    method public boolean isMergingSemanticsOfDescendants();
    method public java.util.Iterator<java.util.Map.Entry<androidx.compose.ui.semantics.SemanticsPropertyKey<?>,java.lang.Object>> iterator();
    method public <T> void set(androidx.compose.ui.semantics.SemanticsPropertyKey<T> key, T? value);
    method public void setClearingSemantics(boolean p);
    method public void setMergingSemanticsOfDescendants(boolean p);
    property public final boolean isClearingSemantics;
    property public final boolean isMergingSemanticsOfDescendants;
  }

  public final class SemanticsConfigurationKt {
    method public static <T> T? getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration, androidx.compose.ui.semantics.SemanticsPropertyKey<T> key);
  }

  public interface SemanticsModifier extends androidx.compose.ui.Modifier.Element {
    method public int getId();
    method public androidx.compose.ui.semantics.SemanticsConfiguration getSemanticsConfiguration();
    property public abstract int id;
    property public abstract androidx.compose.ui.semantics.SemanticsConfiguration semanticsConfiguration;
  }

  public final class SemanticsModifierKt {
    method public static androidx.compose.ui.Modifier clearAndSetSemantics(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.semantics.SemanticsPropertyReceiver,kotlin.Unit> properties);
    method public static androidx.compose.ui.Modifier semantics(androidx.compose.ui.Modifier, optional boolean mergeDescendants, kotlin.jvm.functions.Function1<? super androidx.compose.ui.semantics.SemanticsPropertyReceiver,kotlin.Unit> properties);
  }

  public final class SemanticsNode {
    method public int getAlignmentLinePosition(androidx.compose.ui.layout.AlignmentLine alignmentLine);
    method public androidx.compose.ui.geometry.Rect getBoundsInRoot();
    method public androidx.compose.ui.geometry.Rect getBoundsInWindow();
    method public java.util.List<androidx.compose.ui.semantics.SemanticsNode> getChildren();
    method public androidx.compose.ui.semantics.SemanticsConfiguration getConfig();
    method public int getId();
    method public androidx.compose.ui.layout.LayoutInfo getLayoutInfo();
    method public boolean getMergingEnabled();
    method public androidx.compose.ui.semantics.SemanticsNode? getParent();
    method public long getPositionInRoot-F1C5BW0();
    method public long getPositionInWindow-F1C5BW0();
    method public androidx.compose.ui.node.RootForTest? getRoot();
    method public long getSize-YbymL2g();
    method public boolean isRoot();
    property public final androidx.compose.ui.geometry.Rect boundsInRoot;
    property public final androidx.compose.ui.geometry.Rect boundsInWindow;
    property public final java.util.List<androidx.compose.ui.semantics.SemanticsNode> children;
    property public final androidx.compose.ui.semantics.SemanticsConfiguration config;
    property public final int id;
    property public final boolean isRoot;
    property public final androidx.compose.ui.layout.LayoutInfo layoutInfo;
    property public final boolean mergingEnabled;
    property public final androidx.compose.ui.semantics.SemanticsNode? parent;
    property public final long positionInRoot;
    property public final long positionInWindow;
    property public final androidx.compose.ui.node.RootForTest? root;
    property public final long size;
  }

  public final class SemanticsNodeKt {
  }

  public final class SemanticsOwner {
    method public androidx.compose.ui.semantics.SemanticsNode getRootSemanticsNode();
    method public androidx.compose.ui.semantics.SemanticsNode getUnmergedRootSemanticsNode();
    property public final androidx.compose.ui.semantics.SemanticsNode rootSemanticsNode;
    property public final androidx.compose.ui.semantics.SemanticsNode unmergedRootSemanticsNode;
  }

  public final class SemanticsOwnerKt {
    method public static java.util.List<androidx.compose.ui.semantics.SemanticsNode> getAllSemanticsNodes(androidx.compose.ui.semantics.SemanticsOwner, boolean mergingEnabled);
  }

  public final class SemanticsProperties {
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> getContentDescription();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getDisabled();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.AnnotatedString> getEditableText();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.Boolean> getFocused();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getHeading();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.ScrollAxisRange> getHorizontalScrollAxisRange();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.input.ImeAction> getImeAction();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getInvisibleToUser();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getIsDialog();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getIsPopup();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> getPaneTitle();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getPassword();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.ProgressBarRangeInfo> getProgressBarRangeInfo();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.Role> getRole();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getSelectableGroup();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.Boolean> getSelected();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> getStateDescription();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> getTestTag();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.AnnotatedString> getText();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.TextRange> getTextSelectionRange();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.state.ToggleableState> getToggleableState();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.ScrollAxisRange> getVerticalScrollAxisRange();
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> ContentDescription;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> Disabled;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.AnnotatedString> EditableText;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.Boolean> Focused;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> Heading;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.ScrollAxisRange> HorizontalScrollAxisRange;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.input.ImeAction> ImeAction;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> InvisibleToUser;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> IsDialog;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> IsPopup;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> PaneTitle;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> Password;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.ProgressBarRangeInfo> ProgressBarRangeInfo;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.Role> Role;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> SelectableGroup;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.Boolean> Selected;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> StateDescription;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<java.lang.String> TestTag;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.AnnotatedString> Text;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.TextRange> TextSelectionRange;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.state.ToggleableState> ToggleableState;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.semantics.ScrollAxisRange> VerticalScrollAxisRange;
    field public static final androidx.compose.ui.semantics.SemanticsProperties INSTANCE;
  }

  public final class SemanticsPropertiesKt {
    method public static void collapse(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void copyText(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void cutText(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void dialog(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void disabled(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void dismiss(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void expand(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static String getContentDescription(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static java.util.List<androidx.compose.ui.semantics.CustomAccessibilityAction> getCustomActions(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.text.AnnotatedString getEditableText(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static boolean getFocused(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.semantics.ScrollAxisRange getHorizontalScrollAxisRange(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.text.input.ImeAction getImeAction(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static String getPaneTitle(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.semantics.ProgressBarRangeInfo getProgressBarRangeInfo(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.semantics.Role getRole(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static boolean getSelected(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static String getStateDescription(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static String getTestTag(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.text.AnnotatedString getText(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void getTextLayoutResult(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function1<? super java.util.List<androidx.compose.ui.text.TextLayoutResult>,java.lang.Boolean>? action);
    method public static long getTextSelectionRange(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.state.ToggleableState getToggleableState(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static androidx.compose.ui.semantics.ScrollAxisRange getVerticalScrollAxisRange(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void heading(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method @androidx.compose.ui.ExperimentalComposeUiApi public static void invisibleToUser(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void onClick(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void onLongClick(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void password(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void pasteText(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function0<java.lang.Boolean>? action);
    method public static void popup(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void scrollBy(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function2<? super java.lang.Float,? super java.lang.Float,java.lang.Boolean>? action);
    method public static void selectableGroup(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void setContentDescription(androidx.compose.ui.semantics.SemanticsPropertyReceiver, String p);
    method public static void setCustomActions(androidx.compose.ui.semantics.SemanticsPropertyReceiver, java.util.List<androidx.compose.ui.semantics.CustomAccessibilityAction> p);
    method public static void setEditableText(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.text.AnnotatedString p);
    method public static void setFocused(androidx.compose.ui.semantics.SemanticsPropertyReceiver, boolean p);
    method public static void setHorizontalScrollAxisRange(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.semantics.ScrollAxisRange p);
    method public static void setImeAction(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.text.input.ImeAction p);
    method public static void setPaneTitle(androidx.compose.ui.semantics.SemanticsPropertyReceiver, String p);
    method public static void setProgress(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Boolean>? action);
    method public static void setProgressBarRangeInfo(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.semantics.ProgressBarRangeInfo p);
    method public static void setRole(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.semantics.Role p);
    method public static void setSelected(androidx.compose.ui.semantics.SemanticsPropertyReceiver, boolean p);
    method public static void setSelection(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function3<? super java.lang.Integer,? super java.lang.Integer,? super java.lang.Boolean,java.lang.Boolean>? action);
    method public static void setStateDescription(androidx.compose.ui.semantics.SemanticsPropertyReceiver, String p);
    method public static void setTestTag(androidx.compose.ui.semantics.SemanticsPropertyReceiver, String p);
    method public static void setText(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.text.AnnotatedString p);
    method public static void setText(androidx.compose.ui.semantics.SemanticsPropertyReceiver, optional String? label, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString,java.lang.Boolean>? action);
    method public static void setTextSelectionRange-Hy0MoUY(androidx.compose.ui.semantics.SemanticsPropertyReceiver, long p);
    method public static void setToggleableState(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.state.ToggleableState p);
    method public static void setVerticalScrollAxisRange(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.semantics.ScrollAxisRange p);
  }

  public final class SemanticsPropertyKey<T> {
    ctor public SemanticsPropertyKey(String name, optional kotlin.jvm.functions.Function2<? super T,? super T,? extends T> mergePolicy);
    method public String getName();
    method public operator T! getValue(androidx.compose.ui.semantics.SemanticsPropertyReceiver thisRef, kotlin.reflect.KProperty<?> property);
    method public T? merge(T? parentValue, T? childValue);
    method public operator void setValue(androidx.compose.ui.semantics.SemanticsPropertyReceiver thisRef, kotlin.reflect.KProperty<?> property, T? value);
    property public final String name;
  }

  public interface SemanticsPropertyReceiver {
    method public operator <T> void set(androidx.compose.ui.semantics.SemanticsPropertyKey<T> key, T? value);
  }

}

package androidx.compose.ui.state {

  public enum ToggleableState {
    enum_constant public static final androidx.compose.ui.state.ToggleableState Indeterminate;
    enum_constant public static final androidx.compose.ui.state.ToggleableState Off;
    enum_constant public static final androidx.compose.ui.state.ToggleableState On;
  }

  public final class ToggleableStateKt {
    method public static androidx.compose.ui.state.ToggleableState ToggleableState(boolean value);
  }

}

package androidx.compose.ui.text.input {

  public final class InputState_androidKt {
  }

  public final class RecordingInputConnection_androidKt {
  }

}

package androidx.compose.ui.viewinterop {

  public final class AndroidViewHolder_androidKt {
  }

  public final class AndroidView_androidKt {
    method @androidx.compose.runtime.Composable public static <T extends android.view.View> void AndroidView(kotlin.jvm.functions.Function1<? super android.content.Context,? extends T> factory, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super T,kotlin.Unit> update);
    method public static kotlin.jvm.functions.Function1<android.view.View,kotlin.Unit> getNoOpUpdate();
  }

}

package androidx.compose.ui.window {

  public final class AndroidDialog_androidKt {
    method @androidx.compose.runtime.Composable public static void Dialog(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class AndroidPopup_androidKt {
    method @androidx.compose.runtime.Composable public static void Popup(androidx.compose.ui.window.PopupPositionProvider popupPositionProvider, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onDismissRequest, optional androidx.compose.ui.window.PopupProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Popup-wO4EaeM(optional androidx.compose.ui.Alignment alignment, optional long offset, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onDismissRequest, optional androidx.compose.ui.window.PopupProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @org.jetbrains.annotations.TestOnly public static boolean isPopupLayout(android.view.View view, optional String? testTag);
  }

  @androidx.compose.runtime.Immutable public final class DialogProperties {
    ctor public DialogProperties(optional boolean dismissOnBackPress, optional boolean dismissOnClickOutside, optional androidx.compose.ui.window.SecureFlagPolicy securePolicy);
    method public boolean getDismissOnBackPress();
    method public boolean getDismissOnClickOutside();
    method public androidx.compose.ui.window.SecureFlagPolicy getSecurePolicy();
    property public final boolean dismissOnBackPress;
    property public final boolean dismissOnClickOutside;
    property public final androidx.compose.ui.window.SecureFlagPolicy securePolicy;
  }

  public interface DialogWindowProvider {
    method public android.view.Window getWindow();
    property public abstract android.view.Window window;
  }

  @androidx.compose.runtime.Immutable public interface PopupPositionProvider {
    method public long calculatePosition-aa5Bd6I(androidx.compose.ui.unit.IntRect anchorBounds, long windowSize, androidx.compose.ui.unit.LayoutDirection layoutDirection, long popupContentSize);
  }

  @androidx.compose.runtime.Immutable public final class PopupProperties {
    ctor public PopupProperties(optional boolean focusable, optional boolean dismissOnBackPress, optional boolean dismissOnClickOutside, optional androidx.compose.ui.window.SecureFlagPolicy securePolicy);
    method public boolean getDismissOnBackPress();
    method public boolean getDismissOnClickOutside();
    method public boolean getFocusable();
    method public androidx.compose.ui.window.SecureFlagPolicy getSecurePolicy();
    property public final boolean dismissOnBackPress;
    property public final boolean dismissOnClickOutside;
    property public final boolean focusable;
    property public final androidx.compose.ui.window.SecureFlagPolicy securePolicy;
  }

  public enum SecureFlagPolicy {
    enum_constant public static final androidx.compose.ui.window.SecureFlagPolicy Inherit;
    enum_constant public static final androidx.compose.ui.window.SecureFlagPolicy SecureOff;
    enum_constant public static final androidx.compose.ui.window.SecureFlagPolicy SecureOn;
  }

  public final class SecureFlagPolicy_androidKt {
  }

}

