<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.2.0-beta01" type="baseline" client="cli" dependencies="false" name="AGP (8.2.0-beta01)" variant="all" version="8.2.0-beta01">

    <issue
        id="PrimitiveInCollection"
        message="field Colors with type List&lt;Color>: replace with LongList"
        errorLine1="internal val Colors = listOf("
        errorLine2="^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/Colors.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type List&lt;Color> of getColors: replace with LongList"
        errorLine1="internal val Colors = listOf("
        errorLine2="             ~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/Colors.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method random has parameter $this$random with type List&lt;Color>: replace with LongList"
        errorLine1="private fun List&lt;Color>.random(exclude: Color?): Color {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/Colors.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method inOrder has parameter $this$inOrder with type List&lt;Color>: replace with LongList"
        errorLine1="private fun List&lt;Color>.inOrder(current: Color?, forward: Boolean): Color {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/Colors.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field rowStates with type Map&lt;Integer, LazyListState>: replace with IntObjectMap"
        errorLine1="        private val rowStates = mutableMapOf&lt;Int, LazyListState>()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/recyclerview/RecyclerViewInteropDemoFragment.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable checkedItems with type Set&lt;? extends Integer>: replace with IntSet"
        errorLine1="        var checkedItems by remember { mutableStateOf(emptySet&lt;Int>()) }"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/viewinterop/ScrollingAndroidViewsDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method RecyclingAndroidViewLazyColumn has parameter checkedItems with type Set&lt;Integer>: replace with IntSet"
        errorLine1="    checkedItems: Set&lt;Int>,"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/viewinterop/ScrollingAndroidViewsDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;trippedModifier&apos; with type Function2&lt;? super Boolean, ? super Color, ? extends Modifier>."
        errorLine1="    fun trippedModifier(isActive: Boolean, color: Color) ="
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/ButtonMetaStateDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onDoubleTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onDoubleTap: (Offset) -> Unit = {"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/DoubleTapGestureDetectorDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/DoubleTapInTapDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onDoubleTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onDoubleTap: (Offset) -> Unit = { _ ->"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/DoubleTapInTapDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onPress: (Offset) -> Unit = {"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/HorizontalScrollersInVerticalScrollerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/HorizontalScrollersInVerticalScrollerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onDoubleTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onDoubleTap: (Offset) -> Unit = {"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/HorizontalScrollersInVerticalScrollerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onLongPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onLongPress = { _: Offset ->"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/HorizontalScrollersInVerticalScrollerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onLongPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onLongPress = { _: Offset ->"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/LongPressGestureDetectorDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onLongPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onLongPress: (Offset) -> Unit = {"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedLongPressDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onLongPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onLongPress = { _: Offset ->"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedPressDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedPressDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onDoubleTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onDoubleTap = { _: Offset ->"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedPressDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onPress: (Offset) -> Unit = {"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedScrollingDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedScrollingDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onDoubleTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onDoubleTap: (Offset) -> Unit = {"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedScrollingDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onLongPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onLongPress = { _: Offset ->"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/NestedScrollingDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method pointerCounterGestureFilter has parameter &apos;onPointerCountChanged&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="    onPointerCountChanged: (Int) -> Unit"
        errorLine2="                           ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/PointerInputDuringSubCompDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method setOnPointerCountChanged has parameter &apos;&lt;set-?>&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="    lateinit var onPointerCountChanged: (resultingPointerCount: Int) -> Unit"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/PointerInputDuringSubCompDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function1&lt;Integer, Unit> of &apos;getOnPointerCountChanged&apos;."
        errorLine1="    lateinit var onPointerCountChanged: (resultingPointerCount: Int) -> Unit"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/PointerInputDuringSubCompDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/viewinterop/PointerInputInteropAndroidInCompose.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onStart&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onStart: (Offset) -> Unit = {"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/PressIndicatorGestureDetectorDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method RecyclingAndroidViewLazyColumn has parameter &apos;onChangeCheck&apos; with type Function2&lt;? super Integer, ? super Boolean, Unit>."
        errorLine1="    onChangeCheck: (Int, Boolean) -> Unit"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/viewinterop/ScrollingAndroidViewsDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/TapGestureDetectorDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onPress: (Offset) -> Unit = {"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/VerticalScrollerInDrawerLayoutDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onTap: (Offset) -> Unit = {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/VerticalScrollerInDrawerLayoutDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onDoubleTap&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onDoubleTap: (Offset) -> Unit = {"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/VerticalScrollerInDrawerLayoutDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;onLongPress&apos; with type Function1&lt;? super Offset, ? extends Unit>."
        errorLine1="    val onLongPress = { _: Offset ->"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/compose/ui/demos/gestures/VerticalScrollerInDrawerLayoutDemo.kt"/>
    </issue>

</issues>
