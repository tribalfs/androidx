<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-alpha15" client="gradle" variant="debug" version="4.2.0-alpha15">

    <issue
        id="DiscouragedPrivateApi"
        message="Reflective access to updateDisplayListIfDirty, which is not part of the public SDK and therefore likely to change in future Android releases"
        errorLine1="                        View::class.java.getDeclaredMethod(&quot;updateDisplayListIfDirty&quot;)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/ViewLayer.kt"
            line="261"
            column="25"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 26 (current min is 21): `android.view.accessibility.AccessibilityNodeInfo#EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX`"
        errorLine1="                EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX, -1"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeViewAccessibilityDelegateCompat.kt"
            line="928"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 26 (current min is 21): `android.view.accessibility.AccessibilityNodeInfo#EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH`"
        errorLine1="                EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH, -1"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeViewAccessibilityDelegateCompat.kt"
            line="931"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 27 (current min is 21): `android.view.HapticFeedbackConstants#TEXT_HANDLE_MOVE`"
        errorLine1="                view.performHapticFeedback(HapticFeedbackConstants.TEXT_HANDLE_MOVE)"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/hapticfeedback/AndroidHapticFeedback.kt"
            line="35"
            column="44"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_NAVIGATE_PREVIOUS`"
        errorLine1="        actual val NavigatePrevious = Key(KeyEvent.KEYCODE_NAVIGATE_PREVIOUS)"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="34"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_NAVIGATE_NEXT`"
        errorLine1="        actual val NavigateNext = Key(KeyEvent.KEYCODE_NAVIGATE_NEXT)"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="35"
            column="39"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_NAVIGATE_IN`"
        errorLine1="        actual val NavigateIn = Key(KeyEvent.KEYCODE_NAVIGATE_IN)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="36"
            column="37"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_NAVIGATE_OUT`"
        errorLine1="        actual val NavigateOut = Key(KeyEvent.KEYCODE_NAVIGATE_OUT)"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="37"
            column="38"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 25 (current min is 21): `android.view.KeyEvent#KEYCODE_SYSTEM_NAVIGATION_UP`"
        errorLine1="        actual val SystemNavigationUp = Key(KeyEvent.KEYCODE_SYSTEM_NAVIGATION_UP)"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="38"
            column="45"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 25 (current min is 21): `android.view.KeyEvent#KEYCODE_SYSTEM_NAVIGATION_DOWN`"
        errorLine1="        actual val SystemNavigationDown = Key(KeyEvent.KEYCODE_SYSTEM_NAVIGATION_DOWN)"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="39"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 25 (current min is 21): `android.view.KeyEvent#KEYCODE_SYSTEM_NAVIGATION_LEFT`"
        errorLine1="        actual val SystemNavigationLeft = Key(KeyEvent.KEYCODE_SYSTEM_NAVIGATION_LEFT)"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="40"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 25 (current min is 21): `android.view.KeyEvent#KEYCODE_SYSTEM_NAVIGATION_RIGHT`"
        errorLine1="        actual val SystemNavigationRight = Key(KeyEvent.KEYCODE_SYSTEM_NAVIGATION_RIGHT)"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="41"
            column="48"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_DPAD_UP_LEFT`"
        errorLine1="        actual val DPadUpLeft = Key(KeyEvent.KEYCODE_DPAD_UP_LEFT)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="49"
            column="37"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_DPAD_DOWN_LEFT`"
        errorLine1="        actual val DPadDownLeft = Key(KeyEvent.KEYCODE_DPAD_DOWN_LEFT)"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="50"
            column="39"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_DPAD_UP_RIGHT`"
        errorLine1="        actual val DPadUpRight = Key(KeyEvent.KEYCODE_DPAD_UP_RIGHT)"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="51"
            column="38"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_DPAD_DOWN_RIGHT`"
        errorLine1="        actual val DPadDownRight = Key(KeyEvent.KEYCODE_DPAD_DOWN_RIGHT)"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="52"
            column="40"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_CUT`"
        errorLine1="        actual val Cut = Key(KeyEvent.KEYCODE_CUT)"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="128"
            column="30"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_COPY`"
        errorLine1="        actual val Copy = Key(KeyEvent.KEYCODE_COPY)"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="129"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_PASTE`"
        errorLine1="        actual val Paste = Key(KeyEvent.KEYCODE_PASTE)"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="130"
            column="32"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_MEDIA_SKIP_FORWARD`"
        errorLine1="        actual val MediaSkipForward = Key(KeyEvent.KEYCODE_MEDIA_SKIP_FORWARD)"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="227"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_MEDIA_SKIP_BACKWARD`"
        errorLine1="        actual val MediaSkipBackward = Key(KeyEvent.KEYCODE_MEDIA_SKIP_BACKWARD)"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="228"
            column="44"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_MEDIA_STEP_FORWARD`"
        errorLine1="        actual val MediaStepForward = Key(KeyEvent.KEYCODE_MEDIA_STEP_FORWARD)"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="229"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 23 (current min is 21): `android.view.KeyEvent#KEYCODE_MEDIA_STEP_BACKWARD`"
        errorLine1="        actual val MediaStepBackward = Key(KeyEvent.KEYCODE_MEDIA_STEP_BACKWARD)"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="230"
            column="44"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_SOFT_SLEEP`"
        errorLine1="        actual val SoftSleep = Key(KeyEvent.KEYCODE_SOFT_SLEEP)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="276"
            column="36"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_STEM_PRIMARY`"
        errorLine1="        actual val StemPrimary = Key(KeyEvent.KEYCODE_STEM_PRIMARY)"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="310"
            column="38"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_STEM_1`"
        errorLine1="        actual val Stem1 = Key(KeyEvent.KEYCODE_STEM_1)"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="311"
            column="32"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_STEM_2`"
        errorLine1="        actual val Stem2 = Key(KeyEvent.KEYCODE_STEM_2)"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="312"
            column="32"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 24 (current min is 21): `android.view.KeyEvent#KEYCODE_STEM_3`"
        errorLine1="        actual val Stem3 = Key(KeyEvent.KEYCODE_STEM_3)"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="313"
            column="32"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 21): `android.view.KeyEvent#KEYCODE_ALL_APPS`"
        errorLine1="        actual val AllApps = Key(KeyEvent.KEYCODE_ALL_APPS)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="314"
            column="34"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 21): `android.view.KeyEvent#KEYCODE_REFRESH`"
        errorLine1="        actual val Refresh = Key(KeyEvent.KEYCODE_REFRESH)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="315"
            column="34"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 29 (current min is 21): `android.view.KeyEvent#KEYCODE_THUMBS_UP`"
        errorLine1="        actual val ThumbsUp = Key(KeyEvent.KEYCODE_THUMBS_UP)"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="316"
            column="35"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 29 (current min is 21): `android.view.KeyEvent#KEYCODE_THUMBS_DOWN`"
        errorLine1="        actual val ThumbsDown = Key(KeyEvent.KEYCODE_THUMBS_DOWN)"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="317"
            column="37"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 29 (current min is 21): `android.view.KeyEvent#KEYCODE_PROFILE_SWITCH`"
        errorLine1="        actual val ProfileSwitch = Key(KeyEvent.KEYCODE_PROFILE_SWITCH)"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/key/Key.kt"
            line="318"
            column="40"/>
    </issue>

    <issue
        id="BanTargetApiAnnotation"
        message="Uses @TargetApi annotation"
        errorLine1="@TargetApi(Build.VERSION_CODES.M)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/actionmodecallback/FloatingTextActionModeCallback.kt"
            line="27"
            column="1"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="            getBooleanMethod?.invoke(null, &quot;debug.layout&quot;, false) as? Boolean ?: false"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeView.kt"
            line="729"
            column="13"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="            updateDisplayListIfDirtyMethod?.invoke(view)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/ViewLayer.kt"
            line="287"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="    var index = root.addChildCount(autofillTree.children.count())"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="70"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        root.newChild(index)?.apply {"
        errorLine2="             ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="73"
            column="14"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillId(root.autofillId!!, id)"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="74"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillId(root.autofillId!!, id)"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="74"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            setId(id, view.context.packageName, null, null)"
        errorLine2="            ~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="75"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillType(View.AUTOFILL_TYPE_TEXT)"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="76"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillHints(autofillNode.autofillTypes.map { it.androidType }.toTypedArray())"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                setDimens(left, top, 0, 0, width(), height())"
        errorLine2="                ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="89"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isText -> autofillTree.performAutofill(itemId, value.textValue.toString())"
        errorLine2="                  ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="105"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isText -> autofillTree.performAutofill(itemId, value.textValue.toString())"
        errorLine2="                                                                       ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="105"
            column="72"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isDate -> TODO(&quot;b/138604541: Add onFill() callback for date&quot;)"
        errorLine2="                  ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="106"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isList -> TODO(&quot;b/138604541: Add onFill() callback for list&quot;)"
        errorLine2="                  ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="107"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isToggle -> TODO(&quot;b/138604541:  Add onFill() callback for toggle&quot;)"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="108"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillDebugUtilsKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="    autofillManager.registerCallback(AutofillCallback)"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofillDebugUtils.kt"
            line="63"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillDebugUtilsKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="    autofillManager.unregisterCallback(AutofillCallback)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofillDebugUtils.kt"
            line="71"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.AndroidComposeView is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            focusable = View.FOCUSABLE"
        errorLine2="            ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeView.kt"
            line="304"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.AndroidComposeView is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            defaultFocusHighlightEnabled = false"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeView.kt"
            line="306"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            info.unwrap().availableExtraData = listOf(EXTRA_DATA_TEXT_CHARACTER_LOCATION_KEY)"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeViewAccessibilityDelegateCompat.kt"
            line="351"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.platform.AndroidTextToolbar is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            actionMode = view.startActionMode("
        errorLine2="                              ~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidTextToolbar.kt"
            line="53"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.res.ColorResourcesKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        Color(context.resources.getColor(id, context.theme))"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/res/ColorResources.kt"
            line="35"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.platform.actionmodecallback.FloatingTextActionModeCallback is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1=") : ActionMode.Callback2() {"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/actionmodecallback/FloatingTextActionModeCallback.kt"
            line="30"
            column="5"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.RenderNodeLayer is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            ownerView.parent?.onDescendantInvalidated(ownerView, ownerView)"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/RenderNodeLayer.kt"
            line="164"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.compose.ui.platform.WrapperKt is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="        owner.view.attributeSourceResourceMap.isNotEmpty()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/Wrapper.kt"
            line="291"
            column="20"/>
    </issue>

    <issue
        id="Recycle"
        message="This `TypedArray` should be recycled after use with `#recycle()`"
        errorLine1="    ) ?: res.obtainAttributes(attrs, AndroidVectorResources.STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH)"
        errorLine2="             ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/graphics/vector/compat/XmlVectorParser.kt"
            line="349"
            column="14"/>
    </issue>

    <issue
        id="ViewConstructor"
        message="Custom view `DialogLayout` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        errorLine1="private class DialogLayout("
        errorLine2="              ~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/window/AndroidDialog.kt"
            line="116"
            column="15"/>
    </issue>

    <issue
        id="ViewConstructor"
        message="Custom view `ViewLayer` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        errorLine1="internal class ViewLayer("
        errorLine2="               ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/ViewLayer.kt"
            line="40"
            column="16"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/LongPressGestureFilter.kt"
            line="58"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1=") = this.then(object : OnGloballyPositionedModifier {"
        errorLine2="              ^">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/layout/OnGloballyPositionedModifier.kt"
            line="31"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1=") = composed {"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/layout/OnRemeasuredModifier.kt"
            line="40"
            column="5"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/pointer/PointerInteropFilter.kt"
            line="62"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/PressIndicatorGestureFilter.kt"
            line="57"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/RawDragGestureFilter.kt"
            line="153"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/RawPressStartGestureFilter.kt"
            line="57"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/RawScaleGestureFilter.kt"
            line="122"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/ScaleGestureFilter.kt"
            line="106"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/ScaleSlopExceededGestureFilter.kt"
            line="51"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/ScrollGestureFilter.kt"
            line="120"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/semantics/SemanticsModifier.kt"
            line="85"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1=") = composed {"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/input/pointer/SuspendingPointerInputFilter.kt"
            line="129"
            column="5"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/TapGestureFilter.kt"
            line="68"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifier missing inspectorInfo"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/TapGestureFilter.kt"
            line="81"
            column="15"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="Custom view `PopupLayout` overrides `onTouchEvent` but not `performClick`"
        errorLine1="    override fun onTouchEvent(event: MotionEvent?): Boolean {"
        errorLine2="                 ~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/window/AndroidPopup.kt"
            line="330"
            column="18"/>
    </issue>

    <issue
        id="IgnoreWithoutReason"
        message="Test is ignored without giving any explanation"
        errorLine1="    @Ignore"
        errorLine2="    ~~~~~~~">
        <location
            file="src/androidAndroidTest/kotlin/androidx/compose/ui/input/pointer/AndroidPointerInputTest.kt"
            line="240"
            column="5"/>
    </issue>

    <issue
        id="IgnoreWithoutReason"
        message="Test is ignored without giving any explanation"
        errorLine1="    @Ignore"
        errorLine2="    ~~~~~~~">
        <location
            file="src/androidAndroidTest/kotlin/androidx/compose/ui/window/DialogUiTest.kt"
            line="176"
            column="5"/>
    </issue>

</issues>
