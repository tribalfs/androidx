<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-alpha06" client="gradle" variant="debug" version="4.2.0-alpha06">

    <issue
        id="BanTargetApiAnnotation"
        message="Uses @TargetApi annotation"
        errorLine1="@TargetApi(Build.VERSION_CODES.M)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/actionmodecallback/FloatingTextActionModeCallback.kt"
            line="27"
            column="1"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="            getBooleanMethod?.invoke(null, &quot;debug.layout&quot;, false) as? Boolean ?: false"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeView.kt"
            line="729"
            column="13"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="            updateDisplayListIfDirtyMethod?.invoke(view)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/ViewLayer.kt"
            line="287"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="    var index = root.addChildCount(autofillTree.children.count())"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="70"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        root.newChild(index)?.apply {"
        errorLine2="             ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="73"
            column="14"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillId(root.autofillId!!, id)"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="74"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillId(root.autofillId!!, id)"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="74"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            setId(id, view.context.packageName, null, null)"
        errorLine2="            ~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="75"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillType(View.AUTOFILL_TYPE_TEXT)"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="76"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            setAutofillHints(autofillNode.autofillTypes.map { it.androidType }.toTypedArray())"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                setDimens(left, top, 0, 0, width(), height())"
        errorLine2="                ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="89"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isText -> autofillTree.performAutofill(itemId, value.textValue.toString())"
        errorLine2="                  ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="105"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isText -> autofillTree.performAutofill(itemId, value.textValue.toString())"
        errorLine2="                                                                       ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="105"
            column="72"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isDate -> TODO(&quot;b/138604541: Add onFill() callback for date&quot;)"
        errorLine2="                  ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="106"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isList -> TODO(&quot;b/138604541: Add onFill() callback for list&quot;)"
        errorLine2="                  ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="107"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            value.isToggle -> TODO(&quot;b/138604541:  Add onFill() callback for toggle&quot;)"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofill.kt"
            line="108"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillDebugUtilsKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="    autofillManager.registerCallback(AutofillCallback)"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofillDebugUtils.kt"
            line="63"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.autofill.AndroidAutofillDebugUtilsKt is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="    autofillManager.unregisterCallback(AutofillCallback)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/autofill/AndroidAutofillDebugUtils.kt"
            line="71"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.AndroidComposeView is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            focusable = View.FOCUSABLE"
        errorLine2="            ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeView.kt"
            line="304"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.AndroidComposeView is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            defaultFocusHighlightEnabled = false"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeView.kt"
            line="306"
            column="13"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            info.unwrap().availableExtraData = listOf(EXTRA_DATA_TEXT_CHARACTER_LOCATION_KEY)"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidComposeViewAccessibilityDelegateCompat.kt"
            line="351"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.platform.AndroidTextToolbar is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            actionMode = view.startActionMode("
        errorLine2="                              ~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/AndroidTextToolbar.kt"
            line="53"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.res.ColorResourcesKt is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        Color(context.resources.getColor(id, context.theme))"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/res/ColorResources.kt"
            line="35"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.compose.ui.platform.actionmodecallback.FloatingTextActionModeCallback is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1=") : ActionMode.Callback2() {"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/actionmodecallback/FloatingTextActionModeCallback.kt"
            line="30"
            column="5"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.compose.ui.platform.RenderNodeLayer is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            ownerView.parent?.onDescendantInvalidated(ownerView, ownerView)"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/RenderNodeLayer.kt"
            line="164"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.compose.ui.platform.WrapperKt is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="        owner.view.attributeSourceResourceMap.isNotEmpty()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/Wrapper.kt"
            line="291"
            column="20"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/DragSlopExceededGestureFilter.kt"
            line="65"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1=") = this.then(DrawBackgroundModifier(onDraw))"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/DrawModifier.kt"
            line="58"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1=") = composed {"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/DrawModifier.kt"
            line="86"
            column="5"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = this.then(object : DrawModifier {"
        errorLine2="                        ^">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/DrawModifier.kt"
            line="182"
            column="25"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1=") = if (elevation > 0.dp || clip) {"
        errorLine2="    ^">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/draw/DrawShadow.kt"
            line="50"
            column="5"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="    return this.then(FocusObserverModifierImpl(onFocusChange))"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/FocusObserverModifier.kt"
            line="43"
            column="22"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="    return this.then(FocusRequesterModifierImpl(focusRequester))"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/FocusRequesterModifier.kt"
            line="46"
            column="22"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="fun Modifier.keyInputFilter(onKeyEvent: (KeyEvent) -> Boolean): Modifier = composed {"
        errorLine2="                                                                           ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/input/key/KeyInputModifier.kt"
            line="32"
            column="76"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="fun Modifier.previewKeyInputFilter(onPreviewKeyEvent: (KeyEvent) -> Boolean): Modifier = composed {"
        errorLine2="                                                                                         ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/input/key/KeyInputModifier.kt"
            line="47"
            column="90"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/LongPressDragGestureFilter.kt"
            line="121"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/LongPressGestureFilter.kt"
            line="58"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1=") = this.then(object : OnGloballyPositionedModifier {"
        errorLine2="              ^">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/layout/OnGloballyPositionedModifier.kt"
            line="31"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1=") = composed {"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/layout/OnRemeasuredModifier.kt"
            line="40"
            column="5"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/input/pointer/PointerInteropFilter.kt"
            line="62"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/PressIndicatorGestureFilter.kt"
            line="57"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/RawDragGestureFilter.kt"
            line="153"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/RawPressStartGestureFilter.kt"
            line="57"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/RawScaleGestureFilter.kt"
            line="122"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/ScaleGestureFilter.kt"
            line="106"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/ScaleSlopExceededGestureFilter.kt"
            line="51"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/ScrollGestureFilter.kt"
            line="120"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/semantics/SemanticsModifier.kt"
            line="85"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1=") = composed {"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/input/pointer/SuspendingPointerInputFilter.kt"
            line="129"
            column="5"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/TapGestureFilter.kt"
            line="68"
            column="15"/>
    </issue>

    <issue
        id="ModifierInspectorInfo"
        message="Modifiers should include inspectorInfo for the Layout Inspector"
        errorLine1="): Modifier = composed {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/gesture/TapGestureFilter.kt"
            line="81"
            column="15"/>
    </issue>

</issues>
