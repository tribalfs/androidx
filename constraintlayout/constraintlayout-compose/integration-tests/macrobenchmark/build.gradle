/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.test")
    id("kotlin-android")
}

android {
    defaultConfig {
        minSdkVersion 26
    }
    namespace "androidx.constraintlayout.compose.integration.macrobenchmark"

    // We need animations to work for MotionLayout
    testOptions.animationsDisabled  false

    targetProjectPath = ":constraintlayout:constraintlayout-compose:integration-tests:macrobenchmark-target"
    // Enable the benchmark to run separately from the app process
    experimentalProperties["android.experimental.self-instrumenting"] = true

    buildTypes {
        // declare a build type to match the target app's build type
        benchmark {
            debuggable = true
            signingConfig = debug.signingConfig
            // Selects release buildType if the benchmark buildType not available in other modules.
            matchingFallbacks = ['release']
        }
    }
}

androidComponents {
    beforeVariants(selector().all()) {
        // enable only the benchmark buildType, since we only want to measure close to release performance
        enabled = buildType == 'benchmark'
    }
}

dependencies {
    implementation(project(":benchmark:benchmark-junit4"))
    implementation(project(":benchmark:benchmark-macro-junit4"))
    implementation(project(":internal-testutils-macrobenchmark"))
    implementation(project(":internal-testutils-runtime"))
    implementation(libs.testRules)
    implementation(libs.testExtJunit)
    implementation(libs.testCore)
    implementation(libs.testRunner)
    implementation(libs.testUiautomator)
}