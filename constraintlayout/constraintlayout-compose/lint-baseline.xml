<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.2.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.2.0-beta01)" variant="all" version="8.2.0-beta01">

    <issue
        id="BanInlineOptIn"
        message="Inline functions cannot opt into experimental APIs."
        errorLine1="inline fun ConstraintLayout("
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/ConstraintLayout.kt"/>
    </issue>

    <issue
        id="BanInlineOptIn"
        message="Inline functions cannot opt into experimental APIs."
        errorLine1="inline fun &lt;T> MotionCarouselScope.itemsWithProperties("
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="ComposableLambdaParameterNaming"
        message="Composable lambda parameter should be named `content`"
        errorLine1="fun ItemHolder(i: Int, slotPrefix: String, showSlot: Boolean, function: @Composable () -> Unit) {"
        errorLine2="                                                              ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    fun BoxScope.drawDebugBounds(forcedScaleFactor: Float) {"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/ConstraintLayout.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    fun createDesignElements() {"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/ConstraintLayout.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method setAnchors$lint_module has parameter &lt;set-?> with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="    internal var anchors by mutableStateOf(emptyMap&lt;Float, T>())"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;Float, T> of getAnchors$lint_module: replace with FloatObjectMap"
        errorLine1="    internal var anchors by mutableStateOf(emptyMap&lt;Float, T>())"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method ensureInit$lint_module has parameter newAnchors with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="    internal fun ensureInit(newAnchors: Map&lt;Float, T>) {"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method processNewAnchors$lint_module has parameter oldAnchors with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="        oldAnchors: Map&lt;Float, T>,"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method processNewAnchors$lint_module has parameter newAnchors with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="        newAnchors: Map&lt;Float, T>"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable bounds with type List&lt;? extends Float>: replace with FloatList"
        errorLine1="            val bounds = findBounds(offset.floatValue, anchors.keys)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method carouselSwipeable has parameter anchors with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="    anchors: Map&lt;Float, T>,"
        errorLine2="             ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable oldAnchors with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="        val oldAnchors = state.anchors"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method findBounds has parameter anchors with type Set&lt;Float>: replace with FloatSet"
        errorLine1="    anchors: Set&lt;Float>"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type List&lt;Float> of findBounds: replace with FloatList"
        errorLine1="): List&lt;Float> {"
        errorLine2="   ~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method computeTarget has parameter anchors with type Set&lt;Float>: replace with FloatSet"
        errorLine1="    anchors: Set&lt;Float>,"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable bounds with type List&lt;? extends Float>: replace with FloatList"
        errorLine1="    val bounds = findBounds(offset, anchors)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method getOffset has parameter $this$getOffset with type Map&lt;Float, ? extends T>: replace with FloatObjectMap"
        errorLine1="private fun &lt;T> Map&lt;Float, T>.getOffset(state: T): Float? {"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method resistanceConfig has parameter anchors with type Set&lt;Float>: replace with FloatSet"
        errorLine1="        anchors: Set&lt;Float>,"
        errorLine2="                 ~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field overridedVariables with type HashMap&lt;String, Float>: replace with ObjectFloatMap"
        errorLine1="    private val overridedVariables = HashMap&lt;String, Float>()"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/JSONConstraintSet.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable anchors with type Map&lt;Float, ? extends String>: replace with FloatObjectMap"
        errorLine1="    val anchors = if (currentIndex == 0) {"
        errorLine2="    ^">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method setThresholds$lint_module has parameter &apos;&lt;set-?>&apos; with type Function2&lt;? super Float, ? super Float, Float>."
        errorLine1="    internal var thresholds: (Float, Float) -> Float by mutableStateOf({ _, _ -> 0f })"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;Float, Float, Float> of &apos;getThresholds$lint_module&apos;."
        errorLine1="    internal var thresholds: (Float, Float) -> Float by mutableStateOf({ _, _ -> 0f })"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method computeTarget has parameter &apos;thresholds&apos; with type Function2&lt;? super Float, ? super Float, Float>."
        errorLine1="    thresholds: (Float, Float) -> Float,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/carousel/CarouselSwipeable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemContent&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="        itemContent: @Composable (index: Int) -> Unit"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsWithProperties has parameter &apos;itemContent&apos; with type Function2&lt;? super Integer, ? super State&lt;MotionProperties>, Unit>."
        errorLine1="        itemContent: @Composable ("
        errorLine2="                     ^">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method setItemsProvider has parameter &apos;&lt;set-?>&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="    var itemsProvider: @Composable ((index: Int) -> Unit)? = null"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function1&lt;Integer, Unit> of &apos;getItemsProvider&apos;."
        errorLine1="    var itemsProvider: @Composable ((index: Int) -> Unit)? = null"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method setItemsProviderWithProperties has parameter &apos;&lt;set-?>&apos; with type Function2&lt;? super Integer, ? super State&lt;MotionProperties>, Unit>."
        errorLine1="    var itemsProviderWithProperties: @Composable ((index: Int,"
        errorLine2="    ^">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;Integer, State&lt;MotionProperties>, Unit> of &apos;getItemsProviderWithProperties&apos;."
        errorLine1="    var itemsProviderWithProperties: @Composable ((index: Int,"
        errorLine2="                                     ^">
        <location
            file="src/androidMain/kotlin/androidx/constraintlayout/compose/MotionCarousel.kt"/>
    </issue>

</issues>
