// Signature format: 4.0
package androidx.credentials {

  public class CreateCredentialRequest {
    ctor public CreateCredentialRequest(String type, android.os.Bundle data, boolean requireSystemProvider);
    method public final android.os.Bundle getData();
    method public final boolean getRequireSystemProvider();
    method public final String getType();
    property public final android.os.Bundle data;
    property public final boolean requireSystemProvider;
    property public final String type;
  }

  public class CreateCredentialResponse {
    ctor public CreateCredentialResponse(String type, android.os.Bundle data);
    method public final android.os.Bundle getData();
    method public final String getType();
    property public final android.os.Bundle data;
    property public final String type;
  }

  public final class CreatePasswordRequest extends androidx.credentials.CreateCredentialRequest {
    ctor public CreatePasswordRequest(String id, String password);
    method public String getId();
    method public String getPassword();
    property public final String id;
    property public final String password;
  }

  public final class CreatePasswordResponse extends androidx.credentials.CreateCredentialResponse {
    ctor public CreatePasswordResponse();
  }

  public class Credential {
    ctor public Credential(String type, android.os.Bundle data);
    method public final android.os.Bundle getData();
    method public final String getType();
    property public final android.os.Bundle data;
    property public final String type;
  }

  public final class CredentialManager {
    method public static androidx.credentials.CredentialManager create(android.content.Context context);
    method public suspend Object? executeCreateCredential(androidx.credentials.CreateCredentialRequest request, optional android.app.Activity? activity, optional kotlin.coroutines.Continuation<? super androidx.credentials.CreateCredentialResponse>);
    method public void executeCreateCredentialAsync(androidx.credentials.CreateCredentialRequest request, android.app.Activity? activity, android.os.CancellationSignal? cancellationSignal, java.util.concurrent.Executor executor, androidx.credentials.CredentialManagerCallback<androidx.credentials.CreateCredentialResponse> callback);
    method public suspend Object? executeGetCredential(androidx.credentials.GetCredentialRequest request, optional android.app.Activity? activity, optional kotlin.coroutines.Continuation<? super androidx.credentials.GetCredentialResponse>);
    method public void executeGetCredentialAsync(androidx.credentials.GetCredentialRequest request, android.app.Activity? activity, android.os.CancellationSignal? cancellationSignal, java.util.concurrent.Executor executor, androidx.credentials.CredentialManagerCallback<androidx.credentials.GetCredentialResponse> callback);
    field public static final androidx.credentials.CredentialManager.Companion Companion;
  }

  public static final class CredentialManager.Companion {
    method public androidx.credentials.CredentialManager create(android.content.Context context);
  }

  public interface CredentialManagerCallback<R> {
    method public default void onError(androidx.credentials.CredentialManagerException e);
    method public void onResult(R? result);
  }

  public final class CredentialManagerException extends java.lang.Exception {
    ctor public CredentialManagerException(int errorCode, optional CharSequence? errorMessage);
    method public int getErrorCode();
    method public CharSequence? getErrorMessage();
    property public final int errorCode;
    property public final CharSequence? errorMessage;
  }

  public class GetCredentialOption {
    ctor public GetCredentialOption(String type, android.os.Bundle data, boolean requireSystemProvider);
    method public final android.os.Bundle getData();
    method public final boolean getRequireSystemProvider();
    method public final String getType();
    property public final android.os.Bundle data;
    property public final boolean requireSystemProvider;
    property public final String type;
  }

  public final class GetCredentialRequest {
    ctor public GetCredentialRequest(java.util.List<? extends androidx.credentials.GetCredentialOption> getCredentialOptions);
    method public java.util.List<androidx.credentials.GetCredentialOption> getGetCredentialOptions();
    property public final java.util.List<androidx.credentials.GetCredentialOption> getCredentialOptions;
  }

  public static final class GetCredentialRequest.Builder {
    ctor public GetCredentialRequest.Builder();
    method public androidx.credentials.GetCredentialRequest.Builder addGetCredentialOption(androidx.credentials.GetCredentialOption getCredentialOption);
    method public androidx.credentials.GetCredentialRequest build();
    method public androidx.credentials.GetCredentialRequest.Builder setGetCredentialOptions(java.util.List<? extends androidx.credentials.GetCredentialOption> getCredentialOptions);
  }

  public final class GetCredentialResponse {
    ctor public GetCredentialResponse(androidx.credentials.Credential credential);
    method public androidx.credentials.Credential getCredential();
    property public final androidx.credentials.Credential credential;
  }

  public final class GetPasswordOption extends androidx.credentials.GetCredentialOption {
    ctor public GetPasswordOption();
  }

  public final class PasswordCredential extends androidx.credentials.Credential {
    ctor public PasswordCredential(String id, String password);
    method public String getId();
    method public String getPassword();
    property public final String id;
    property public final String password;
  }

}

