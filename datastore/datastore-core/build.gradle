/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.Multiplatform
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType
import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget


plugins {
    id("AndroidXPlugin")
    id("org.jetbrains.kotlin.multiplatform")
}

def enableNative = Multiplatform.isKotlinNativeEnabled(project)

kotlin {
    jvm {
        withJava()
    }
    if (enableNative) {
        macosX64()
        linuxX64()
        macosArm64()
    }
    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
            }
        }
        jvmMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
                api("androidx.annotation:annotation:1.3.0")
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTestCommon)
                implementation(libs.kotlinTestAnnotationsCommon)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.okio)
                api(project(":datastore:datastore-core-okio"))
            }
        }

        jvmTest {
            dependencies {
                implementation(libs.junit)
                implementation(libs.kotlinTest)
                implementation(libs.kotlinCoroutinesTest)
                implementation(project(":internal-testutils-kmp"))
            }
        }

        if (enableNative) {
            nativeMain {
                dependsOn(commonMain)
                dependencies {
                    api(libs.kotlinCoroutinesCore)
                    implementation(libs.atomicFu)
                }
            }
            nativeTest {
                dependsOn(commonTest)
            }
        }


        all {
            languageSettings.optIn("kotlin.RequiresOptIn")
        }
        targets.withType(KotlinNativeTarget).configureEach {
            binaries.all {
                binaryOptions["memoryModel"] = "experimental"
            }
        }
        targets.forEach {target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(sourceSets["nativeMain"])
                }
                target.compilations["test"].defaultSourceSet {
                    dependsOn(sourceSets["nativeTest"])
                }
            }
        }
    }
}

androidx {
    name = "Android DataStore Core"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenGroup = LibraryGroups.DATASTORE
    inceptionYear = "2020"
    description = "Android DataStore Core - contains the underlying store used by each serialization method"
    legacyDisableKotlinStrictApiMode = true
    publishPlatforms = kotlin.targets.asMap.keySet().collect { it.toLowerCase() }
}
