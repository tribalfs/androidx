/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("com.google.protobuf")
    id("java-test-fixtures")
    id("org.jetbrains.kotlin.android")
}

dependencies {
    api(libs.kotlinStdlib)
    api(libs.kotlinCoroutinesCore)
    api("androidx.annotation:annotation:1.2.0")
    api(project(":datastore:datastore-core"))

    androidTestImplementation(libs.junit)
    androidTestImplementation(libs.kotlinCoroutinesTest)
    androidTestImplementation(libs.protobufLite)
    androidTestImplementation(libs.truth)
    androidTestImplementation(project(":internal-testutils-truth"))
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(project(":datastore:datastore-core"))
}

protobuf {
    protoc {
        artifact = libs.protobufCompiler.get()
    }
    // Generates the java proto-lite code for the protos in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

android {
    defaultConfig {
        minSdkVersion 19
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version libs.versions.cmake.get()
        }
    }
    namespace "androidx.datastore.multiprocess"
}

androidx {
    name = "androidx.datastore:datastore-multiprocess"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.DATASTORE
    inceptionYear = "2022"
    description = "Android DataStore MultiProcess - contains the underlying store used by " +
            "multiple process use cases"
}
