<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.0-beta05" type="baseline" client="gradle" dependencies="false" name="AGP (8.1.0-beta05)" variant="all" version="8.1.0-beta05">

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(5000)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/glance/appwidget/AppWidgetHostRule.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="                        Thread.sleep(500)"
        errorLine2="                               ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/glance/appwidget/AppWidgetHostRule.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(sleepMs)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/glance/appwidget/CoroutineBroadcastReceiverTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(interval)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/glance/appwidget/GlanceAppWidgetReceiverTest.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method extractAllSizes has parameter &apos;minSize&apos; with type Function0&lt;DpSize>."
        errorLine1="internal fun Bundle.extractAllSizes(minSize: () -> DpSize): List&lt;DpSize> {"
        errorLine2="                                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/AppWidgetUtils.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method estimateSizes has parameter &apos;minSize&apos; with type Function0&lt;DpSize>."
        errorLine1="private fun Bundle.estimateSizes(minSize: () -> DpSize): List&lt;DpSize> {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/AppWidgetUtils.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;toPixels&apos; with type Function1&lt;? super Dp, ? extends Integer>."
        errorLine1="    fun Dimension.Dp.toPixels() = dp.toPixels(context)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/ApplyModifiers.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;toPixels&apos; with type Function1&lt;? super Resource, ? extends Integer>."
        errorLine1="    fun Dimension.Resource.toPixels() = context.resources.getDimensionPixelSize(res)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/ApplyModifiers.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemId&apos; with type Function1&lt;? super Integer, Long>."
        errorLine1="        itemId: ((index: Int) -> Long) = { UnspecifiedItemId },"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyList.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemContent&apos; with type Function2&lt;? super LazyItemScope, ? super Integer, Unit>."
        errorLine1="        itemContent: @Composable LazyItemScope.(index: Int) -> Unit"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyList.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemId&apos; with type Function1&lt;? super T, Long>."
        errorLine1="    noinline itemId: ((item: T) -> Long) = { LazyListScope.UnspecifiedItemId },"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyList.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;itemId&apos; with type Function2&lt;? super Integer, ? super T, Long>."
        errorLine1="    noinline itemId: ((index: Int, item: T) -> Long) = { _, _ -> LazyListScope.UnspecifiedItemId },"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyList.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemId&apos; with type Function1&lt;? super Integer, Long>."
        errorLine1="        itemId: ((index: Int) -> Long) = { UnspecifiedItemId },"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyVerticalGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemContent&apos; with type Function2&lt;? super LazyItemScope, ? super Integer, Unit>."
        errorLine1="        itemContent: @Composable LazyItemScope.(index: Int) -> Unit"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyVerticalGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemId&apos; with type Function1&lt;? super T, Long>."
        errorLine1="    noinline itemId: ((item: T) -> Long) = { LazyVerticalGridScope.UnspecifiedItemId },"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyVerticalGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;itemId&apos; with type Function2&lt;? super Integer, ? super T, Long>."
        errorLine1="    noinline itemId: ((index: Int, item: T) -> Long) = {"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/glance/appwidget/lazy/LazyVerticalGrid.kt"/>
    </issue>

</issues>
