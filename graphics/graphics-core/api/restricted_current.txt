// Signature format: 4.0
package androidx.graphics.opengl.egl {

  public final inline class EglConfigAttributes {
    ctor public EglConfigAttributes();
  }

  public static final class EglConfigAttributes.Builder {
    ctor @kotlin.PublishedApi internal EglConfigAttributes.Builder();
    method @kotlin.PublishedApi internal int[] build();
    method public void include(int[] attributes);
    method public infix void to(int, int that);
  }

  public final class EglConfigAttributesKt {
    method public static inline int[] EglConfigAttributes(kotlin.jvm.functions.Function1<? super androidx.graphics.opengl.egl.EglConfigAttributes.Builder,kotlin.Unit> block);
    method public static int[] getEglConfigAttributes1010102();
    method public static int[] getEglConfigAttributes8888();
    method public static int[] getEglConfigAttributesF16();
    property public static final int[] EglConfigAttributes1010102;
    property public static final int[] EglConfigAttributes8888;
    property public static final int[] EglConfigAttributesF16;
    field public static final int EglColorComponentTypeExt = 13113; // 0x3339
    field public static final int EglColorComponentTypeFixedExt = 13114; // 0x333a
    field public static final int EglColorComponentTypeFloatExt = 13115; // 0x333b
  }

  public final class EglException extends java.lang.RuntimeException {
    ctor public EglException(int error, optional String msg);
    method public int getError();
    method public String getMsg();
    property public final int error;
    property public String message;
    property public final String msg;
  }

  public final inline class EglExtensions {
    ctor public EglExtensions();
  }

  public static final class EglExtensions.Companion {
    method public java.util.Set<? extends java.lang.String> from(String queryString);
  }

  public final class EglExtensionsKt {
    field public static final String EglAndroidNativeFenceSync = "EGL_ANDROID_native_fence_sync";
    field public static final String EglExtBufferAge = "EGL_EXT_buffer_age";
    field public static final String EglExtColorSpaceDisplayP3Passthrough = "EGL_EXT_gl_colorspace_display_p3_passthrough";
    field public static final String EglExtGlColorSpaceBt2020Pq = "EGL_EXT_gl_colorspace_bt2020_pq";
    field public static final String EglExtGlColorSpaceScRgb = "EGL_EXT_gl_colorspace_scrgb";
    field public static final String EglExtPixelFormatFloat = "EGL_EXT_pixel_format_float";
    field public static final String EglImgContextPriority = "EGL_IMG_context_priority";
    field public static final String EglKhrFenceSync = "EGL_KHR_fence_sync";
    field public static final String EglKhrGlColorSpace = "EGL_KHR_gl_colorspace";
    field public static final String EglKhrNoConfigContext = "EGL_KHR_no_config_context";
    field public static final String EglKhrPartialUpdate = "EGL_KHR_partial_update";
    field public static final String EglKhrSurfacelessContext = "EGL_KHR_surfaceless_context";
    field public static final String EglKhrSwapBuffersWithDamage = "EGL_KHR_swap_buffers_with_damage";
    field public static final String EglKhrWaitSync = "EGL_KHR_wait_sync";
  }

  public final class EglManager {
    ctor public EglManager(optional androidx.graphics.opengl.egl.EglSpec eglSpec);
    method public android.opengl.EGLContext? createContext(android.opengl.EGLConfig config);
    method public android.opengl.EGLConfig? getEglConfig();
    method public android.opengl.EGLContext? getEglContext();
    method public androidx.graphics.opengl.egl.EglSpec getEglSpec();
    method public androidx.graphics.opengl.egl.EglVersion getEglVersion();
    method public void initialize();
    method public android.opengl.EGLConfig? loadConfig(int[] configAttributes);
    method public void release();
    property public final android.opengl.EGLConfig? eglConfig;
    property public final android.opengl.EGLContext? eglContext;
    property public final androidx.graphics.opengl.egl.EglSpec eglSpec;
    property public final androidx.graphics.opengl.egl.EglVersion eglVersion;
  }

  public interface EglSpec {
    method public android.opengl.EGLContext? createContext(android.opengl.EGLConfig config);
    method public void destroyContext(android.opengl.EGLContext eglContext);
    method public String eglQueryString(int nameId);
    method public default static String getStatusString(int error);
    method public androidx.graphics.opengl.egl.EglVersion initialize();
    method public android.opengl.EGLConfig? loadConfig(int[] configAttributes);
    field public static final androidx.graphics.opengl.egl.EglSpec.Companion Companion;
    field public static final androidx.graphics.opengl.egl.EglSpec Egl14;
  }

  public static final class EglSpec.Companion {
    method public String getStatusString(int error);
  }

  public final class EglVersion {
    ctor public EglVersion(int major, int minor);
    method public int component1();
    method public int component2();
    method public androidx.graphics.opengl.egl.EglVersion copy(int major, int minor);
    method public int getMajor();
    method public int getMinor();
    property public final int major;
    property public final int minor;
    field public static final androidx.graphics.opengl.egl.EglVersion.Companion Companion;
    field public static final androidx.graphics.opengl.egl.EglVersion Unknown;
    field public static final androidx.graphics.opengl.egl.EglVersion V14;
    field public static final androidx.graphics.opengl.egl.EglVersion V15;
  }

  public static final class EglVersion.Companion {
  }

}

