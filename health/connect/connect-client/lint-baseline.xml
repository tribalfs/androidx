<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-alpha04" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-alpha04)" variant="all" version="8.3.0-alpha04">

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class AggregateDataRequest(override val proto: RequestProto.AggregateDataRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/AggregateDataRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class AggregateDataResponse(override val proto: ResponseProto.AggregateDataResponse) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/AggregateDataResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ChangesEvent(override val proto: ChangeProto.ChangesEvent) :"
        errorLine2="      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/changes/ChangesEvent.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class DeleteDataRangeRequest(override val proto: RequestProto.DeleteDataRangeRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/DeleteDataRangeRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class DeleteDataRequest("
        errorLine2="      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/DeleteDataRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="annotation class ErrorCode {"
        errorLine2="                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/error/ErrorCode.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ErrorStatus"
        errorLine2="      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/error/ErrorStatus.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ExerciseRoute(override val proto: DataProto.DataPoint.SubTypeDataList) :"
        errorLine2="      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/exerciseroute/ExerciseRoute.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class GetChangesRequest(override val proto: RequestProto.GetChangesRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/GetChangesRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class GetChangesResponse(override val proto: ResponseProto.GetChangesResponse) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/GetChangesResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class GetChangesTokenRequest(override val proto: RequestProto.GetChangesTokenRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/GetChangesTokenRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class GetChangesTokenResponse(override val proto: ResponseProto.GetChangesTokenResponse) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/GetChangesTokenResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="interface HealthDataAsyncClient {"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/HealthDataAsyncClient.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="object HealthDataService {"
        errorLine2="       ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/HealthDataService.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class InsertDataResponse(val dataPointUids: List&lt;String>) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/InsertDataResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class Permission(override val proto: PermissionProto.Permission) :"
        errorLine2="      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/permission/Permission.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ReadDataRangeRequest(override val proto: RequestProto.ReadDataRangeRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/ReadDataRangeRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ReadDataRangeResponse(override val proto: ResponseProto.ReadDataRangeResponse) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/ReadDataRangeResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ReadDataRequest(override val proto: RequestProto.ReadDataRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/ReadDataRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ReadDataResponse(override val proto: ResponseProto.ReadDataResponse) :"
        errorLine2="      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/ReadDataResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ReadExerciseRouteRequest(override val proto: RequestProto.ReadExerciseRouteRequest) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/ReadExerciseRouteRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class ReadExerciseRouteResponse(override val proto: ResponseProto.ReadExerciseRouteResponse) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/response/ReadExerciseRouteResponse.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class RegisterForDataNotificationsRequest("
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/RegisterForDataNotificationsRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class RequestContext("
        errorLine2="      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/RequestContext.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="object SharedMemory27Impl {"
        errorLine2="       ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/data/SharedMemory27Impl.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class UnregisterFromDataNotificationsRequest("
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/UnregisterFromDataNotificationsRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class UpsertDataRequest(val dataPoints: List&lt;DataProto.DataPoint>) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/UpsertDataRequest.kt"/>
    </issue>

    <issue
        id="BanSuppressTag"
        message="@suppress is not allowed in documentation"
        errorLine1="class UpsertExerciseRouteRequest(val sessionUid: String, val route: DataProto.DataPoint) :"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/request/UpsertExerciseRouteRequest.kt"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    private synchronized void handleRetriableDisconnection(Throwable throwable) {"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                                                                                ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getServicePackageName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getBindAction() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getApiClientName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String packageName,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String clientName,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String bindAction,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            QueueOperation refreshVersionOperation) {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionManager(Context context, Looper looper) {"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionManager(Context context, Looper looper) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void scheduleForExecution(QueueOperation operation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerListener(ListenerKey listenerKey, QueueOperation registerOperation) {"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerListener(ListenerKey listenerKey, QueueOperation registerOperation) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void unregisterListener(ListenerKey listenerKey, QueueOperation unregisterOperation) {"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void unregisterListener(ListenerKey listenerKey, QueueOperation unregisterOperation) {"
        errorLine2="                                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onConnected(ServiceConnection connection) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onDisconnected(ServiceConnection connection, long reconnectDelayMs) {"
        errorLine2="                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void track(SettableFuture&lt;?> future) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void cancelPendingFutures(Throwable throwable) {"
        errorLine2="                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void track(SettableFuture&lt;?> future);"
        errorLine2="               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void cancelPendingFutures(Throwable throwable);"
        errorLine2="                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ListenerKey(Object listenerKey) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ListenerKey.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder) throws RemoteException;"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void setException(Throwable exception);"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    QueueOperation trackExecution(ExecutionTracker tracker);"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    QueueOperation trackExecution(ExecutionTracker tracker);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    ConnectionConfiguration getConnectionConfiguration();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(S service, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/RemoteFutureOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void onConnected(ServiceConnection connection);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void onDisconnected(ServiceConnection connection, long reconnectDelayMs);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ServiceOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ServiceOperation.java"/>
    </issue>

</issues>
