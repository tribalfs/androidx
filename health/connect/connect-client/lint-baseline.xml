<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.0-beta02" type="baseline" client="gradle" dependencies="false" name="AGP (8.1.0-beta02)" variant="all" version="8.1.0-beta02">

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public class ApiVersionException extends ExecutionException {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ApiVersionException.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public class BaseQueueOperation implements QueueOperation {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public abstract class Client&lt;S extends IInterface> {"
        errorLine2="                      ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public class ClientConfiguration {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public final class ConnectionConfiguration {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public final class ConnectionManager implements Handler.Callback, ServiceConnection.Callback {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public class DefaultExecutionTracker implements ExecutionTracker {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public interface ExecutionTracker {"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public final class HealthDataServiceConstants {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/service/HealthDataServiceConstants.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public final class ListenerKey {"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ListenerKey.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public interface QueueOperation {"
        errorLine2="                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public interface RemoteFutureOperation&lt;S, R> {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/RemoteFutureOperation.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public interface RemoteOperation&lt;S, R> {"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/RemoteOperation.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public final class SdkConfig {"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/SdkConfig.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public class ServiceConnection implements android.content.ServiceConnection {"
        errorLine2="             ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="BanHideAnnotation"
        message="@hide is not allowed in Javadoc"
        errorLine1="public interface ServiceOperation&lt;R> {"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ServiceOperation.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    private synchronized void handleRetriableDisconnection(Throwable throwable) {"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="PrereleaseSdkCoreDependency"
        message="Prelease SDK check isAtLeastU cannot be called as this project has a versioned dependency on androidx.core:core"
        errorLine1="            if (BuildCompat.isAtLeastU()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/connect/client/PermissionController.kt"/>
    </issue>

    <issue
        id="PrereleaseSdkCoreDependency"
        message="Prelease SDK check isAtLeastU cannot be called as this project has a versioned dependency on androidx.core:core"
        errorLine1="            if (BuildCompat.isAtLeastU()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/connect/client/PermissionController.kt"/>
    </issue>

    <issue
        id="PrereleaseSdkCoreDependency"
        message="Prelease SDK check isAtLeastU cannot be called as this project has a versioned dependency on androidx.core:core"
        errorLine1="            if (BuildCompat.isAtLeastU()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/connect/client/PermissionController.kt"/>
    </issue>

    <issue
        id="PrereleaseSdkCoreDependency"
        message="Prelease SDK check isAtLeastU cannot be called as this project has a versioned dependency on androidx.core:core"
        errorLine1="            if (BuildCompat.isAtLeastU()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/connect/client/PermissionController.kt"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                                                                                ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getServicePackageName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getBindAction() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getApiClientName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String packageName,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String clientName,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String bindAction,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            QueueOperation refreshVersionOperation) {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionManager(Context context, Looper looper) {"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionManager(Context context, Looper looper) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void scheduleForExecution(QueueOperation operation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerListener(ListenerKey listenerKey, QueueOperation registerOperation) {"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerListener(ListenerKey listenerKey, QueueOperation registerOperation) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void unregisterListener(ListenerKey listenerKey, QueueOperation unregisterOperation) {"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void unregisterListener(ListenerKey listenerKey, QueueOperation unregisterOperation) {"
        errorLine2="                                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onConnected(ServiceConnection connection) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onDisconnected(ServiceConnection connection, long reconnectDelayMs) {"
        errorLine2="                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void track(SettableFuture&lt;?> future) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void cancelPendingFutures(Throwable throwable) {"
        errorLine2="                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void track(SettableFuture&lt;?> future);"
        errorLine2="               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void cancelPendingFutures(Throwable throwable);"
        errorLine2="                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ListenerKey(Object listenerKey) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ListenerKey.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder) throws RemoteException;"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void setException(Throwable exception);"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    QueueOperation trackExecution(ExecutionTracker tracker);"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    QueueOperation trackExecution(ExecutionTracker tracker);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    ConnectionConfiguration getConnectionConfiguration();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(S service, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/RemoteFutureOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void onConnected(ServiceConnection connection);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void onDisconnected(ServiceConnection connection, long reconnectDelayMs);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ServiceOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/platform/client/impl/ipc/ServiceOperation.java"/>
    </issue>

</issues>
