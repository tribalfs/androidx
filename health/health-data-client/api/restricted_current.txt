// Signature format: 4.0
package androidx.health.data.client {

  public interface HealthDataClient {
    method public suspend Object? deleteRecords(kotlin.reflect.KClass<? extends androidx.health.data.client.records.Record> recordType, java.util.List<java.lang.String> uidsList, java.util.List<java.lang.String> clientIdsList, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? deleteRecords(kotlin.reflect.KClass<? extends androidx.health.data.client.records.Record> recordType, androidx.health.data.client.time.TimeRangeFilter timeRangeFilter, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public default static androidx.health.data.client.HealthDataClient getOrCreate(android.content.Context context, optional java.util.List<java.lang.String> packageNames);
    method public default static androidx.health.data.client.HealthDataClient getOrCreate(android.content.Context context);
    method public suspend Object? insertRecords(java.util.List<? extends androidx.health.data.client.records.Record> records, kotlin.coroutines.Continuation<? super androidx.health.data.client.response.InsertRecordsResponse>);
    method public default static boolean isAvailable(android.content.Context context, optional java.util.List<java.lang.String> packageNames);
    method public default static boolean isAvailable(android.content.Context context);
    field public static final androidx.health.data.client.HealthDataClient.Companion Companion;
  }

  public static final class HealthDataClient.Companion {
    method public androidx.health.data.client.HealthDataClient getOrCreate(android.content.Context context, optional java.util.List<java.lang.String> packageNames);
    method public androidx.health.data.client.HealthDataClient getOrCreate(android.content.Context context);
    method public boolean isAvailable(android.content.Context context, optional java.util.List<java.lang.String> packageNames);
    method public boolean isAvailable(android.content.Context context);
  }

}

package androidx.health.data.client.metadata {

  public final class DataOrigin {
    ctor public DataOrigin(String packageName);
    method public String getPackageName();
    property public final String packageName;
  }

  public final class Device {
    ctor public Device(optional String? identifier, optional String? manufacturer, optional String? model, optional String? type);
    method public String? getIdentifier();
    method public String? getManufacturer();
    method public String? getModel();
    method public String? getType();
    property public final String? identifier;
    property public final String? manufacturer;
    property public final String? model;
    property public final String? type;
  }

  public final class DeviceTypes {
    field public static final String CHEST_STRAP = "CHEST_STRAP";
    field public static final String FITNESS_BAND = "FITNESS_BAND";
    field public static final String HEAD_MOUNTED = "HEAD_MOUNTED";
    field public static final androidx.health.data.client.metadata.DeviceTypes INSTANCE;
    field public static final String PHONE = "PHONE";
    field public static final String RING = "RING";
    field public static final String SCALE = "SCALE";
    field public static final String SMART_DISPLAY = "SMART_DISPLAY";
    field public static final String UNKNOWN = "UNKNOWN";
    field public static final String WATCH = "WATCH";
  }

  public final class Metadata {
    ctor public Metadata(optional String? uid, optional androidx.health.data.client.metadata.DataOrigin dataOrigin, optional java.time.Instant lastModifiedTime, optional String? clientId, optional long clientVersion, optional androidx.health.data.client.metadata.Device? device);
    method public String? getClientId();
    method public long getClientVersion();
    method public androidx.health.data.client.metadata.DataOrigin getDataOrigin();
    method public androidx.health.data.client.metadata.Device? getDevice();
    method public java.time.Instant getLastModifiedTime();
    method public String? getUid();
    property public final String? clientId;
    property public final long clientVersion;
    property public final androidx.health.data.client.metadata.DataOrigin dataOrigin;
    property public final androidx.health.data.client.metadata.Device? device;
    property public final java.time.Instant lastModifiedTime;
    property public final String? uid;
  }

}

package androidx.health.data.client.records {

  public final class ActivityTypes {
    field public static final String BACK_EXTENSION = "back_extension";
    field public static final String BADMINTON = "badminton";
    field public static final String BARBELL_SHOULDER_PRESS = "barbell_shoulder_press";
    field public static final String BASEBALL = "baseball";
    field public static final String BASKETBALL = "basketball";
    field public static final String BENCH_PRESS = "bench_press";
    field public static final String BENCH_SIT_UP = "bench_sit_up";
    field public static final String BIKING = "biking";
    field public static final String BIKING_STATIONARY = "biking_stationary";
    field public static final String BOOT_CAMP = "boot_camp";
    field public static final String BOXING = "boxing";
    field public static final String BURPEE = "burpee";
    field public static final String CALISTHENICS = "calisthenics";
    field public static final String CRICKET = "cricket";
    field public static final String CRUNCH = "crunch";
    field public static final String DANCING = "dancing";
    field public static final String DEADLIFT = "deadlift";
    field public static final String DUMBBELL_CURL_LEFT_ARM = "dumbbell_curl_left_arm";
    field public static final String DUMBBELL_CURL_RIGHT_ARM = "dumbbell_curl_right_arm";
    field public static final String DUMBBELL_FRONT_RAISE = "dumbbell_front_raise";
    field public static final String DUMBBELL_LATERAL_RAISE = "dumbbell_lateral_raise";
    field public static final String DUMBBELL_TRICEPS_EXTENSION_LEFT_ARM = "dumbbell_triceps_extension_left_arm";
    field public static final String DUMBBELL_TRICEPS_EXTENSION_RIGHT_ARM = "dumbbell_triceps_extension_right_arm";
    field public static final String DUMBBELL_TRICEPS_EXTENSION_TWO_ARM = "dumbbell_triceps_extension_two_arm";
    field public static final String ELLIPTICAL = "elliptical";
    field public static final String EXERCISE_CLASS = "exercise_class";
    field public static final String FENCING = "fencing";
    field public static final String FOOTBALL_AMERICAN = "football_american";
    field public static final String FOOTBALL_AUSTRALIAN = "football_australian";
    field public static final String FORWARD_TWIST = "forward_twist";
    field public static final String FRISBEE_DISC = "frisbee_disc";
    field public static final String GOLF = "golf";
    field public static final String GUIDED_BREATHING = "guided_breathing";
    field public static final String GYMNASTICS = "gymnastics";
    field public static final String HANDBALL = "handball";
    field public static final String HIGH_INTENSITY_INTERVAL_TRAINING = "high_intensity_interval_training";
    field public static final String HIKING = "hiking";
    field public static final String ICE_HOCKEY = "ice_hockey";
    field public static final String ICE_SKATING = "ice_skating";
    field public static final androidx.health.data.client.records.ActivityTypes INSTANCE;
    field public static final String JUMPING_JACK = "jumping_jack";
    field public static final String JUMP_ROPE = "jump_rope";
    field public static final String LAT_PULL_DOWN = "lat_pull_down";
    field public static final String LUNGE = "lunge";
    field public static final String MARTIAL_ARTS = "martial_arts";
    field public static final String MEDITATION = "meditation";
    field public static final String PADDLING = "paddling";
    field public static final String PARA_GLIDING = "para_gliding";
    field public static final String PILATES = "pilates";
    field public static final String PLANK = "plank";
    field public static final String RACQUETBALL = "racquetball";
    field public static final String ROCK_CLIMBING = "rock_climbing";
    field public static final String ROLLER_HOCKEY = "roller_hockey";
    field public static final String ROWING = "rowing";
    field public static final String ROWING_MACHINE = "rowing_machine";
    field public static final String RUGBY = "rugby";
    field public static final String RUNNING = "running";
    field public static final String RUNNING_TREADMILL = "running_treadmill";
    field public static final String SAILING = "sailing";
    field public static final String SCUBA_DIVING = "scuba_diving";
    field public static final String SKATING = "skating";
    field public static final String SKIING = "skiing";
    field public static final String SNOWBOARDING = "snowboarding";
    field public static final String SNOWSHOEING = "snowshoeing";
    field public static final String SOCCER = "soccer";
    field public static final String SOFTBALL = "softball";
    field public static final String SQUASH = "squash";
    field public static final String SQUAT = "squat";
    field public static final String STAIR_CLIMBING = "stair_climbing";
    field public static final String STAIR_CLIMBING_MACHINE = "stair_climbing_machine";
    field public static final String STRENGTH_TRAINING = "strength_training";
    field public static final String STRETCHING = "stretching";
    field public static final String SURFING = "surfing";
    field public static final String SWIMMING_OPEN_WATER = "swimming_open_water";
    field public static final String SWIMMING_POOL = "swimming_pool";
    field public static final String TABLE_TENNIS = "table_tennis";
    field public static final String TENNIS = "tennis";
    field public static final String UPPER_TWIST = "upper_twist";
    field public static final String VOLLEYBALL = "volleyball";
    field public static final String WALKING = "walking";
    field public static final String WATER_POLO = "water_polo";
    field public static final String WEIGHTLIFTING = "weightlifting";
    field public static final String WORKOUT = "workout";
    field public static final String YOGA = "yoga";
  }

  public final class BloodPressureMeasurementLocations {
    field public static final androidx.health.data.client.records.BloodPressureMeasurementLocations INSTANCE;
    field public static final String LEFT_UPPER_ARM = "left_upper_arm";
    field public static final String LEFT_WRIST = "left_wrist";
    field public static final String RIGHT_UPPER_ARM = "right_upper_arm";
    field public static final String RIGHT_WRIST = "right_wrist";
  }

  public final class BodyPositions {
    field public static final androidx.health.data.client.records.BodyPositions INSTANCE;
    field public static final String LYING_DOWN = "lying_down";
    field public static final String RECLINING = "reclining";
    field public static final String SITTING_DOWN = "sitting_down";
    field public static final String STANDING_UP = "standing_up";
  }

  public final class BodyTemperature implements androidx.health.data.client.records.InstantaneousRecord {
    ctor public BodyTemperature(double temperatureDegreesCelsius, optional String? measurementLocation, java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public String? getMeasurementLocation();
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public double getTemperatureDegreesCelsius();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final String? measurementLocation;
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public final double temperatureDegreesCelsius;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class BodyTemperatureMeasurementLocations {
    field public static final String ARMPIT = "armpit";
    field public static final String EAR = "ear";
    field public static final String FINGER = "finger";
    field public static final String FOREHEAD = "forehead";
    field public static final androidx.health.data.client.records.BodyTemperatureMeasurementLocations INSTANCE;
    field public static final String MOUTH = "mouth";
    field public static final String RECTUM = "rectum";
    field public static final String TEMPORAL_ARTERY = "temporal_artery";
    field public static final String TOE = "toe";
    field public static final String VAGINA = "vagina";
    field public static final String WRIST = "wrist";
  }

  public final class Distance implements androidx.health.data.client.records.IntervalRecord {
    ctor public Distance(double distanceMeters, java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public double getDistanceMeters();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final double distanceMeters;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
  }

  public final class ElevationGained implements androidx.health.data.client.records.IntervalRecord {
    ctor public ElevationGained(double elevationMeters, java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public double getElevationMeters();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final double elevationMeters;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
  }

  public final class Height implements androidx.health.data.client.records.InstantaneousRecord {
    ctor public Height(double heightMeters, java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public double getHeightMeters();
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final double heightMeters;
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class HipCircumference implements androidx.health.data.client.records.InstantaneousRecord {
    ctor public HipCircumference(double circumferenceMeters, java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public double getCircumferenceMeters();
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final double circumferenceMeters;
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  @kotlin.PublishedApi internal interface InstantaneousRecord extends androidx.health.data.client.records.Record {
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public abstract java.time.Instant time;
    property public abstract java.time.ZoneOffset? zoneOffset;
  }

  @kotlin.PublishedApi internal interface IntervalRecord extends androidx.health.data.client.records.Record {
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public abstract java.time.Instant endTime;
    property public abstract java.time.ZoneOffset? endZoneOffset;
    property public abstract java.time.Instant startTime;
    property public abstract java.time.ZoneOffset? startZoneOffset;
  }

  public final class OvulationTestResults {
    field public static final androidx.health.data.client.records.OvulationTestResults INSTANCE;
    field public static final String NEGATIVE = "negative";
    field public static final String POSITIVE = "positive";
  }

  public interface Record {
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    property public abstract androidx.health.data.client.metadata.Metadata metadata;
  }

  public final class Steps implements androidx.health.data.client.records.IntervalRecord {
    ctor public Steps(long count, java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public long getCount();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final long count;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
  }

  public final class Weight implements androidx.health.data.client.records.InstantaneousRecord {
    ctor public Weight(double weightKg, java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional androidx.health.data.client.metadata.Metadata metadata);
    method public androidx.health.data.client.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public double getWeightKg();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.data.client.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public final double weightKg;
    property public java.time.ZoneOffset? zoneOffset;
  }

}

package androidx.health.data.client.response {

  public final class InsertRecordsResponse {
    method public java.util.List<java.lang.String> getRecordUidsList();
    property public final java.util.List<java.lang.String> recordUidsList;
  }

}

package androidx.health.data.client.time {

  public final class TimeRangeFilter {
    method public static androidx.health.data.client.time.TimeRangeFilter after(java.time.Instant startTime);
    method public static androidx.health.data.client.time.TimeRangeFilter after(java.time.LocalDateTime startTime);
    method public static androidx.health.data.client.time.TimeRangeFilter before(java.time.Instant endTime);
    method public static androidx.health.data.client.time.TimeRangeFilter before(java.time.LocalDateTime endTime);
    method public static androidx.health.data.client.time.TimeRangeFilter between(java.time.Instant startTime, java.time.Instant endTime);
    method public static androidx.health.data.client.time.TimeRangeFilter between(java.time.LocalDateTime startTime, java.time.LocalDateTime endTime);
    field public static final androidx.health.data.client.time.TimeRangeFilter.Companion Companion;
  }

  public static final class TimeRangeFilter.Companion {
    method public androidx.health.data.client.time.TimeRangeFilter after(java.time.Instant startTime);
    method public androidx.health.data.client.time.TimeRangeFilter after(java.time.LocalDateTime startTime);
    method public androidx.health.data.client.time.TimeRangeFilter before(java.time.Instant endTime);
    method public androidx.health.data.client.time.TimeRangeFilter before(java.time.LocalDateTime endTime);
    method public androidx.health.data.client.time.TimeRangeFilter between(java.time.Instant startTime, java.time.Instant endTime);
    method public androidx.health.data.client.time.TimeRangeFilter between(java.time.LocalDateTime startTime, java.time.LocalDateTime endTime);
  }

}

