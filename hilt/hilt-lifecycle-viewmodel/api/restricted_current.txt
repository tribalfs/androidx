// Signature format: 4.0
package androidx.hilt.lifecycle {

  public final class HiltViewModelFactory extends androidx.lifecycle.AbstractSavedStateViewModelFactory implements androidx.lifecycle.ViewModelProvider.Factory {
    method protected <T extends androidx.lifecycle.ViewModel> T create(String, Class<T!>, androidx.lifecycle.SavedStateHandle);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) @java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.PARAMETER}) @javax.inject.Qualifier public @interface InternalViewModelInjectMap {
  }

  @androidx.hilt.lifecycle.ViewModelScoped @dagger.hilt.DefineComponent(parent=ActivityRetainedComponent.class) public interface ViewModelComponent {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) @dagger.hilt.DefineComponent.Builder public static interface ViewModelComponent.Builder {
    method public androidx.hilt.lifecycle.ViewModelComponent.Builder bindHandle(@dagger.BindsInstance androidx.lifecycle.SavedStateHandle);
    method public androidx.hilt.lifecycle.ViewModelComponent build();
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public final class ViewModelFactoryModules {
  }

  @dagger.Module @dagger.hilt.InstallIn(ActivityComponent.class) public static class ViewModelFactoryModules.ActivityModule {
  }

  @dagger.Module @dagger.hilt.InstallIn(FragmentComponent.class) public static final class ViewModelFactoryModules.FragmentModule {
  }

  @dagger.Module @dagger.hilt.InstallIn(ViewModelComponent.class) public abstract static class ViewModelFactoryModules.ViewModelModule {
    ctor public ViewModelFactoryModules.ViewModelModule();
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) @javax.inject.Scope public @interface ViewModelScoped {
  }

}

