/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.KmpPlatformsKt
import androidx.build.LibraryType
import androidx.build.PlatformIdentifier
import androidx.build.Publish
import androidx.build.RunApiTasks
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType
import org.jetbrains.kotlin.gradle.tasks.KotlinNativeCompile

plugins {
    id("AndroidXPlugin")
}

androidXMultiplatform {
    jvm {}
    mac()
    linux()
    ios()

    defaultPlatform(PlatformIdentifier.JVM)

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlibCommon)
                api(libs.kotlinTestCommon)
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTestCommon)
                implementation(libs.kotlinTestAnnotationsCommon)
            }
        }

        jvmMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(libs.kotlinTest)
                implementation(libs.guava)
            }
        }

        jvmTest {
            dependencies {
                implementation(libs.kotlinStdlib)
                implementation(libs.kotlinTest)
            }
        }

        if (KmpPlatformsKt.enableNative(project)) {
            nonJvmMain {
                dependsOn commonMain
            }

            targets.all { target ->
                if (target.platformType !in [KotlinPlatformType.jvm, KotlinPlatformType.common]) {
                    target.compilations["main"].defaultSourceSet {
                        dependsOn(nonJvmMain)
                    }
                }
            }
        }
    }
}

androidx {
    legacyDisableKotlinStrictApiMode = true // Temporarily enabled to allow API tracking
    publish = Publish.SNAPSHOT_ONLY
    runApiTasks = new RunApiTasks.Yes() // Used to diff against Google Truth
    type = LibraryType.INTERNAL_TEST_LIBRARY
}
