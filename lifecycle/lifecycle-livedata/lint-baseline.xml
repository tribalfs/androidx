<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.2.0-alpha15" type="baseline" client="gradle" dependencies="false" name="AGP (8.2.0-alpha15)" variant="all" version="8.2.0-alpha15">

    <issue
        id="RestrictedApi"
        message="ArchTaskExecutor.getIOThreadExecutor can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="    internal val executor: Executor = ArchTaskExecutor.getIOThreadExecutor()"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/ComputableLiveData.kt"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="ArchTaskExecutor.getIOThreadExecutor can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="    internal val executor: Executor = ArchTaskExecutor.getIOThreadExecutor()"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/ComputableLiveData.kt"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="ArchTaskExecutor.getInstance can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        ArchTaskExecutor.getInstance().executeOnMainThread(invalidationRunnable)"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/ComputableLiveData.kt"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="TaskExecutor.executeOnMainThread can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        ArchTaskExecutor.getInstance().executeOnMainThread(invalidationRunnable)"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/ComputableLiveData.kt"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="TaskExecutor.executeOnMainThread can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        ArchTaskExecutor.getInstance().executeOnMainThread(invalidationRunnable)"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/ComputableLiveData.kt"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="    private SafeIterableMap&lt;LiveData&lt;?>, Source&lt;?>> mSources = new SafeIterableMap&lt;>();"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/MediatorLiveData.java"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.putIfAbsent can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        Source&lt;?> existing = mSources.putIfAbsent(source, e);"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/MediatorLiveData.java"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.putIfAbsent can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        Source&lt;?> existing = mSources.putIfAbsent(source, e);"
        errorLine2="                                                  ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/MediatorLiveData.java"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.putIfAbsent can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        Source&lt;?> existing = mSources.putIfAbsent(source, e);"
        errorLine2="                                                          ~">
        <location
            file="src/main/java/androidx/lifecycle/MediatorLiveData.java"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.remove can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        Source&lt;?> source = mSources.remove(toRemote);"
        errorLine2="                                    ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/MediatorLiveData.java"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.remove can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        Source&lt;?> source = mSources.remove(toRemote);"
        errorLine2="                                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/MediatorLiveData.java"/>
    </issue>

</issues>
