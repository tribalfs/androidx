import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
}

android {
    buildTypes.all {
        consumerProguardFiles "proguard-rules.pro"
    }
    namespace "androidx.lifecycle.runtime"
}

dependencies {
    api(libs.kotlinStdlib)
    api(project(":lifecycle:lifecycle-common"))

    api("androidx.arch.core:core-common:2.2.0-rc01")
    // necessary for IJ to resolve dependencies.
    api("androidx.annotation:annotation:1.1.0")
    implementation("androidx.arch.core:core-runtime:2.2.0-rc01")
    implementation("androidx.profileinstaller:profileinstaller:1.2.1")

    testImplementation(libs.junit)
    testImplementation(libs.mockitoCore4)

    androidTestImplementation(libs.junit)
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRunner)

    constraints {
        implementation(project(":lifecycle:lifecycle-common"))
        implementation(project(":lifecycle:lifecycle-runtime-ktx"))
        implementation(project(":lifecycle:lifecycle-runtime-testing"))
        // this syntax is a temporary workout to allow project dependency on cross-project-set
        // i.e. COMPOSE + MAIN project sets
        // update syntax when b/239979823 is fixed
        implementation("androidx.lifecycle:lifecycle-runtime-compose:${androidx.LibraryVersions.LIFECYCLE}")
    }
}

androidx {
    name "Android Lifecycle Runtime"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear "2017"
    description "Android Lifecycle Runtime"
}
