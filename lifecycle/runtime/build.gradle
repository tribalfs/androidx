apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile project(":lifecycle:common")
    compile project(":apptoolkit-core")
    compile "com.android.support:support-core-utils:$support_lib_version"
    // using classes like Pair from support core allows Lifecycle to be compatible w/ junit tests
    compile "com.android.support:support-fragment:$support_lib_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.mockito:mockito-core:$mockito_version"

    androidTestCompile("com.android.support.test:runner:$atsl_version") {
        exclude module: 'support-annotations'
    }
    androidTestCompile "com.android.support:appcompat-v7:$support_lib_version"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

createAndroidCheckstyle(project)

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: rootProject.ext.localMavenRepo)
            pom.artifactId = "runtime"
        }
    }
}
