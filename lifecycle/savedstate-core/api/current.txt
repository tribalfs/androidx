// Signature format: 2.0
package androidx.lifecycle {

  public abstract class AbstractSavedStateRegistry<S> implements androidx.lifecycle.SavedStateRegistry<S> {
    ctor public AbstractSavedStateRegistry();
    method @MainThread public final S? consumeRestoredStateForKey(String);
    method @MainThread public final boolean isRestored();
    method @MainThread public final void registerSavedStateProvider(String, androidx.lifecycle.SavedStateRegistry.SavedStateProvider<S>);
    method @MainThread protected final void restoreSavedState(java.util.Map<java.lang.String,S>?);
    method @MainThread protected final java.util.Map<java.lang.String,S> saveState();
    method @MainThread public final void unregisterSavedStateProvider(String);
  }

  public final class BundleSavedStateRegistry extends androidx.lifecycle.AbstractSavedStateRegistry<android.os.Bundle> {
    ctor public BundleSavedStateRegistry();
    method @MainThread public void performRestore(android.os.Bundle?);
    method @MainThread public void performSave(android.os.Bundle);
  }

  public interface BundleSavedStateRegistryOwner {
    method public androidx.lifecycle.SavedStateRegistry<android.os.Bundle> getBundleSavedStateRegistry();
  }

  public interface SavedStateRegistry<S> {
    method @MainThread public S? consumeRestoredStateForKey(String);
    method @MainThread public boolean isRestored();
    method @MainThread public void registerSavedStateProvider(String, androidx.lifecycle.SavedStateRegistry.SavedStateProvider<S>);
    method @MainThread public void unregisterSavedStateProvider(String);
  }

  public static interface SavedStateRegistry.SavedStateProvider<S> {
    method public S saveState();
  }

}

