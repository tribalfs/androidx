<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-beta04">

    <issue
        id="UnknownIssueId"
        severity="Ignore"
        message="Unknown issue id &quot;ComposableLambdaParameterNaming&quot;"
        category="Lint"
        priority="1"
        summary="Unknown Lint Issue Id"
        explanation="Lint will report this issue if it is configured with an issue id it does not recognize in for example Gradle files or `lint.xml` configuration files.">
        <location
            file="$SUPPORT/lint-checks/integration-tests/build.gradle"/>
    </issue>

    <issue
        id="UnknownIssueId"
        severity="Ignore"
        message="Unknown issue id &quot;ComposableLambdaParameterPosition&quot;"
        category="Lint"
        priority="1"
        summary="Unknown Lint Issue Id"
        explanation="Lint will report this issue if it is configured with an issue id it does not recognize in for example Gradle files or `lint.xml` configuration files.">
        <location
            file="$SUPPORT/lint-checks/integration-tests/build.gradle"/>
    </issue>

    <issue
        id="UnknownIssueId"
        severity="Ignore"
        message="Unknown issue id &quot;ComposableNaming&quot;"
        category="Lint"
        priority="1"
        summary="Unknown Lint Issue Id"
        explanation="Lint will report this issue if it is configured with an issue id it does not recognize in for example Gradle files or `lint.xml` configuration files.">
        <location
            file="$SUPPORT/lint-checks/integration-tests/build.gradle"/>
    </issue>

    <issue
        id="UnknownIssueId"
        severity="Ignore"
        message="Unknown issue id &quot;CompositionLocalNaming&quot;"
        category="Lint"
        priority="1"
        summary="Unknown Lint Issue Id"
        explanation="Lint will report this issue if it is configured with an issue id it does not recognize in for example Gradle files or `lint.xml` configuration files.">
        <location
            file="$SUPPORT/lint-checks/integration-tests/build.gradle"/>
    </issue>

    <issue
        id="BanConcurrentHashMap"
        severity="Error"
        message="Detected ConcurrentHashMap usage."
        category="Correctness"
        priority="5"
        summary="ConcurrentHashMap usage is not allowed"
        explanation="ConcurrentHashMap has an issue on Androidâ€™s Lollipop release that can lead to lost updates under thread contention."
        errorLine1="import java.util.concurrent.ConcurrentHashMap;"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="$SUPPORT/lint-checks/integration-tests/src/main/java/Sample.java"
            line="19"
            column="1"/>
    </issue>

    <issue
        id="UnnecessaryLambdaCreation"
        severity="Error"
        message="Creating an unnecessary lambda to emit a captured lambda"
        category="Performance"
        priority="5"
        summary="Creating an unnecessary lambda to emit a captured lambda"
        explanation="Creating this extra lambda instead of just passing the already captured lambda means that during code generation the Compose compiler will insert code around this lambda to track invalidations. This adds some extra runtime cost so you should instead just directly pass the lambda as a parameter to the function."
        errorLine1="        lambda()"
        errorLine2="        ~~~~~~">
        <location
            file="$SUPPORT/lint-checks/integration-tests/src/main/java/ComposeSample.kt"
            line="29"
            column="9"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Fatal"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Sample confirmIntrinisicLintChecksRun() {"
        errorLine2="                  ~~~~~~">
        <location
            file="$SUPPORT/lint-checks/integration-tests/src/main/java/Sample.java"
            line="28"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Fatal"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void confirmCustomAndroidXChecksRun(ConcurrentHashMap m) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~">
        <location
            file="$SUPPORT/lint-checks/integration-tests/src/main/java/Sample.java"
            line="37"
            column="55"/>
    </issue>

</issues>
