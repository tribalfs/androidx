// Signature format: 3.0
package android.support.v4.media {

  public final class MediaBrowserCompat {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public android.os.Bundle? getNotifyChildrenChangedOptions();
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface MediaBrowserCompat.MediaItem.Flags {
  }

  public final class MediaDescriptionCompat {
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static final String DESCRIPTION_KEY_MEDIA_URI = "android.support.v4.media.description.MEDIA_URI";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static final String DESCRIPTION_KEY_NULL_BUNDLE_FLAG = "android.support.v4.media.description.NULL_BUNDLE_FLAG";
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface MediaMetadataCompat.BitmapKey {
  }

  public static final class MediaMetadataCompat.Builder {
    ctor @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public MediaMetadataCompat.Builder(android.support.v4.media.MediaMetadataCompat!, int);
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface MediaMetadataCompat.LongKey {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface MediaMetadataCompat.RatingKey {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface MediaMetadataCompat.TextKey {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface RatingCompat.StarStyle {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface RatingCompat.Style {
  }

}

package android.support.v4.media.session {

  public final class MediaControllerCompat {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.os.Bundle? getSessionToken2Bundle();
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_ADD_QUEUE_ITEM = "android.support.v4.media.session.command.ADD_QUEUE_ITEM";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_ADD_QUEUE_ITEM_AT = "android.support.v4.media.session.command.ADD_QUEUE_ITEM_AT";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_ARGUMENT_INDEX = "android.support.v4.media.session.command.ARGUMENT_INDEX";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_ARGUMENT_MEDIA_DESCRIPTION = "android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_GET_EXTRA_BINDER = "android.support.v4.media.session.command.GET_EXTRA_BINDER";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_REMOVE_QUEUE_ITEM = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String COMMAND_REMOVE_QUEUE_ITEM_AT = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM_AT";
  }

  public abstract static class MediaControllerCompat.Callback {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public android.support.v4.media.session.IMediaControllerCallback! getIControllerCallback();
  }

  public class MediaSessionCompat {
    ctor @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public MediaSessionCompat(android.content.Context!, String!, android.os.Bundle!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static void ensureClassLoader(android.os.Bundle?);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public String! getCallingPackage();
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_CAPTIONING_ENABLED = "android.support.v4.media.session.action.ARGUMENT_CAPTIONING_ENABLED";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_EXTRAS = "android.support.v4.media.session.action.ARGUMENT_EXTRAS";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_MEDIA_ID = "android.support.v4.media.session.action.ARGUMENT_MEDIA_ID";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_QUERY = "android.support.v4.media.session.action.ARGUMENT_QUERY";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_RATING = "android.support.v4.media.session.action.ARGUMENT_RATING";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_REPEAT_MODE = "android.support.v4.media.session.action.ARGUMENT_REPEAT_MODE";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_SHUFFLE_MODE = "android.support.v4.media.session.action.ARGUMENT_SHUFFLE_MODE";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_ARGUMENT_URI = "android.support.v4.media.session.action.ARGUMENT_URI";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_PLAY_FROM_URI = "android.support.v4.media.session.action.PLAY_FROM_URI";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_PREPARE = "android.support.v4.media.session.action.PREPARE";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_PREPARE_FROM_MEDIA_ID = "android.support.v4.media.session.action.PREPARE_FROM_MEDIA_ID";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_PREPARE_FROM_SEARCH = "android.support.v4.media.session.action.PREPARE_FROM_SEARCH";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_PREPARE_FROM_URI = "android.support.v4.media.session.action.PREPARE_FROM_URI";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_SET_CAPTIONING_ENABLED = "android.support.v4.media.session.action.SET_CAPTIONING_ENABLED";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_SET_RATING = "android.support.v4.media.session.action.SET_RATING";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_SET_REPEAT_MODE = "android.support.v4.media.session.action.SET_REPEAT_MODE";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String ACTION_SET_SHUFFLE_MODE = "android.support.v4.media.session.action.SET_SHUFFLE_MODE";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String KEY_EXTRA_BINDER = "android.support.v4.media.session.EXTRA_BINDER";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static final String KEY_SESSION_TOKEN2_BUNDLE = "android.support.v4.media.session.SESSION_TOKEN2_BUNDLE";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static final String KEY_TOKEN = "android.support.v4.media.session.TOKEN";
  }

  @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final class MediaSessionCompat.ResultReceiverWrapper {
    ctor public MediaSessionCompat.ResultReceiverWrapper(android.os.ResultReceiver!);
    method public int describeContents();
    method public void writeToParcel(android.os.Parcel!, int);
    field public static final android.os.Parcelable.Creator<android.support.v4.media.session.MediaSessionCompat.ResultReceiverWrapper>! CREATOR;
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface MediaSessionCompat.SessionFlags {
  }

  public static final class MediaSessionCompat.Token {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static android.support.v4.media.session.MediaSessionCompat.Token! fromBundle(android.os.Bundle!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static android.support.v4.media.session.MediaSessionCompat.Token! fromToken(Object!, android.support.v4.media.session.IMediaSession!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.support.v4.media.session.IMediaSession! getExtraBinder();
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.os.Bundle! getSessionToken2Bundle();
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public void setExtraBinder(android.support.v4.media.session.IMediaSession!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public void setSessionToken2Bundle(android.os.Bundle!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.os.Bundle! toBundle();
  }

  public final class PlaybackStateCompat {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public long getCurrentPosition(Long!);
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface PlaybackStateCompat.Actions {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface PlaybackStateCompat.ErrorCode {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface PlaybackStateCompat.MediaKeyAction {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface PlaybackStateCompat.RepeatMode {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface PlaybackStateCompat.ShuffleMode {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface PlaybackStateCompat.State {
  }

}

package androidx.media {

  public class AudioAttributesCompat {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static androidx.media.AudioAttributesCompat! fromBundle(android.os.Bundle!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static void setForceLegacyBehavior(boolean);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.os.Bundle toBundle();
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface AudioAttributesCompat.AttributeContentType {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface AudioAttributesCompat.AttributeUsage {
  }

  @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public final class AudioAttributesCompatParcelizer {
    ctor public AudioAttributesCompatParcelizer();
    method public static androidx.media.AudioAttributesCompat! read(androidx.versionedparcelable.VersionedParcel!);
    method public static void write(androidx.media.AudioAttributesCompat!, androidx.versionedparcelable.VersionedParcel!);
  }

  @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public final class AudioAttributesImplApi21Parcelizer {
    ctor public AudioAttributesImplApi21Parcelizer();
    method public static androidx.media.AudioAttributesImplApi21! read(androidx.versionedparcelable.VersionedParcel!);
    method public static void write(androidx.media.AudioAttributesImplApi21!, androidx.versionedparcelable.VersionedParcel!);
  }

  @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public final class AudioAttributesImplBaseParcelizer {
    ctor public AudioAttributesImplBaseParcelizer();
    method public static androidx.media.AudioAttributesImplBase! read(androidx.versionedparcelable.VersionedParcel!);
    method public static void write(androidx.media.AudioAttributesImplBase!, androidx.versionedparcelable.VersionedParcel!);
  }

  @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public class MediaBrowserCompatUtils {
    method public static boolean areSameOptions(android.os.Bundle!, android.os.Bundle!);
    method public static boolean hasDuplicatedItems(android.os.Bundle!, android.os.Bundle!);
  }

  @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public class MediaBrowserProtocol {
    field public static final int CLIENT_MSG_ADD_SUBSCRIPTION = 3; // 0x3
    field public static final int CLIENT_MSG_CONNECT = 1; // 0x1
    field public static final int CLIENT_MSG_DISCONNECT = 2; // 0x2
    field public static final int CLIENT_MSG_GET_MEDIA_ITEM = 5; // 0x5
    field public static final int CLIENT_MSG_REGISTER_CALLBACK_MESSENGER = 6; // 0x6
    field public static final int CLIENT_MSG_REMOVE_SUBSCRIPTION = 4; // 0x4
    field public static final int CLIENT_MSG_SEARCH = 8; // 0x8
    field public static final int CLIENT_MSG_SEND_CUSTOM_ACTION = 9; // 0x9
    field public static final int CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER = 7; // 0x7
    field public static final int CLIENT_VERSION_1 = 1; // 0x1
    field public static final int CLIENT_VERSION_CURRENT = 1; // 0x1
    field public static final String DATA_CALLBACK_TOKEN = "data_callback_token";
    field public static final String DATA_CALLING_PID = "data_calling_pid";
    field public static final String DATA_CALLING_UID = "data_calling_uid";
    field public static final String DATA_CUSTOM_ACTION = "data_custom_action";
    field public static final String DATA_CUSTOM_ACTION_EXTRAS = "data_custom_action_extras";
    field public static final String DATA_MEDIA_ITEM_ID = "data_media_item_id";
    field public static final String DATA_MEDIA_ITEM_LIST = "data_media_item_list";
    field public static final String DATA_MEDIA_SESSION_TOKEN = "data_media_session_token";
    field public static final String DATA_NOTIFY_CHILDREN_CHANGED_OPTIONS = "data_notify_children_changed_options";
    field public static final String DATA_OPTIONS = "data_options";
    field public static final String DATA_PACKAGE_NAME = "data_package_name";
    field public static final String DATA_RESULT_RECEIVER = "data_result_receiver";
    field public static final String DATA_ROOT_HINTS = "data_root_hints";
    field public static final String DATA_SEARCH_EXTRAS = "data_search_extras";
    field public static final String DATA_SEARCH_QUERY = "data_search_query";
    field public static final String EXTRA_CLIENT_VERSION = "extra_client_version";
    field public static final String EXTRA_MESSENGER_BINDER = "extra_messenger";
    field public static final String EXTRA_SERVICE_VERSION = "extra_service_version";
    field public static final String EXTRA_SESSION_BINDER = "extra_session_binder";
    field public static final int SERVICE_MSG_ON_CONNECT = 1; // 0x1
    field public static final int SERVICE_MSG_ON_CONNECT_FAILED = 2; // 0x2
    field public static final int SERVICE_MSG_ON_LOAD_CHILDREN = 3; // 0x3
    field public static final int SERVICE_VERSION_1 = 1; // 0x1
    field public static final int SERVICE_VERSION_2 = 2; // 0x2
    field public static final int SERVICE_VERSION_CURRENT = 2; // 0x2
  }

  public abstract class MediaBrowserServiceCompat {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public void attachToBaseContext(android.content.Context!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public void notifyChildrenChanged(androidx.media.MediaSessionManager.RemoteUserInfo, String, android.os.Bundle);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public void onSubscribe(String!, android.os.Bundle!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public void onUnsubscribe(String!);
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String KEY_MEDIA_ITEM = "media_item";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final String KEY_SEARCH_RESULTS = "search_results";
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final int RESULT_ERROR = -1; // 0xffffffff
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final int RESULT_OK = 0; // 0x0
    field @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static final int RESULT_PROGRESS_UPDATE = 1; // 0x1
  }

  public static final class MediaSessionManager.RemoteUserInfo {
    ctor @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) @RequiresApi(28) public MediaSessionManager.RemoteUserInfo(android.media.session.MediaSessionManager.RemoteUserInfo!);
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE) @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public static @interface VolumeProviderCompat.ControlType {
  }

}

package androidx.media.app {

  public static class NotificationCompat.DecoratedMediaCustomViewStyle extends androidx.media.app.NotificationCompat.MediaStyle {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.widget.RemoteViews! makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor!);
  }

  public static class NotificationCompat.MediaStyle {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.widget.RemoteViews! makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor!);
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP}) public android.widget.RemoteViews! makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor!);
  }

}

package androidx.media.session {

  public class MediaButtonReceiver {
    method @RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY}) public static android.content.ComponentName! getMediaButtonReceiverComponent(android.content.Context!);
  }

}

