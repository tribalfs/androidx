<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 3.6.0-alpha12" client="gradle" variant="debug" version="3.6.0-alpha12">

    <issue
        id="SdCardPath"
        message="Do not hardcode &quot;/sdcard/&quot;; use `Environment.getExternalStorageDirectory().getPath()` instead"
        errorLine1="    private static final String TEST_VID_STASH = &quot;/sdcard&quot;;"
        errorLine2="                                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"
            line="57"
            column="50"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of androidx.appcompat:appcompat than 1.0.2 is available: 1.1.0"
        errorLine1="    implementation(&quot;androidx.appcompat:appcompat:1.0.2&quot;)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle"
            line="32"
            column="5"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="MediaItem.getMediaId can only be called from within the same library group (groupId=androidx.media2)"
        errorLine1="                    &amp;&amp; TextUtils.equals(currentItem.getMediaId(), mUri.toString())"
        errorLine2="                                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoPlayerActivity.java"
            line="212"
            column="53"/>
    </issue>

    <issue
        id="AllowBackup"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        errorLine1="    &lt;application android:label=&quot;Video View Test&quot;"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="src/main/AndroidManifest.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="AllowBackup"
        message="Should explicitly set `android:allowBackup` to `true` or `false` (it&apos;s `true` by default, and that can have some security implications for the application&apos;s data)"
        errorLine1="    &lt;application android:label=&quot;Video View Test&quot;"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="src/main/AndroidManifest.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="This `AsyncTask` class should be static or leaks might occur (androidx.media2.integration.testapp.VideoSelectorActivity.VideoItemListTask)"
        errorLine1="    private final class VideoItemListTask extends AsyncTask&lt;Void, Void, VideoItemList> {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"
            line="306"
            column="25"/>
    </issue>

    <issue
        id="Overdraw"
        message="Possible overdraw: Root element paints background `#3F51B5` with a theme that also paints a background (inferred theme is `@style/Theme_AppCompat`)"
        errorLine1="    android:background=&quot;#3F51B5&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_player.xml"
            line="25"
            column="5"/>
    </issue>

    <issue
        id="MissingApplicationIcon"
        message="Should explicitly set `android:icon`, there is no default"
        errorLine1="    &lt;application android:label=&quot;Video View Test&quot;"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="src/main/AndroidManifest.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="TextFields"
        message="This text field does not specify an `inputType`"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="54"
            column="6"/>
    </issue>

    <issue
        id="Autofill"
        message="Missing `autofillHints` attribute"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="54"
            column="6"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="Custom view ``MyVideoView`` has `setOnTouchListener` called on it but does not override `performClick`"
        errorLine1="        mVideoView.setOnTouchListener(new View.OnTouchListener() {"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoPlayerActivity.java"
            line="89"
            column="9"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="`onTouch` should call `View#performClick` when a click is detected"
        errorLine1="            public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoPlayerActivity.java"
            line="91"
            column="28"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="`onTouch` should call `View#performClick` when a click is detected"
        errorLine1="            public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoPlayerActivity.java"
            line="107"
            column="28"/>
    </issue>

    <issue
        id="LabelFor"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="54"
            column="6"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;40dp&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_marginLeft=&quot;40dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_player.xml"
            line="56"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;340dp&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_marginLeft=&quot;340dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_player.xml"
            line="68"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="34"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_toLeftOf` with `android:layout_toStartOf=&quot;@id/looping_checkbox&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_toLeftOf=&quot;@id/looping_checkbox&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="43"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="51"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="59"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        message="Consider replacing `android:layout_toLeftOf` with `android:layout_toStartOf=&quot;@id/play_button&quot;` to better support right-to-left layouts"
        errorLine1="        android:layout_toLeftOf=&quot;@id/play_button&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/activity_video_selector.xml"
            line="60"
            column="9"/>
    </issue>

</issues>
