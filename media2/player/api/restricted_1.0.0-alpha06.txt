// Signature format: 3.0
package androidx.media2.player {

  public final class MediaPlayer extends androidx.media2.common.SessionPlayer {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public com.google.common.util.concurrent.ListenableFuture<androidx.media2.common.SessionPlayer.PlayerResult> deselectTrack(androidx.media2.player.MediaPlayer.TrackInfo);
  }









  public abstract static class MediaPlayer.PlayerCallback extends androidx.media2.common.SessionPlayer.PlayerCallback {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public void onSubtitleData(androidx.media2.player.MediaPlayer, androidx.media2.common.MediaItem, androidx.media2.player.SubtitleData);
  }


  public static final class MediaPlayer.TrackInfo {
  }

















  public final class MediaTimestamp {
  }

  public final class PlaybackParams {
  }


  public static final class PlaybackParams.Builder {
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public final class SubtitleData {
    method public byte[] getData();
    method public long getDurationUs();
    method public long getStartTimeUs();
    method public androidx.media2.player.MediaPlayer.TrackInfo getTrackInfo();
    field public static final String MIMETYPE_TEXT_CEA_608 = "text/cea-608";
    field public static final String MIMETYPE_TEXT_CEA_708 = "text/cea-708";
    field public static final String MIMETYPE_TEXT_VTT = "text/vtt";
  }

  public class TimedMetaData {
  }

}

package androidx.media2.player.common {


}

package androidx.media2.player.exoplayer {


}

package androidx.media2.player.subtitle {

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public class Cea708CaptionRenderer extends androidx.media2.player.subtitle.SubtitleController.Renderer {
    ctor public Cea708CaptionRenderer(android.content.Context!);
    method public androidx.media2.player.subtitle.SubtitleTrack! createTrack(android.media.MediaFormat!);
    method public boolean supports(android.media.MediaFormat!);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public class ClosedCaptionRenderer extends androidx.media2.player.subtitle.SubtitleController.Renderer {
    ctor public ClosedCaptionRenderer(android.content.Context!);
    method public androidx.media2.player.subtitle.SubtitleTrack! createTrack(android.media.MediaFormat!);
    method public boolean supports(android.media.MediaFormat!);
  }



  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public class SubtitleController {
    ctor public SubtitleController(android.content.Context!);
    ctor public SubtitleController(android.content.Context!, androidx.media2.player.subtitle.MediaTimeProvider!, androidx.media2.player.subtitle.SubtitleController.Listener!);
    method public androidx.media2.player.subtitle.SubtitleTrack! addTrack(android.media.MediaFormat!);
    method public androidx.media2.player.subtitle.SubtitleTrack! getDefaultTrack();
    method public androidx.media2.player.subtitle.SubtitleTrack! getSelectedTrack();
    method public androidx.media2.player.subtitle.SubtitleTrack[]! getTracks();
    method public boolean hasRendererFor(android.media.MediaFormat!);
    method public void hide();
    method public void registerRenderer(androidx.media2.player.subtitle.SubtitleController.Renderer!);
    method public void reset();
    method public void selectDefaultTrack();
    method public boolean selectTrack(androidx.media2.player.subtitle.SubtitleTrack!);
    method public void setAnchor(androidx.media2.player.subtitle.SubtitleController.Anchor!);
    method public void show();
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static interface SubtitleController.Anchor {
    method public android.os.Looper! getSubtitleLooper();
    method public void setSubtitleWidget(androidx.media2.player.subtitle.SubtitleTrack.RenderingWidget!);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static interface SubtitleController.Listener {
    method public void onSubtitleTrackSelected(androidx.media2.player.subtitle.SubtitleTrack!);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public abstract static class SubtitleController.Renderer {
    ctor public SubtitleController.Renderer();
    method public abstract androidx.media2.player.subtitle.SubtitleTrack! createTrack(android.media.MediaFormat!);
    method public abstract boolean supports(android.media.MediaFormat!);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public abstract class SubtitleTrack implements androidx.media2.player.subtitle.MediaTimeProvider.OnMediaTimeListener {
    ctor public SubtitleTrack(android.media.MediaFormat!);
    method protected boolean addCue(androidx.media2.player.subtitle.SubtitleTrack.Cue!);
    method protected void clearActiveCues();
    method protected void finishedRun(long);
    method public final android.media.MediaFormat! getFormat();
    method public abstract androidx.media2.player.subtitle.SubtitleTrack.RenderingWidget! getRenderingWidget();
    method public int getTrackType();
    method public void hide();
    method public void onData(androidx.media2.player.SubtitleData!);
    method protected abstract void onData(byte[]!, boolean, long);
    method public void onSeek(long);
    method public void onStop();
    method public void onTimedEvent(long);
    method protected void scheduleTimedEvents();
    method public void setRunDiscardTimeMs(long, long);
    method public void setTimeProvider(androidx.media2.player.subtitle.MediaTimeProvider!);
    method public void show();
    method protected void updateActiveCues(boolean, long);
    method public abstract void updateView(java.util.ArrayList<androidx.media2.player.subtitle.SubtitleTrack.Cue>!);
    field public boolean DEBUG;
    field protected android.os.Handler! mHandler;
    field protected androidx.media2.player.subtitle.MediaTimeProvider! mTimeProvider;
    field protected boolean mVisible;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static class SubtitleTrack.Cue {
    ctor public SubtitleTrack.Cue();
    method public void onTime(long);
    field public long mEndTimeMs;
    field public long[]! mInnerTimesMs;
    field public androidx.media2.player.subtitle.SubtitleTrack.Cue! mNextInRun;
    field public long mRunID;
    field public long mStartTimeMs;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static interface SubtitleTrack.RenderingWidget {
    method public void draw(android.graphics.Canvas!);
    method public void onAttachedToWindow();
    method public void onDetachedFromWindow();
    method public void setOnChangedListener(androidx.media2.player.subtitle.SubtitleTrack.RenderingWidget.OnChangedListener!);
    method public void setSize(int, int);
    method public void setVisible(boolean);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP) public static interface SubtitleTrack.RenderingWidget.OnChangedListener {
    method public void onChanged(androidx.media2.player.subtitle.SubtitleTrack.RenderingWidget!);
  }

}

