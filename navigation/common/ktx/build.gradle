/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.SupportLibraryExtension

plugins {
    id("SupportAndroidLibraryPlugin")
    id("org.jetbrains.kotlin.android")
}

android {
    buildTypes {
        debug {
            testCoverageEnabled = false // Breaks Kotlin compiler.
        }
    }

    buildTypes.all {
        consumerProguardFiles 'proguard-rules.pro'
    }
}

dependencies {
    api(project(":navigation:navigation-common"))
    implementation(NAV_SUPPORT_COLLECTIONS)

    api(KOTLIN_STDLIB)
    testImplementation(JUNIT)
    testImplementation(TEST_EXT_JUNIT)
    testImplementation(TEST_CORE)
    testImplementation(TEST_RUNNER)
    testImplementation(TRUTH)
    androidTestImplementation(TEST_EXT_JUNIT)
    androidTestImplementation(TEST_CORE)
    androidTestImplementation(TEST_RUNNER)
    androidTestImplementation(ESPRESSO_CORE)
    androidTestImplementation(TRUTH)
    androidTestImplementation(MOCKITO_CORE, libs.exclude_bytebuddy)
    androidTestImplementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy)
}

supportLibrary {
    name = "Android Navigation Common Kotlin Extensions"
    publish = true
    mavenVersion = LibraryVersions.NAVIGATION
    mavenGroup = LibraryGroups.NAVIGATION
    inceptionYear = "2018"
    description = "Android Navigation-Common-Ktx"
    url = SupportLibraryExtension.ARCHITECTURE_URL
    // TODO useMetalava = true
    // A bug in type parameter bound resolution causes metalava to always fail on validating the API
}
