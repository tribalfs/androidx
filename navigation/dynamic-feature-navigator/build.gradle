/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.AndroidXExtension
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("kotlin-android")
}

android {
    lintOptions {
        fatal("UnknownNullness")
    }
}

dependencies {
    api("androidx.core:core:1.0.1")
    implementation(ANDROIDX_COLLECTION)
    implementation(project(":navigation:navigation-runtime"))
    implementation("com.google.android.play:core:1.6.1")

    testImplementation(ANDROIDX_TEST_CORE)
    testImplementation(ANDROIDX_TEST_EXT_JUNIT)
    testImplementation(ANDROIDX_TEST_RUNNER)
    testImplementation(JUNIT)
    testImplementation(KOTLIN_STDLIB)
    testImplementation(MOCKITO_CORE)
    testImplementation(TRUTH)

    androidTestImplementation(ANDROIDX_TEST_CORE)
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy)
    androidTestImplementation(ESPRESSO_CORE)
    androidTestImplementation(KOTLIN_STDLIB)
    androidTestImplementation(MOCKITO_CORE, libs.exclude_bytebuddy)
    androidTestImplementation(TRUTH)
}

//used by testCompile safe-args-generator
android.libraryVariants.all { variant ->
    def name = variant.name
    def suffix = name.capitalize()
    project.tasks.create(name: "jar${suffix}", type: Jar){
        dependsOn variant.javaCompileProvider.get()
        from variant.javaCompileProvider.get().destinationDir
        destinationDir new File(project.buildDir, "libJar")
    }
}

androidx {
    name = "Android Dynamic Feature Navigation"
    publish = Publish.NONE
    mavenVersion = LibraryVersions.NAVIGATION
    mavenGroup = LibraryGroups.NAVIGATION
    inceptionYear = "2019"
    description = "Android Dynamic Feature Navigation"
    url = AndroidXExtension.ARCHITECTURE_URL
}
