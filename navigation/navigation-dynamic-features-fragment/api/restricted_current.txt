// Signature format: 3.0
package androidx.navigation.dynamicfeatures.fragment {

  @androidx.navigation.Navigator.Name("fragment") public final class DynamicFragmentNavigator extends androidx.navigation.fragment.FragmentNavigator {
    ctor public DynamicFragmentNavigator(android.content.Context, androidx.fragment.app.FragmentManager, int, androidx.navigation.dynamicfeatures.DynamicInstallManager);
  }

  public static final class DynamicFragmentNavigator.Destination extends androidx.navigation.fragment.FragmentNavigator.Destination {
    ctor public DynamicFragmentNavigator.Destination(androidx.navigation.NavigatorProvider);
    ctor public DynamicFragmentNavigator.Destination(androidx.navigation.Navigator<? extends androidx.navigation.fragment.FragmentNavigator.Destination>);
    method public String? getModuleName();
    method public void setModuleName(String?);
  }

  public class DynamicNavHostFragment extends androidx.navigation.fragment.NavHostFragment {
    ctor public DynamicNavHostFragment();
    method protected com.google.android.play.core.splitinstall.SplitInstallManager createSplitInstallManager();
  }

}

package androidx.navigation.dynamicfeatures.fragment.ui {

  public abstract class AbstractProgressFragment extends androidx.fragment.app.Fragment {
    ctor public AbstractProgressFragment();
    ctor public AbstractProgressFragment(int);
    method protected abstract void onCancelled();
    method protected abstract void onException(Exception);
    method protected abstract void onFailed();
    method protected abstract void onProgress(long, long);
    method public static void setArguments(androidx.navigation.dynamicfeatures.fragment.ui.AbstractProgressFragment, int, android.os.Bundle?);
  }


  public final class DefaultProgressFragment extends androidx.navigation.dynamicfeatures.fragment.ui.AbstractProgressFragment {
    ctor public DefaultProgressFragment();
    method protected void onCancelled();
    method protected void onException(Exception);
    method protected void onFailed();
    method protected void onProgress(long, long);
  }

}

