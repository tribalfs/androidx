/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.CompilationTarget
import androidx.build.LibraryGroups
import androidx.build.SupportConfig
import androidx.build.AndroidXExtension
import androidx.build.SdkHelperKt
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("kotlin")
}

dependencies {
    implementation(XPP3)
    implementation(XMLPULL)
    implementation(KOTLIN_STDLIB)

    implementation(JAVAPOET)
    implementation "com.squareup:kotlinpoet:1.6.0"

    testImplementation(JUNIT)
    testImplementation(GOOGLE_COMPILE_TESTING)
    testImplementation fileTree(
            dir: "${SdkHelperKt.getSdkPath(project)}/platforms/$SupportConfig.COMPILE_SDK_VERSION/",
            include : "android.jar"
    )
    testImplementation fileTree(
            dir: "${new File(project(":navigation:navigation-common").buildDir, "libJar")}",
            include : "*.jar"
    )
}

tasks.findByName("test").doFirst {
    // android.jar and xmlpull has the same classes, but android.jar has stubs instead of real
    // implementation, so we move android.jar to end of classpath
    def classpath = it.classpath.getFiles()
    def androidJar = classpath.find { it.name == "android.jar" }
    it.classpath = files(classpath.minus(androidJar).plus(androidJar))
}

tasks.findByName("compileKotlin").dependsOn(":navigation:navigation-common:jarDebug")

androidx {
    name = 'Android Navigation TypeSafe Arguments Generator'
    publish = Publish.SNAPSHOT_AND_RELEASE
    toolingProject = true
    mavenGroup = LibraryGroups.NAVIGATION
    inceptionYear = '2017'
    description = "Android Navigation TypeSafe Arguments Generator"
    compilationTarget = CompilationTarget.HOST
}
