<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.1.0-beta02" type="baseline" client="cli" dependencies="false" name="AGP (7.1.0-beta02)" variant="all" version="7.1.0-beta02">

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 14): `new android.view.View`"
        errorLine1="            super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="            ~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/BaseWrapContentWithAspectRatioTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `java.util.Map#getOrDefault`"
        errorLine1="            } else if (duplicateDiffs.getOrDefault(after[index].id, 0) > 0 &amp;&amp; item.newItem) {"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/recyclerview/widget/DiffUtilTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `java.util.Map#getOrDefault`"
        errorLine1="            duplicateDiffs[it.id] = 1 + duplicateDiffs.getOrDefault(it.id, 1)"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/recyclerview/widget/DiffUtilTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `java.util.Map#getOrDefault`"
        errorLine1="            duplicateDiffs[it.id] = -1 + duplicateDiffs.getOrDefault(it.id, 0)"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/recyclerview/widget/DiffUtilTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 16 (current min is 14): `android.view.View#isScrollContainer`"
        errorLine1="                + &quot;handle it properly&quot;, true, mRecyclerView.isScrollContainer());"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/RecyclerViewBasicTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 17 (current min is 14): `android.view.View#setLayoutDirection`"
        errorLine1="            mRecyclerView.setLayoutDirection(View.LAYOUT_DIRECTION_RTL);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/RecyclerViewFocusTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 14): `new android.widget.FrameLayout`"
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/TestContentView.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 16 (current min is 14): `android.view.View#getMinimumWidth`"
        errorLine1="                            getMinimumWidth()),"
        errorLine2="                            ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/TestedFrameLayout.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 16 (current min is 14): `android.view.View#getMinimumHeight`"
        errorLine1="                            getMinimumHeight()));"
        errorLine2="                            ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/TestedFrameLayout.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `new android.widget.FrameLayout.LayoutParams`"
        errorLine1="            super(source);"
        errorLine2="            ~~~~~">
        <location
            file="src/androidTest/java/androidx/recyclerview/widget/TestedFrameLayout.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        synchronized SyncQueueItem next() {"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/recyclerview/widget/MessageThreadUtil.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        synchronized void sendMessageAtFrontOfQueue(SyncQueueItem item) {"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/recyclerview/widget/MessageThreadUtil.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        synchronized void sendMessage(SyncQueueItem item) {"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/recyclerview/widget/MessageThreadUtil.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        synchronized void removeMessages(int what) {"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/recyclerview/widget/MessageThreadUtil.java"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getHasFixedSize` such that `hasFixedSize` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean hasFixedSize() {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getHasStableIds` such that `hasStableIds` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="        public final boolean hasStableIds() {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `setRecyclable` such that (along with the `isRecyclable` getter) Kotlin code can access it as a property (`recyclable`); see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="        public final void setIsRecyclable(boolean recyclable) {"
        errorLine2="                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onChanged(int position, int count, Object payload) {"
        errorLine2="                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/AdapterListUpdateCallback.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder&lt;T> setMainThreadExecutor(Executor executor) {"
        errorLine2="                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/AsyncDifferConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder&lt;T> setBackgroundThreadExecutor(Executor executor) {"
        errorLine2="                                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/AsyncDifferConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onChanged(int position, int count, Object payload) {"
        errorLine2="                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/BatchingListUpdateCallback.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean animateRemove(final RecyclerView.ViewHolder holder) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean animateAdd(final RecyclerView.ViewHolder holder) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean animateMove(final RecyclerView.ViewHolder holder, int fromX, int fromY,"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean animateChange(RecyclerView.ViewHolder oldHolder, RecyclerView.ViewHolder newHolder,"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean animateChange(RecyclerView.ViewHolder oldHolder, RecyclerView.ViewHolder newHolder,"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void endAnimation(RecyclerView.ViewHolder item) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DividerItemDecoration(Context context, int orientation) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getItemOffsets(Rect outRect, View view, RecyclerView parent,"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getItemOffsets(Rect outRect, View view, RecyclerView parent,"
        errorLine2="                                             ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getItemOffsets(Rect outRect, View view, RecyclerView parent,"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/DividerItemDecoration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridLayoutManager(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridLayoutManager(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                              ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridLayoutManager(Context context, int spanCount) {"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridLayoutManager(Context context, int spanCount,"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getRowCountForAccessibility(RecyclerView.Recycler recycler,"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getColumnCountForAccessibility(RecyclerView.Recycler recycler,"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityNodeInfoForItem(RecyclerView.Recycler recycler,"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state, View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state, View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                      ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state, View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutCompleted(RecyclerView.State state) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsAdded(RecyclerView recyclerView, int positionStart, int itemCount) {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsChanged(RecyclerView recyclerView) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsRemoved(RecyclerView recyclerView, int positionStart, int itemCount) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsUpdated(RecyclerView recyclerView, int positionStart, int itemCount,"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Object payload) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsMoved(RecyclerView recyclerView, int from, int to, int itemCount) {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateDefaultLayoutParams() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean checkLayoutParams(RecyclerView.LayoutParams lp) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSpanSizeLookup(SpanSizeLookup spanSizeLookup) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SpanSizeLookup getSpanSizeLookup() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setMeasuredDimension(Rect childrenBounds, int wSpec, int hSpec) {"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int scrollHorizontallyBy(int dx, RecyclerView.Recycler recycler,"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int scrollVerticallyBy(int dy, RecyclerView.Recycler recycler,"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onFocusSearchFailed(View focused, int direction,"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onFocusSearchFailed(View focused, int direction,"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollRange(RecyclerView.State state) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollRange(RecyclerView.State state) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollOffset(RecyclerView.State state) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollOffset(RecyclerView.State state) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(ViewGroup.MarginLayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(ViewGroup.LayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(RecyclerView.LayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/GridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getItemOffsets(Rect outRect, View view, RecyclerView parent,"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getItemOffsets(Rect outRect, View view, RecyclerView parent,"
        errorLine2="                                             ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getItemOffsets(Rect outRect, View view, RecyclerView parent,"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public ViewHolder chooseDropTarget(@NonNull ViewHolder selected,"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                ViewHolder viewHolder,"
        errorLine2="                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onDraw(Canvas c, RecyclerView recyclerView, View view,"
        errorLine2="                ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onDraw(Canvas c, RecyclerView recyclerView, View view,"
        errorLine2="                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onDraw(Canvas c, RecyclerView recyclerView, View view,"
        errorLine2="                                                     ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onDrawOver(Canvas c, RecyclerView recyclerView, View view,"
        errorLine2="                    ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onDrawOver(Canvas c, RecyclerView recyclerView, View view,"
        errorLine2="                              ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onDrawOver(Canvas c, RecyclerView recyclerView, View view,"
        errorLine2="                                                         ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void clearView(View view);"
        errorLine2="                   ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onSelected(View view);"
        errorLine2="                    ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ItemTouchUIUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public LinearLayoutManager(Context context) {"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public LinearLayoutManager(Context context, @RecyclerView.Orientation int orientation,"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public LinearLayoutManager(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public LinearLayoutManager(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateDefaultLayoutParams() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDetachedFromWindow(RecyclerView view, RecyclerView.Recycler recycler) {"
        errorLine2="                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDetachedFromWindow(RecyclerView view, RecyclerView.Recycler recycler) {"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityEvent(AccessibilityEvent event) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable onSaveInstanceState() {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onRestoreInstanceState(Parcelable state) {"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View findViewByPosition(int position) {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected int getExtraLayoutSpace(RecyclerView.State state) {"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state,"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state,"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public PointF computeScrollVectorForPosition(int targetPosition) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutCompleted(RecyclerView.State state) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int scrollHorizontallyBy(int dx, RecyclerView.Recycler recycler,"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int scrollVerticallyBy(int dy, RecyclerView.Recycler recycler,"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollOffset(RecyclerView.State state) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollOffset(RecyclerView.State state) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollExtent(RecyclerView.State state) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollExtent(RecyclerView.State state) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollRange(RecyclerView.State state) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollRange(RecyclerView.State state) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            LayoutPrefetchRegistry layoutPrefetchRegistry) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void collectAdjacentPrefetchPositions(int dx, int dy, RecyclerView.State state,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            LayoutPrefetchRegistry layoutPrefetchRegistry) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void assertNotInLayoutOrScroll(String message) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onFocusSearchFailed(View focused, int direction,"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onFocusSearchFailed(View focused, int direction,"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SavedState(SavedState other) {"
        errorLine2="                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void writeToParcel(Parcel dest, int flags) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected PointF mTargetVector;"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public LinearSmoothScroller(Context context) {"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onTargetFound(View targetView, RecyclerView.State state, Action action) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onTargetFound(View targetView, RecyclerView.State state, Action action) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onTargetFound(View targetView, RecyclerView.State state, Action action) {"
        errorLine2="                                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onSeekTargetStep(int dx, int dy, RecyclerView.State state, Action action) {"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onSeekTargetStep(int dx, int dy, RecyclerView.State state, Action action) {"
        errorLine2="                                                                              ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected float calculateSpeedPerPixel(DisplayMetrics displayMetrics) {"
        errorLine2="                                           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void updateActionForInterimTarget(Action action) {"
        errorLine2="                                                ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int calculateDyToMakeVisible(View view, int snapPreference) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int calculateDxToMakeVisible(View view, int snapPreference) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSmoothScroller.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] calculateDistanceToFinalSnap("
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int findTargetSnapPosition(RecyclerView.LayoutManager layoutManager, int velocityX,"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View findSnapView(RecyclerView.LayoutManager layoutManager) {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View findSnapView(RecyclerView.LayoutManager layoutManager) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/LinearSnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutManager getLayoutManager() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int getDecoratedStart(View view);"
        errorLine2="                                          ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int getDecoratedEnd(View view);"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int getTransformedEndWithDecoration(View view);"
        errorLine2="                                                        ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int getTransformedStartWithDecoration(View view);"
        errorLine2="                                                          ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int getDecoratedMeasurement(View view);"
        errorLine2="                                                ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int getDecoratedMeasurementInOther(View view);"
        errorLine2="                                                       ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void offsetChild(View view, int offset);"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OrientationHelper createOrientationHelper("
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.LayoutManager layoutManager, @RecyclerView.Orientation int orientation) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OrientationHelper createHorizontalHelper("
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.LayoutManager layoutManager) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OrientationHelper createVerticalHelper(RecyclerView.LayoutManager layoutManager) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OrientationHelper createVerticalHelper(RecyclerView.LayoutManager layoutManager) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/OrientationHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View findSnapView(RecyclerView.LayoutManager layoutManager) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/PagerSnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int findTargetSnapPosition(RecyclerView.LayoutManager layoutManager, int velocityX,"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/PagerSnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getAccessibilityClassName() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Parcelable onSaveInstanceState() {"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onRestoreInstanceState(Parcelable state) {"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void dispatchSaveInstanceState(SparseArray&lt;Parcelable> container) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void dispatchRestoreInstanceState(SparseArray&lt;Parcelable> container) {"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLayoutTransition(LayoutTransition transition) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View focusSearch(View focused, int direction) {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View focusSearch(View focused, int direction) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void requestChildFocus(View child, View focused) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void requestChildFocus(View child, View focused) {"
        errorLine2="                                              ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean requestChildRectangleOnScreen(View child, Rect rect, boolean immediate) {"
        errorLine2="                                                 ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean requestChildRectangleOnScreen(View child, Rect rect, boolean immediate) {"
        errorLine2="                                                             ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addFocusables(ArrayList&lt;View> views, int direction, int focusableMode) {"
        errorLine2="                              ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected boolean onRequestFocusInDescendants(int direction, Rect previouslyFocusedRect) {"
        errorLine2="                                                                 ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onInterceptTouchEvent(MotionEvent e) {"
        errorLine2="                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouchEvent(MotionEvent e) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onGenericMotionEvent(MotionEvent event) {"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void sendAccessibilityEventUnchecked(AccessibilityEvent event) {"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void removeDetachedView(View child, boolean animate) {"
        errorLine2="                                      ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void draw(Canvas c) {"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDraw(Canvas c) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected ViewGroup.LayoutParams generateDefaultLayoutParams() {"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewGroup.LayoutParams generateLayoutParams(AttributeSet attrs) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewGroup.LayoutParams generateLayoutParams(AttributeSet attrs) {"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams p) {"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams p) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewHolder getChildViewHolder(@NonNull View child) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewHolder findViewHolderForItemId(long id) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean drawChild(Canvas canvas, View child, long drawingTime) {"
        errorLine2="                             ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean drawChild(Canvas canvas, View child, long drawingTime) {"
        errorLine2="                                            ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void putRecycledView(ViewHolder scrap) {"
        errorLine2="                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void setMeasuredDimension(Rect childrenBounds, int wSpec, int hSpec) {"
        errorLine2="                                         ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void assertInLayoutOrScroll(String message) {"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void assertNotInLayoutOrScroll(String message) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void collectAdjacentPrefetchPositions(int dx, int dy, State state,"
        errorLine2="                                                                     ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                LayoutPrefetchRegistry layoutPrefetchRegistry) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                LayoutPrefetchRegistry layoutPrefetchRegistry) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void postOnAnimation(Runnable action) {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean removeCallbacks(Runnable action) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onAttachedToWindow(RecyclerView view) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onDetachedFromWindow(RecyclerView view) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onDetachedFromWindow(RecyclerView view, Recycler recycler) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onDetachedFromWindow(RecyclerView view, Recycler recycler) {"
        errorLine2="                                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onLayoutChildren(Recycler recycler, State state) {"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onLayoutChildren(Recycler recycler, State state) {"
        errorLine2="                                                        ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onLayoutCompleted(State state) {"
        errorLine2="                                      ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public abstract LayoutParams generateDefaultLayoutParams();"
        errorLine2="                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean checkLayoutParams(LayoutParams lp) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp) {"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public int scrollHorizontallyBy(int dx, Recycler recycler, State state) {"
        errorLine2="                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public int scrollHorizontallyBy(int dx, Recycler recycler, State state) {"
        errorLine2="                                                                   ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public int scrollVerticallyBy(int dy, Recycler recycler, State state) {"
        errorLine2="                                              ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public int scrollVerticallyBy(int dy, Recycler recycler, State state) {"
        errorLine2="                                                                 ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void smoothScrollToPosition(RecyclerView recyclerView, State state,"
        errorLine2="                                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void smoothScrollToPosition(RecyclerView recyclerView, State state,"
        errorLine2="                                                                      ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void startSmoothScroll(SmoothScroller smoothScroller) {"
        errorLine2="                                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void endAnimation(View view) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addDisappearingView(View child) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addDisappearingView(View child, int index) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addView(View child) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addView(View child, int index) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void removeView(View child) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void attachView(@NonNull View child, int index, LayoutParams lp) {"
        errorLine2="                                                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onRestoreInstanceState(Parcelable state) {"
        errorLine2="                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static Properties getProperties(@NonNull Context context,"
        errorLine2="                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int dyUnconsumed, int[] offsetInWindow) {"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int dyUnconsumed, int[] offsetInWindow, int type) {"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int dyUnconsumed, int[] offsetInWindow, int type, @NonNull int[] consumed) {"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {"
        errorLine2="                                                           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {"
        errorLine2="                                                                           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,"
        errorLine2="                                                           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,"
        errorLine2="                                                                           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(MarginLayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(ViewGroup.LayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(LayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public int getChildPosition(View view) {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public View findViewByPosition(int position) {"
        errorLine2="               ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        protected void onChildAttachedToWindow(View child) {"
        errorLine2="                                               ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void writeToParcel(Parcel dest, int flags) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void put(int resourceId, Object data) {"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean performAccessibilityAction(View host, int action, Bundle args) {"
        errorLine2="                                              ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean performAccessibilityAction(View host, int action, Bundle args) {"
        errorLine2="                                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                  ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                               ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                      ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean performAccessibilityAction(View host, int action, Bundle args) {"
        errorLine2="                                                  ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean performAccessibilityAction(View host, int action, Bundle args) {"
        errorLine2="                                                                         ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/RecyclerViewAccessibilityDelegate.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract boolean animateRemove(RecyclerView.ViewHolder holder);"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract boolean animateAdd(RecyclerView.ViewHolder holder);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract boolean animateMove(RecyclerView.ViewHolder holder, int fromX, int fromY,"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract boolean animateChange(RecyclerView.ViewHolder oldHolder,"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.ViewHolder newHolder, int fromLeft, int fromTop, int toLeft, int toTop);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchRemoveFinished(RecyclerView.ViewHolder item) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchMoveFinished(RecyclerView.ViewHolder item) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchAddFinished(RecyclerView.ViewHolder item) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchChangeFinished(RecyclerView.ViewHolder item, boolean oldItem) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchRemoveStarting(RecyclerView.ViewHolder item) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchMoveStarting(RecyclerView.ViewHolder item) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchAddStarting(RecyclerView.ViewHolder item) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void dispatchChangeStarting(RecyclerView.ViewHolder item, boolean oldItem) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onRemoveStarting(RecyclerView.ViewHolder item) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onRemoveFinished(RecyclerView.ViewHolder item) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onAddStarting(RecyclerView.ViewHolder item) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onAddFinished(RecyclerView.ViewHolder item) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onMoveStarting(RecyclerView.ViewHolder item) {"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onMoveFinished(RecyclerView.ViewHolder item) {"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onChangeStarting(RecyclerView.ViewHolder item, boolean oldItem) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onChangeFinished(RecyclerView.ViewHolder item, boolean oldItem) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SimpleItemAnimator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] calculateScrollDistance(int velocityX, int velocityY) {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract View findSnapView(RecyclerView.LayoutManager layoutManager);"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract int findTargetSnapPosition(RecyclerView.LayoutManager layoutManager, int velocityX,"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SnapHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onChanged(int position, int count, Object payload) {"
        errorLine2="                                                       ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SortedList.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public BatchedCallback(Callback&lt;T2> wrappedCallback) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SortedList.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onChanged(int position, int count, Object payload) {"
        errorLine2="                                                       ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SortedList.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SortedListAdapterCallback(RecyclerView.Adapter adapter) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SortedListAdapterCallback.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onChanged(int position, int count, Object payload) {"
        errorLine2="                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/SortedListAdapterCallback.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public StaggeredGridLayoutManager(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public StaggeredGridLayoutManager(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDetachedFromWindow(RecyclerView view, RecyclerView.Recycler recycler) {"
        errorLine2="                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onDetachedFromWindow(RecyclerView view, RecyclerView.Recycler recycler) {"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void assertNotInLayoutOrScroll(String message) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setMeasuredDimension(Rect childrenBounds, int wSpec, int hSpec) {"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutCompleted(RecyclerView.State state) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findFirstVisibleItemPositions(int[] into) {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findFirstVisibleItemPositions(int[] into) {"
        errorLine2="                                               ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findFirstCompletelyVisibleItemPositions(int[] into) {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findFirstCompletelyVisibleItemPositions(int[] into) {"
        errorLine2="                                                         ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findLastVisibleItemPositions(int[] into) {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findLastVisibleItemPositions(int[] into) {"
        errorLine2="                                              ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findLastCompletelyVisibleItemPositions(int[] into) {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int[] findLastCompletelyVisibleItemPositions(int[] into) {"
        errorLine2="                                                        ~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollOffset(RecyclerView.State state) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollOffset(RecyclerView.State state) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollExtent(RecyclerView.State state) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollExtent(RecyclerView.State state) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeHorizontalScrollRange(RecyclerView.State state) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int computeVerticalScrollRange(RecyclerView.State state) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onRestoreInstanceState(Parcelable state) {"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable onSaveInstanceState() {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityEvent(AccessibilityEvent event) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsRemoved(RecyclerView recyclerView, int positionStart, int itemCount) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsAdded(RecyclerView recyclerView, int positionStart, int itemCount) {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsChanged(RecyclerView recyclerView) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsMoved(RecyclerView recyclerView, int from, int to, int itemCount) {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemsUpdated(RecyclerView recyclerView, int positionStart, int itemCount,"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Object payload) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int scrollHorizontallyBy(int dx, RecyclerView.Recycler recycler,"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int scrollVerticallyBy(int dy, RecyclerView.Recycler recycler,"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public PointF computeScrollVectorForPosition(int targetPosition) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state,"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state,"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void collectAdjacentPrefetchPositions(int dx, int dy, RecyclerView.State state,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            LayoutPrefetchRegistry layoutPrefetchRegistry) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateDefaultLayoutParams() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RecyclerView.LayoutParams generateLayoutParams(ViewGroup.LayoutParams lp) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean checkLayoutParams(RecyclerView.LayoutParams lp) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onFocusSearchFailed(View focused, int direction, RecyclerView.Recycler recycler,"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onFocusSearchFailed(View focused, int direction, RecyclerView.Recycler recycler,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RecyclerView.State state) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(Context c, AttributeSet attrs) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(ViewGroup.MarginLayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(ViewGroup.LayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public LayoutParams(RecyclerView.LayoutParams source) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SavedState(SavedState other) {"
        errorLine2="                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void writeToParcel(Parcel dest, int flags) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/StaggeredGridLayoutManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void addTile(int generation, TileList.Tile&lt;T> tile);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ThreadUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void recycleTile(TileList.Tile&lt;T> tile);"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/ThreadUtil.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Tile(Class&lt;T> klass, int size) {"
        errorLine2="                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/recyclerview/widget/TileList.java"/>
    </issue>

</issues>
