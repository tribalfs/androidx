<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.3.0-alpha07" type="baseline" client="gradle" dependencies="false" name="AGP (7.3.0-alpha07)" variant="all" version="7.3.0-alpha07">

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `new java.lang.AssertionError`"
        errorLine1="            throw new AssertionError(&quot;interrupted&quot;, e);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/integration/testapp/test/QueryTransactionTest.java"
            line="290"
            column="19"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `new java.lang.AssertionError`"
        errorLine1="            throw new AssertionError(&quot;drain timed out&quot;, e);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/integration/testapp/test/QueryTransactionTest.java"
            line="292"
            column="19"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `new java.lang.AssertionError`"
        errorLine1="            throw new AssertionError(&quot;interrupted&quot;, e);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/integration/testapp/test/QueryTransactionTest.java"
            line="327"
            column="19"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `new java.lang.AssertionError`"
        errorLine1="            throw new AssertionError(&quot;execution error&quot;, e);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/integration/testapp/test/QueryTransactionTest.java"
            line="329"
            column="19"/>
    </issue>

    <issue
        id="MissingTestSizeAnnotation"
        message="Missing test size annotation"
        errorLine1="    public void abstractDao() {"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/integration/testapp/test/DefaultDaoMethodsTest.java"
            line="117"
            column="17"/>
    </issue>

    <issue
        id="MissingTestSizeAnnotation"
        message="Missing test size annotation"
        errorLine1="    public void interfaceDao() {"
        errorLine2="                ~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/integration/testapp/test/DefaultDaoMethodsTest.java"
            line="133"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mDatabase` of class `SampleDatabaseService` requires synthetic accessor"
        errorLine1="            mDatabase.getCustomerDao().insert(customer);"
        errorLine2="            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/SampleDatabaseService.java"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mDatabase` of class `SampleDatabaseService` requires synthetic accessor"
        errorLine1="            final LiveData&lt;List&lt;Customer>> customers = mDatabase.getCustomerDao().all();"
        errorLine2="                                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/SampleDatabaseService.java"
            line="73"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Customer.java"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setName(String name) {"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Customer.java"
            line="49"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getLastName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Customer.java"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setLastName(String lastName) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Customer.java"
            line="57"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insert(Customer customer);"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/CustomerDao.java"
            line="37"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insertAll(Customer[] customers);"
        errorLine2="                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/CustomerDao.java"
            line="44"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    LiveData&lt;List&lt;Customer>> all();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/CustomerDao.java"
            line="56"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Description(int productId, String text) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Description.java"
            line="32"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getText() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Description.java"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Product(int id, String name) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Product.java"
            line="38"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Product.java"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setName(String name) {"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/Product.java"
            line="55"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insert(Product product);"
        errorLine2="                ~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/ProductDao.java"
            line="35"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void addReview(Review review);"
        errorLine2="                   ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/ProductDao.java"
            line="41"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    List&lt;Review> getProductReviews(int productId);"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/ProductDao.java"
            line="47"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void addDescription(Description description);"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/ProductFtsDao.java"
            line="35"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    List&lt;Product> getProductsWithDescription(String query);"
        errorLine2="    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/ProductFtsDao.java"
            line="42"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    List&lt;Product> getProductsWithDescription(String query);"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/ProductFtsDao.java"
            line="42"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract CustomerDao getCustomerDao();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/SampleDatabase.java"
            line="31"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract ProductDao getProductDao();"
        errorLine2="                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/SampleDatabase.java"
            line="36"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Intent intentFor(Context context, String databaseName) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/SampleDatabaseService.java"
            line="99"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Intent intentFor(Context context, String databaseName) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/SampleDatabaseService.java"
            line="99"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Intent intentFor(Context context, String databaseName) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/SampleDatabaseService.java"
            line="99"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract ProductFtsDao getProductDao();"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/integration/testapp/database/SampleFtsDatabase.java"
            line="31"
            column="21"/>
    </issue>

</issues>
