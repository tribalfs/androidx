<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.3.0-alpha07" type="baseline" client="gradle" dependencies="false" name="AGP (7.3.0-alpha07)" variant="all" version="7.3.0-alpha07">

    <issue
        id="KotlinNullnessAnnotation"
        message="Do not use `@NonNull` in Kotlin; the nullability is determined by the Kotlin type `CancellationSignal?` ending with `?` which declares it nullable, contradicting the annotation"
        errorLine1="        @NonNull cancellationSignal: CancellationSignal?"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/main/java/androidx/room/QueryInterceptorDatabase.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperFactoryTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperFactoryTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperFactoryTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperFactoryTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperFactoryTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperFactoryTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="                .writableDatabase.query(&quot;select * from nonexistanttable&quot;)"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="                .writableDatabase.query(&quot;select * from nonexistanttable&quot;)"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase.execSQL(&quot;create table user (idk int)&quot;)"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase.execSQL(&quot;create table user (idk int)&quot;)"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.query(&quot;select * from user&quot;)"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.query(&quot;select * from user&quot;)"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase.beginTransaction()"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase.beginTransaction()"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase.endTransaction()"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase.endTransaction()"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 16): `getWritableDatabase`"
        errorLine1="        assertThat(autoClosingRoomOpenHelper.writableDatabase.isWriteAheadLoggingEnabled).isTrue()"
        errorLine2="                                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 16): `getWritableDatabase`"
        errorLine1="        assertThat(autoClosingRoomOpenHelper.writableDatabase.isWriteAheadLoggingEnabled).isTrue()"
        errorLine2="                                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 16): `getWritableDatabase`"
        errorLine1="        assertThat(autoClosingRoomOpenHelper.writableDatabase.isWriteAheadLoggingEnabled).isTrue()"
        errorLine2="                                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 16): `getWritableDatabase`"
        errorLine1="        assertThat(autoClosingRoomOpenHelper.writableDatabase.isWriteAheadLoggingEnabled).isTrue()"
        errorLine2="                                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.enableWriteAheadLogging()"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.enableWriteAheadLogging()"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 16 (current min is 14): `disableWriteAheadLogging`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.disableWriteAheadLogging()"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.disableWriteAheadLogging()"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="            autoClosingRoomOpenHelper.writableDatabase.disableWriteAheadLogging()"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 24 (current min is 14): `getWritableDatabase`"
        errorLine1="        val db = autoClosingRoomOpenHelper.writableDatabase"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/room/AutoClosingRoomOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 16 (current min is 14): `WRITE_AHEAD_LOGGING`"
        errorLine1="                .setJournalMode(RoomDatabase.JournalMode.WRITE_AHEAD_LOGGING).build();"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/room/BuilderTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 16 (current min is 14): `WRITE_AHEAD_LOGGING`"
        errorLine1="        assertThat(config.journalMode, is(RoomDatabase.JournalMode.WRITE_AHEAD_LOGGING));"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/room/BuilderTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 14): `java.util.Locale#forLanguageTag`"
        errorLine1="        Locale.setDefault(Locale.forLanguageTag(&quot;tr-TR&quot;));"
        errorLine2="                                 ~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/room/InvalidationTrackerTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 14): `java.lang.Process#waitFor`"
        errorLine1="                val exited = it.waitFor(5, TimeUnit.SECONDS)"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/test/java/androidx/room/SQLiteCopyOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 14): `java.lang.ProcessBuilder#redirectOutput`"
        errorLine1="            .redirectOutput(ProcessBuilder.Redirect.INHERIT)"
        errorLine2="             ~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/room/SQLiteCopyOpenHelperTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Field requires API level 26 (current min is 14): `java.lang.ProcessBuilder.Redirect#INHERIT`"
        errorLine1="            .redirectOutput(ProcessBuilder.Redirect.INHERIT)"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/room/SQLiteCopyOpenHelperTest.kt"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @Override"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/room/SQLiteCopyOpenHelper.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @Override"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/room/SQLiteCopyOpenHelper.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @Override"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/room/SQLiteCopyOpenHelper.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @Override"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/room/TransactionExecutor.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @SuppressWarnings(&quot;WeakerAccess&quot;)"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/room/TransactionExecutor.java"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class is missing private constructor"
        errorLine1="public class Room {"
        errorLine2="             ~~~~">
        <location
            file="src/main/java/androidx/room/Room.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with&#xA;&apos;@androidx.room.ExperimentalRoomApi&apos; or &apos;@OptIn(markerClass = androidx.room.ExperimentalRoomApi.class)&apos;"
        errorLine1="                MultiInstanceInvalidationService.class) : null,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/DatabaseConfiguration.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with&#xA;&apos;@androidx.room.ExperimentalRoomApi&apos; or &apos;@OptIn(markerClass = androidx.room.ExperimentalRoomApi.class)&apos;"
        errorLine1="                    MultiInstanceInvalidationService.class) : null;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomDatabase.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;sqliteOpenHelperFactory&quot;, in androidx.room.DatabaseConfiguration.DatabaseConfiguration) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @Nullable Set&lt;Integer> migrationNotRequiredFrom) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/DatabaseConfiguration.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;sqliteOpenHelperFactory&quot;, in androidx.room.DatabaseConfiguration.DatabaseConfiguration) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @Nullable Set&lt;Integer> migrationNotRequiredFrom) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/DatabaseConfiguration.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;sqliteOpenHelperFactory&quot;, in androidx.room.DatabaseConfiguration.DatabaseConfiguration) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @Nullable File copyFromFile) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/DatabaseConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EntityDeletionOrUpdateAdapter(RoomDatabase database) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityDeletionOrUpdateAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected abstract String createQuery();"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityDeletionOrUpdateAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected abstract void bind(SupportSQLiteStatement statement, T entity);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityDeletionOrUpdateAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final int handleMultiple(Iterable&lt;? extends T> entities) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityDeletionOrUpdateAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final int handleMultiple(T[] entities) {"
        errorLine2="                                    ~~~">
        <location
            file="src/main/java/androidx/room/EntityDeletionOrUpdateAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EntityInsertionAdapter(RoomDatabase database) {"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected abstract void bind(SupportSQLiteStatement statement, T entity);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final void insert(T[] entities) {"
        errorLine2="                             ~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final void insert(Iterable&lt;? extends T> entities) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final long[] insertAndReturnIdsArray(Collection&lt;? extends T> entities) {"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final long[] insertAndReturnIdsArray(Collection&lt;? extends T> entities) {"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final long[] insertAndReturnIdsArray(T[] entities) {"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final long[] insertAndReturnIdsArray(T[] entities) {"
        errorLine2="                                                ~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final Long[] insertAndReturnIdsArrayBox(Collection&lt;? extends T> entities) {"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final Long[] insertAndReturnIdsArrayBox(Collection&lt;? extends T> entities) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final Long[] insertAndReturnIdsArrayBox(T[] entities) {"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final Long[] insertAndReturnIdsArrayBox(T[] entities) {"
        errorLine2="                                                   ~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final List&lt;Long> insertAndReturnIdsList(T[] entities) {"
        errorLine2="                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final List&lt;Long> insertAndReturnIdsList(T[] entities) {"
        errorLine2="                                                   ~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final List&lt;Long> insertAndReturnIdsList(Collection&lt;? extends T> entities) {"
        errorLine2="                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final List&lt;Long> insertAndReturnIdsList(Collection&lt;? extends T> entities) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/EntityInsertionAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public InvalidationTracker(RoomDatabase database, String... tableNames) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public InvalidationTracker(RoomDatabase database, String... tableNames) {"
        errorLine2="                                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public InvalidationTracker(RoomDatabase database, Map&lt;String, String> shadowTablesMap,"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public InvalidationTracker(RoomDatabase database, Map&lt;String, String> shadowTablesMap,"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Map&lt;String, Set&lt;String>> viewTables, String... tableNames) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Map&lt;String, Set&lt;String>> viewTables, String... tableNames) {"
        errorLine2="                                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void addWeakObserver(Observer observer) {"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void notifyObserversByTableNames(String... tables) {"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;T> LiveData&lt;T> createLiveData(String[] tableNames, boolean inTransaction,"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;T> LiveData&lt;T> createLiveData(String[] tableNames, boolean inTransaction,"
        errorLine2="                                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Callable&lt;T> computeFunction) {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected Observer(@NonNull String firstTable, String... rest) {"
        errorLine2="                                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/InvalidationTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected abstract SupportSQLiteOpenHelper createOpenHelper(DatabaseConfiguration config);"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SupportSQLiteStatement compileStatement(@NonNull String sql) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Builder&lt;T> fallbackToDestructiveMigrationFrom(int... startVersions) {"
        errorLine2="                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onConfigure(SupportSQLiteDatabase db) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onCreate(SupportSQLiteDatabase db) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onUpgrade(SupportSQLiteDatabase db, int oldVersion, int newVersion) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onDowngrade(SupportSQLiteDatabase db, int oldVersion, int newVersion) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onOpen(SupportSQLiteDatabase db) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected abstract void dropAllTables(SupportSQLiteDatabase database);"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected abstract void createAllTables(SupportSQLiteDatabase database);"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected abstract void onOpen(SupportSQLiteDatabase database);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected abstract void onCreate(SupportSQLiteDatabase database);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected void onPreMigrate(SupportSQLiteDatabase database) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected void onPostMigrate(SupportSQLiteDatabase database) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomOpenHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static RoomSQLiteQuery copyFrom(SupportSQLiteQuery supportSQLiteQuery) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static RoomSQLiteQuery copyFrom(SupportSQLiteQuery supportSQLiteQuery) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static RoomSQLiteQuery acquire(String query, int argumentCount) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static RoomSQLiteQuery acquire(String query, int argumentCount) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getSql() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void bindTo(SupportSQLiteProgram program) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void bindString(int index, String value) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void bindBlob(int index, byte[] value) {"
        errorLine2="                                    ~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void copyArgumentsFrom(RoomSQLiteQuery other) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/RoomSQLiteQuery.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SharedSQLiteStatement(RoomDatabase database) {"
        errorLine2="                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/SharedSQLiteStatement.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected abstract String createQuery();"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/room/SharedSQLiteStatement.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SupportSQLiteStatement acquire() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/SharedSQLiteStatement.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void release(SupportSQLiteStatement statement) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/room/SharedSQLiteStatement.java"/>
    </issue>

</issues>
