<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-alpha15" client="gradle" variant="debug" version="4.2.0-alpha15">

    <issue
        id="InlinedApi"
        message="Field requires API level 21 (current min is 19): `android.content.Context#APPWIDGET_SERVICE`"
        errorLine1="                Context.APPWIDGET_SERVICE);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="65"
            column="17"/>
    </issue>

    <issue
        id="AllowBackup"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        errorLine1="    &lt;application"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="src/main/AndroidManifest.xml"
            line="21"
            column="6"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.style.AppTheme_NoActionBar` appears to be unused"
        errorLine1="    &lt;style name=&quot;AppTheme.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/styles.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.style.AppTheme_AppBarOverlay` appears to be unused"
        errorLine1="    &lt;style name=&quot;AppTheme.AppBarOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Dark.ActionBar&quot;/>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/styles.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.style.AppTheme_PopupOverlay` appears to be unused"
        errorLine1="    &lt;style name=&quot;AppTheme.PopupOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Light&quot;/>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/styles.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="ButtonStyle"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        errorLine1="        &lt;Button android:id=&quot;@+id/sub&quot;"
        errorLine2="         ~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="37"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        errorLine1="        &lt;Button android:id=&quot;@+id/add&quot;"
        errorLine2="         ~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="43"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        errorLine1="        &lt;Button android:id=&quot;@+id/reset&quot;"
        errorLine2="         ~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="49"
            column="10"/>
    </issue>

    <issue
        id="HardcodedText"
        message="Hardcoded string &quot;Def Text&quot;, should use `@string` resource"
        errorLine1="              android:text=&quot;Def Text&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="28"
            column="15"/>
    </issue>

    <issue
        id="HardcodedText"
        message="Hardcoded string &quot;-&quot;, should use `@string` resource"
        errorLine1="                android:text=&quot;-&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="41"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        message="Hardcoded string &quot;+&quot;, should use `@string` resource"
        errorLine1="                android:text=&quot;+&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="47"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        message="Hardcoded string &quot;Reset&quot;, should use `@string` resource"
        errorLine1="                android:text=&quot;Reset&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/app_item.xml"
            line="53"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="34"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="34"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {"
        errorLine2="                                                                             ~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="34"
            column="78"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteViews createRemoteViews(Context context, int[] ids, int value) {"
        errorLine2="           ~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteViews createRemoteViews(Context context, int[] ids, int value) {"
        errorLine2="                                         ~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="43"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteViews createRemoteViews(Context context, int[] ids, int value) {"
        errorLine2="                                                          ~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="43"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteCallback setValue(Context context, int[] ids, int value) {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteCallback setValue(Context context, int[] ids, int value) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="62"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteCallback setValue(Context context, int[] ids, int value) {"
        errorLine2="                                                    ~~~~~">
        <location
            file="src/main/java/com/example/androidx/remotecallback/demos/RemoteCallbackProvider.java"
            line="62"
            column="53"/>
    </issue>

</issues>
