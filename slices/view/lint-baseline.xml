<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-alpha16" client="gradle" variant="debug" version="4.2.0-alpha16">

    <issue
        id="ObsoleteLintCustomCheck"
        message="Lint found an issue registry (`androidx.annotation.experimental.lint.ExperimentalIssueRegistry`) which did not specify the Lint API version it was compiled with.&#xA;&#xA;**This means that the lint checks are likely not compatible.**&#xA;&#xA;If you are the author of this lint check, make your lint `IssueRegistry` class contain&#xA;  override val api: Int = com.android.tools.lint.detector.api.CURRENT_API&#xA;or from Java,&#xA;  @Override public int getApi() { return com.android.tools.lint.detector.api.ApiKt.CURRENT_API; }&#xA;&#xA;If you are just using lint checks from a third party library you have no control over, you can disable these lint checks (if they misbehave) like this:&#xA;&#xA;    android {&#xA;        lintOptions {&#xA;            disable &quot;UnsafeExperimentalUsageError&quot;,&#xA;                    &quot;UnsafeExperimentalUsageWarning&quot;&#xA;        }&#xA;    }&#xA;">
        <location
            file="../../../../../.gradle/caches/transforms-2/files-2.1/195daf927cbe5fbbdf66969c5d719d67/annotation-experimental-1.0.0/jars/lint.jar"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_REMOTE_INPUT`"
        errorLine1="            final SliceItem input = SliceQuery.find(sliceItem, FORMAT_REMOTE_INPUT);"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ActionRow.java"
            line="124"
            column="64"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="            final SliceItem image = SliceQuery.find(sliceItem, FORMAT_IMAGE);"
        errorLine2="                                                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ActionRow.java"
            line="125"
            column="64"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 21): `android.app.slice.Slice#HINT_NO_TINT`"
        errorLine1="            boolean tint = !image.hasHint(HINT_NO_TINT);"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ActionRow.java"
            line="162"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SEE_MORE`"
        errorLine1="        mSeeMoreItem = SliceQuery.find(gridItem, null, HINT_SEE_MORE, null);"
        errorLine2="                                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="84"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="        String[] hints = new String[] {HINT_SHORTCUT, HINT_TITLE};"
        errorLine2="                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="91"
            column="40"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="        String[] hints = new String[] {HINT_SHORTCUT, HINT_TITLE};"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="91"
            column="55"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        mPrimaryAction = SliceQuery.find(gridItem, FORMAT_SLICE, hints,"
        errorLine2="                                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="92"
            column="52"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="                new String[] {HINT_ACTIONS} /* nonHints */);"
        errorLine2="                              ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="93"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SEE_MORE`"
        errorLine1="            boolean containsSeeMore = SliceQuery.find(item, null, HINT_SEE_MORE, null) != null;"
        errorLine2="                                                                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="214"
            column="67"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_KEYWORDS`"
        errorLine1="                    || item.hasAnyHints(HINT_SHORTCUT, HINT_SEE_MORE, HINT_KEYWORDS, HINT_TTL,"
        errorLine2="                                                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="216"
            column="71"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SEE_MORE`"
        errorLine1="                    || item.hasAnyHints(HINT_SHORTCUT, HINT_SEE_MORE, HINT_KEYWORDS, HINT_TTL,"
        errorLine2="                                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="216"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="                    || item.hasAnyHints(HINT_SHORTCUT, HINT_SEE_MORE, HINT_KEYWORDS, HINT_TTL,"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="216"
            column="41"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="                    || item.hasAnyHints(HINT_SHORTCUT, HINT_SEE_MORE, HINT_KEYWORDS, HINT_TTL,"
        errorLine2="                                                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="216"
            column="86"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="                    HINT_LAST_UPDATED, HINT_OVERLAY);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="217"
            column="21"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_CONTENT_DESCRIPTION`"
        errorLine1="            boolean isNonCellContent = SUBTYPE_CONTENT_DESCRIPTION.equals(cellItem.getSubType())"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="381"
            column="40"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_KEYWORDS`"
        errorLine1="                    || cellItem.hasAnyHints(HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED);"
        errorLine2="                                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="382"
            column="45"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="                    || cellItem.hasAnyHints(HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED);"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="382"
            column="70"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="                    || cellItem.hasAnyHints(HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED);"
        errorLine2="                                                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="382"
            column="60"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="                    &amp;&amp; (FORMAT_TEXT.equals(format)"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="384"
            column="25"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="                    || FORMAT_LONG.equals(format)"
        errorLine2="                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="385"
            column="24"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="                    || FORMAT_IMAGE.equals(format));"
        errorLine2="                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="386"
            column="24"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="            return mCellItems.size() == 1 &amp;&amp; FORMAT_IMAGE.equals(mCellItems.get(0).getFormat());"
        errorLine2="                                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="400"
            column="46"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LARGE`"
        errorLine1="        boolean isTitle = SliceQuery.hasAnyHints(item, HINT_LARGE, HINT_TITLE);"
        errorLine2="                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="453"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="        boolean isTitle = SliceQuery.hasAnyHints(item, HINT_LARGE, HINT_TITLE);"
        errorLine2="                                                                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="453"
            column="68"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_NO_TINT`"
        errorLine1="            boolean isIcon = !item.hasHint(HINT_NO_TINT);"
        errorLine2="                                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="509"
            column="44"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="        SliceItem dateTimeItem = SliceQuery.findSubtype(pickerItem, FORMAT_LONG,"
        errorLine2="                                                                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="546"
            column="69"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_MILLIS`"
        errorLine1="                SUBTYPE_MILLIS);"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="547"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="        SliceItem titleItem = SliceQuery.find(pickerItem, FORMAT_TEXT, HINT_TITLE,"
        errorLine2="                                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="560"
            column="72"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="        SliceItem titleItem = SliceQuery.find(pickerItem, FORMAT_TEXT, HINT_TITLE,"
        errorLine2="                                                          ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="560"
            column="59"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_RANGE_VALUE`"
        errorLine1="                                    .putExtra(EXTRA_RANGE_VALUE, date.getTime()));"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="626"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_RANGE_VALUE`"
        errorLine1="                                    .putExtra(EXTRA_RANGE_VALUE, time.getTime()));"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="660"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                    FORMAT_ACTION, (String) null, null);"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="717"
            column="21"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="            boolean isNonRowContent = child.hasAnyHints(HINT_ACTIONS, HINT_SEE_MORE, HINT_KEYWORDS,"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="101"
            column="57"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_KEYWORDS`"
        errorLine1="            boolean isNonRowContent = child.hasAnyHints(HINT_ACTIONS, HINT_SEE_MORE, HINT_KEYWORDS,"
        errorLine2="                                                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="101"
            column="86"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SEE_MORE`"
        errorLine1="            boolean isNonRowContent = child.hasAnyHints(HINT_ACTIONS, HINT_SEE_MORE, HINT_KEYWORDS,"
        errorLine2="                                                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="101"
            column="71"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="                    HINT_TTL, HINT_LAST_UPDATED);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="102"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="                    HINT_TTL, HINT_LAST_UPDATED);"
        errorLine2="                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="102"
            column="21"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="            String[] hints = new String[]{HINT_SHORTCUT, HINT_TITLE};"
        errorLine2="                                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="236"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="            String[] hints = new String[]{HINT_SHORTCUT, HINT_TITLE};"
        errorLine2="                                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="236"
            column="58"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="            action = SliceQuery.find(mSliceItem, FORMAT_ACTION, hints, null);"
        errorLine2="                                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="237"
            column="50"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="            action = SliceQuery.find(mSliceItem, FORMAT_ACTION, (String) null, null);"
        errorLine2="                                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="240"
            column="50"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="        String[] nonHints = new String[] {HINT_LIST_ITEM, HINT_SHORTCUT, HINT_ACTIONS,"
        errorLine2="                                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="301"
            column="74"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LIST_ITEM`"
        errorLine1="        String[] nonHints = new String[] {HINT_LIST_ITEM, HINT_SHORTCUT, HINT_ACTIONS,"
        errorLine2="                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="301"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="        String[] nonHints = new String[] {HINT_LIST_ITEM, HINT_SHORTCUT, HINT_ACTIONS,"
        errorLine2="                                                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="301"
            column="59"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_HORIZONTAL`"
        errorLine1="                HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED, HINT_HORIZONTAL, HINT_SELECTION_OPTION};"
        errorLine2="                                                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="302"
            column="61"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_KEYWORDS`"
        errorLine1="                HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED, HINT_HORIZONTAL, HINT_SELECTION_OPTION};"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="302"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="                HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED, HINT_HORIZONTAL, HINT_SELECTION_OPTION};"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="302"
            column="42"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="                HINT_KEYWORDS, HINT_TTL, HINT_LAST_UPDATED, HINT_HORIZONTAL, HINT_SELECTION_OPTION};"
        errorLine2="                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="302"
            column="32"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        SliceItem header = SliceQuery.find(slice, FORMAT_SLICE, null, nonHints);"
        errorLine2="                                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="303"
            column="51"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SEE_MORE`"
        errorLine1="                new String[] {HINT_SEE_MORE}, null);"
        errorLine2="                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="313"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="            SliceItem item = SliceQuery.find(sliceItem, FORMAT_TEXT, (String) null, null);"
        errorLine2="                                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="333"
            column="57"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_SOURCE`"
        errorLine1="        SliceItem source = SliceQuery.findSubtype(slice, FORMAT_IMAGE, SUBTYPE_SOURCE);"
        errorLine2="                                                                       ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/MessageView.java"
            line="75"
            column="72"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="        SliceItem source = SliceQuery.findSubtype(slice, FORMAT_IMAGE, SUBTYPE_SOURCE);"
        errorLine2="                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/MessageView.java"
            line="75"
            column="58"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="        List&lt;SliceItem> items = SliceQuery.findAll(slice, FORMAT_TEXT);"
        errorLine2="                                                          ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/MessageView.java"
            line="90"
            column="59"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_RANGE`"
        errorLine1="                    mRange = SliceQuery.findSubtype(rowSlice, FORMAT_ACTION, SUBTYPE_RANGE);"
        errorLine2="                                                                             ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="133"
            column="78"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                    mRange = SliceQuery.findSubtype(rowSlice, FORMAT_ACTION, SUBTYPE_RANGE);"
        errorLine2="                                                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="133"
            column="63"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="                    &amp;&amp; FORMAT_LONG.equals(mStartItem.getFormat());"
        errorLine2="                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="179"
            column="24"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                boolean isAction = SliceQuery.find(item, FORMAT_ACTION) != null;"
        errorLine2="                                                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="182"
            column="58"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="        List&lt;SliceItem> possibleStartItems = SliceQuery.findAll(rowSlice, null, HINT_TITLE, null);"
        errorLine2="                                                                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="210"
            column="81"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="        String[] hints = new String[] {HINT_SHORTCUT, HINT_TITLE};"
        errorLine2="                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="224"
            column="40"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="        String[] hints = new String[] {HINT_SHORTCUT, HINT_TITLE};"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="224"
            column="55"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        List&lt;SliceItem> possiblePrimaries = SliceQuery.findAll(rowSlice, FORMAT_SLICE, hints, null);"
        errorLine2="                                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="225"
            column="74"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="        possiblePrimaries.addAll(SliceQuery.findAll(rowSlice, FORMAT_ACTION, hints, null));"
        errorLine2="                                                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="226"
            column="63"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="        return FORMAT_ACTION.equals(mSliceItem.getFormat())"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="364"
            column="16"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SEE_MORE`"
        errorLine1="                &amp;&amp; mSliceItem.getSlice().hasHint(HINT_SEE_MORE)"
        errorLine2="                                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="365"
            column="50"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_PARTIAL`"
        errorLine1="                &amp;&amp; (textSlice.hasHint(HINT_PARTIAL)"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="416"
            column="39"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="        return FORMAT_IMAGE.equals(itemFormat)"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="475"
            column="16"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="                || FORMAT_TEXT.equals(itemFormat)"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="476"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="                || FORMAT_LONG.equals(itemFormat)"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="477"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                || FORMAT_ACTION.equals(itemFormat)"
        errorLine2="                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="478"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_REMOTE_INPUT`"
        errorLine1="                || FORMAT_REMOTE_INPUT.equals(itemFormat)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="479"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="                || FORMAT_SLICE.equals(itemFormat)"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="480"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_RANGE`"
        errorLine1="                || (FORMAT_INT.equals(itemFormat) &amp;&amp; SUBTYPE_RANGE.equals(slice.getSubType()));"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="481"
            column="54"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="                || (FORMAT_INT.equals(itemFormat) &amp;&amp; SUBTYPE_RANGE.equals(slice.getSubType()));"
        errorLine2="                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="481"
            column="21"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="            SliceItem mode = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_RANGE_MODE);"
        errorLine2="                                                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="529"
            column="65"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="                                &amp;&amp; SliceQuery.find(endItem.getSlice(), FORMAT_IMAGE) == null;"
        errorLine2="                                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="591"
            column="72"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                                &amp;&amp; SliceQuery.find(endItem, FORMAT_ACTION) != null;"
        errorLine2="                                                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="593"
            column="61"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                &amp;&amp; SliceQuery.find(mStartItem, FORMAT_ACTION) != null;"
        errorLine2="                                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="606"
            column="48"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_PARTIAL`"
        errorLine1="                        || (subtitleItem != null &amp;&amp; subtitleItem.hasHint(HINT_PARTIAL));"
        errorLine2="                                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="660"
            column="74"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="        SliceItem min = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_MIN);"
        errorLine2="                                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="723"
            column="60"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_MAX`"
        errorLine1="        SliceItem max = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_MAX);"
        errorLine2="                                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="730"
            column="72"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="        SliceItem max = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_MAX);"
        errorLine2="                                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="730"
            column="60"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_VALUE`"
        errorLine1="        SliceItem progress = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_VALUE);"
        errorLine2="                                                                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="737"
            column="77"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="        SliceItem progress = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_VALUE);"
        errorLine2="                                                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="737"
            column="65"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="        SliceItem style = SliceQuery.findSubtype(mRangeItem, FORMAT_INT, SUBTYPE_RANGE_MODE);"
        errorLine2="                                                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="756"
            column="62"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="        final boolean isSeekBar = FORMAT_ACTION.equals(mRangeItem.getFormat());"
        errorLine2="                                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="758"
            column="35"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_RANGE_VALUE`"
        errorLine1="                            .putExtra(EXTRA_RANGE_VALUE, mRangeValue));"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="863"
            column="39"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="                    SliceQuery.findSubtype(optionItem, FORMAT_TEXT, SUBTYPE_SELECTION_OPTION_KEY);"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="893"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="                    SliceQuery.findSubtype(optionItem, FORMAT_TEXT, SUBTYPE_SELECTION_OPTION_VALUE);"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="895"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_NO_TINT`"
        errorLine1="            boolean isIcon = !sliceItem.hasHint(HINT_NO_TINT);"
        errorLine2="                                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="974"
            column="49"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="        SliceItem dateTimeItem = SliceQuery.findSubtype(mRowAction.getSliceItem(), FORMAT_LONG,"
        errorLine2="                                                                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1139"
            column="84"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_MILLIS`"
        errorLine1="                SUBTYPE_MILLIS);"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1140"
            column="17"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_RANGE_VALUE`"
        errorLine1="                                    .putExtra(EXTRA_RANGE_VALUE, date.getTime()));"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1186"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_RANGE_VALUE`"
        errorLine1="                                    .putExtra(EXTRA_RANGE_VALUE, time.getTime()));"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1220"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_TOGGLE_STATE`"
        errorLine1="                        .putExtra(EXTRA_TOGGLE_STATE, isChecked);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="289"
            column="35"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        init(new SliceItem(slice, FORMAT_SLICE, null, slice.getHints()));"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="70"
            column="35"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_COLOR`"
        errorLine1="            mColorItem = SliceQuery.findTopLevelItem(item.getSlice(), FORMAT_INT, SUBTYPE_COLOR,"
        errorLine2="                                                                                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="84"
            column="83"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="            mColorItem = SliceQuery.findTopLevelItem(item.getSlice(), FORMAT_INT, SUBTYPE_COLOR,"
        errorLine2="                                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="84"
            column="71"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="            mLayoutDirItem = SliceQuery.findTopLevelItem(item.getSlice(), FORMAT_INT,"
        errorLine2="                                                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="86"
            column="75"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_LAYOUT_DIRECTION`"
        errorLine1="                    SUBTYPE_LAYOUT_DIRECTION, null, null);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="87"
            column="21"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_CONTENT_DESCRIPTION`"
        errorLine1="        mContentDescr = SliceQuery.findSubtype(item, FORMAT_TEXT, SUBTYPE_CONTENT_DESCRIPTION);"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="89"
            column="67"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="        mContentDescr = SliceQuery.findSubtype(item, FORMAT_TEXT, SUBTYPE_CONTENT_DESCRIPTION);"
        errorLine2="                                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="89"
            column="54"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="        String[] hints = new String[]{HINT_TITLE, HINT_SHORTCUT};"
        errorLine2="                                                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="156"
            column="51"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="        String[] hints = new String[]{HINT_TITLE, HINT_SHORTCUT};"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="156"
            column="39"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="        SliceItem actionItem =  SliceQuery.find(mSliceItem, FORMAT_ACTION, hints, null);"
        errorLine2="                                                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="157"
            column="61"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="            iconItem = SliceQuery.find(actionItem, FORMAT_IMAGE, HINT_TITLE, null);"
        errorLine2="                                                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="159"
            column="66"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="            iconItem = SliceQuery.find(actionItem, FORMAT_IMAGE, HINT_TITLE, null);"
        errorLine2="                                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="159"
            column="52"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="            labelItem = SliceQuery.find(actionItem, FORMAT_TEXT, (String) null, null);"
        errorLine2="                                                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="160"
            column="53"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="            actionItem = SliceQuery.find(mSliceItem, FORMAT_ACTION, (String) null, null);"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="164"
            column="54"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="            iconItem = SliceQuery.find(mSliceItem, FORMAT_IMAGE, HINT_TITLE, null);"
        errorLine2="                                                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="169"
            column="66"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="            iconItem = SliceQuery.find(mSliceItem, FORMAT_IMAGE, HINT_TITLE, null);"
        errorLine2="                                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="169"
            column="52"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TITLE`"
        errorLine1="            labelItem = SliceQuery.find(mSliceItem, FORMAT_TEXT, HINT_TITLE, null);"
        errorLine2="                                                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="172"
            column="66"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="            labelItem = SliceQuery.find(mSliceItem, FORMAT_TEXT, HINT_TITLE, null);"
        errorLine2="                                                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="172"
            column="53"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_IMAGE`"
        errorLine1="            iconItem = SliceQuery.find(mSliceItem, FORMAT_IMAGE, (String) null, null);"
        errorLine2="                                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="177"
            column="52"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="            labelItem = SliceQuery.find(mSliceItem, FORMAT_TEXT, (String) null, null);"
        errorLine2="                                                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="180"
            column="53"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        SliceItem slice = SliceQuery.find(mSliceItem, FORMAT_SLICE, (String) null, null);"
        errorLine2="                                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="199"
            column="55"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="                                new Slice.Builder(uri).build(), FORMAT_ACTION,"
        errorLine2="                                                                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="225"
            column="65"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_ACTION`"
        errorLine1="            actionItem = new SliceItem(pi, null, FORMAT_ACTION, null, null);"
        errorLine2="                                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="234"
            column="50"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="        SliceItem ttlItem = SliceQuery.find(slice, FORMAT_LONG, HINT_TTL, null);"
        errorLine2="                                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="138"
            column="65"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="        SliceItem ttlItem = SliceQuery.find(slice, FORMAT_LONG, HINT_TTL, null);"
        errorLine2="                                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="138"
            column="52"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="        SliceItem updatedItem = SliceQuery.find(slice, FORMAT_LONG, HINT_LAST_UPDATED, null);"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="142"
            column="69"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="        SliceItem updatedItem = SliceQuery.find(slice, FORMAT_LONG, HINT_LAST_UPDATED, null);"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="142"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_BUNDLE`"
        errorLine1="        SliceItem hostExtrasItem = SliceQuery.findSubtype(slice, FORMAT_BUNDLE,"
        errorLine2="                                                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="146"
            column="66"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_TOGGLE_STATE`"
        errorLine1="                    .putExtra(EXTRA_TOGGLE_STATE, toggleValue);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="280"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#EXTRA_RANGE_VALUE`"
        errorLine1="                        .putExtra(EXTRA_RANGE_VALUE, adjustedValue);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="320"
            column="35"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_MAX`"
        errorLine1="            SliceItem maxItem = SliceQuery.findSubtype(range, FORMAT_INT, SUBTYPE_MAX);"
        errorLine2="                                                                          ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="340"
            column="75"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="            SliceItem maxItem = SliceQuery.findSubtype(range, FORMAT_INT, SUBTYPE_MAX);"
        errorLine2="                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="340"
            column="63"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="            SliceItem minItem = SliceQuery.findSubtype(range, FORMAT_INT, SUBTYPE_MIN);"
        errorLine2="                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="341"
            column="63"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_VALUE`"
        errorLine1="            SliceItem currentItem = SliceQuery.findSubtype(range, FORMAT_INT, SUBTYPE_VALUE);"
        errorLine2="                                                                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="360"
            column="79"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="            SliceItem currentItem = SliceQuery.findSubtype(range, FORMAT_INT, SUBTYPE_VALUE);"
        errorLine2="                                                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="360"
            column="67"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_KEYWORDS`"
        errorLine1="        SliceItem keywordGroup = SliceQuery.find(mSlice, FORMAT_SLICE, HINT_KEYWORDS, null);"
        errorLine2="                                                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="380"
            column="72"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        SliceItem keywordGroup = SliceQuery.find(mSlice, FORMAT_SLICE, HINT_KEYWORDS, null);"
        errorLine2="                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="380"
            column="58"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_TEXT`"
        errorLine1="            List&lt;SliceItem> itemList = SliceQuery.findAll(keywordGroup, FORMAT_TEXT);"
        errorLine2="                                                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="382"
            column="73"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_PARTIAL`"
        errorLine1="        boolean hasHintPartial = SliceQuery.find(mSlice, null, HINT_PARTIAL, null) != null;"
        errorLine2="                                                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="406"
            column="64"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_PERMISSION_REQUEST`"
        errorLine1="        return mSlice.hasHint(HINT_PERMISSION_REQUEST);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="448"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ERROR`"
        errorLine1="        return mSlice.hasHint(HINT_ERROR);"
        errorLine2="                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="458"
            column="31"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="        SliceItem actionGroup = SliceQuery.find(slice, FORMAT_SLICE, HINT_ACTIONS, null);"
        errorLine2="                                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="476"
            column="70"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="        SliceItem actionGroup = SliceQuery.find(slice, FORMAT_SLICE, HINT_ACTIONS, null);"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="476"
            column="56"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="        String[] hints = new String[] {HINT_ACTIONS, HINT_SHORTCUT};"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="477"
            column="40"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_SHORTCUT`"
        errorLine1="        String[] hints = new String[] {HINT_ACTIONS, HINT_SHORTCUT};"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="477"
            column="54"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_SLICE`"
        errorLine1="                ? SliceQuery.findAll(actionGroup, FORMAT_SLICE, hints, null)"
        errorLine2="                                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="479"
            column="51"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="                            Slice.Builder b = new Slice.Builder(sb).addHints(HINT_ACTIONS);"
        errorLine2="                                                                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="108"
            column="78"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_ACTIONS`"
        errorLine1="                        builder.addSubSlice(sb.addHints(HINT_ACTIONS).build());"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="111"
            column="57"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="        SliceItem ttlItem = SliceQuery.findTopLevelItem(s, FORMAT_LONG, HINT_TTL, null, null);"
        errorLine2="                                                                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="130"
            column="73"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="        SliceItem ttlItem = SliceQuery.findTopLevelItem(s, FORMAT_LONG, HINT_TTL, null, null);"
        errorLine2="                                                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="130"
            column="60"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_TTL`"
        errorLine1="            slice.addLong(ttlItem.getLong(), SUBTYPE_MILLIS, HINT_TTL);"
        errorLine2="                                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="132"
            column="62"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="                s, FORMAT_LONG, HINT_LAST_UPDATED, null, null);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="137"
            column="33"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_LONG`"
        errorLine1="                s, FORMAT_LONG, HINT_LAST_UPDATED, null, null);"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="137"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_LAST_UPDATED`"
        errorLine1="            slice.addLong(updatedItem.getLong(), SUBTYPE_MILLIS, HINT_LAST_UPDATED);"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="139"
            column="66"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_COLOR`"
        errorLine1="        SliceItem colorItem = SliceQuery.findTopLevelItem(s, FORMAT_INT, SUBTYPE_COLOR, null,"
        errorLine2="                                                                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="143"
            column="74"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="        SliceItem colorItem = SliceQuery.findTopLevelItem(s, FORMAT_INT, SUBTYPE_COLOR, null,"
        errorLine2="                                                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="143"
            column="62"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_COLOR`"
        errorLine1="            slice.addInt(colorItem.getInt(), SUBTYPE_COLOR);"
        errorLine2="                                             ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="146"
            column="46"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_LAYOUT_DIRECTION`"
        errorLine1="                s, FORMAT_INT, SUBTYPE_LAYOUT_DIRECTION, null, null);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="151"
            column="32"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="                s, FORMAT_INT, SUBTYPE_LAYOUT_DIRECTION, null, null);"
        errorLine2="                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="151"
            column="20"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_LAYOUT_DIRECTION`"
        errorLine1="            slice.addInt(layoutDirItem.getInt(), SUBTYPE_LAYOUT_DIRECTION);"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="153"
            column="50"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#HINT_KEYWORDS`"
        errorLine1="            slice.addSubSlice(sb.addHints(HINT_KEYWORDS).build());"
        errorLine2="                                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="163"
            column="43"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.Slice#SUBTYPE_COLOR`"
        errorLine1="                    mCurrentSlice, FORMAT_INT, SUBTYPE_COLOR);"
        errorLine2="                                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="827"
            column="48"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 28 (current min is 19): `android.app.slice.SliceItem#FORMAT_INT`"
        errorLine1="                    mCurrentSlice, FORMAT_INT, SUBTYPE_COLOR);"
        errorLine2="                                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="827"
            column="36"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 21 (current min is 19): `android.R.attr#colorAccent`"
        errorLine1="        return getColorAttr(context, android.R.attr.colorAccent);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="64"
            column="38"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 26 (current min is 19): `android.R.attr#colorError`"
        errorLine1="        return getColorAttr(context, android.R.attr.colorError);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="71"
            column="38"/>
    </issue>

    <issue
        id="UnusedAttribute"
        message="Attribute `autoMirrored` is only used in API level 19 and higher (current min is 14)"
        errorLine1="        android:autoMirrored=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/drawable/abc_ic_slice_send.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        message="Attribute `tintMode` is only used in API level 21 and higher (current min is 14)"
        errorLine1="                android:tintMode=&quot;src_in&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_remote_input.xml"
            line="67"
            column="17"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        /**"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/slice/widget/SliceLiveData.java"
            line="210"
            column="9"/>
    </issue>

    <issue
        id="BanTargetApiAnnotation"
        message="Uses @TargetApi annotation"
        errorLine1="    @TargetApi(Build.VERSION_CODES.LOLLIPOP)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/LocationBasedViewTracker.java"
            line="47"
            column="5"/>
    </issue>

    <issue
        id="InflateParams"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        errorLine1="                return LayoutInflater.from(mContext).inflate(R.layout.abc_slice_grid, null);"
        errorLine2="                                                                                      ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="268"
            column="87"/>
    </issue>

    <issue
        id="InflateParams"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        errorLine1="                return LayoutInflater.from(mContext).inflate(R.layout.abc_slice_message, null);"
        errorLine2="                                                                                         ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="270"
            column="90"/>
    </issue>

    <issue
        id="InflateParams"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        errorLine1="                        null);"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="273"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.slice.widget.ActionRow is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="        if (input.getRemoteInput().getAllowFreeFormInput()) {"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ActionRow.java"
            line="161"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.slice.widget.GridRowView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mForeground.getBackground().setHotspot(x, y);"
        errorLine2="                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="742"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class null is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.performAccessibilityAction(ACTION_ACCESSIBILITY_FOCUS, null);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/LocationBasedViewTracker.java"
            line="51"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.slice.widget.LocationBasedViewTracker is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            if (child.isAccessibilityFocused()) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/LocationBasedViewTracker.java"
            line="140"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.slice.widget.RemoteInputView.RemoteEditText is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                return isTemporarilyDetached();"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="329"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.slice.widget.RemoteInputView.RemoteEditText is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                setBackground(mBackground);"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="414"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.slice.widget.RemoteInputView.RemoteEditText is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                setBackground(null);"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="416"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.slice.widget.SliceView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="203"
            column="9"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.slice.widget.TemplateView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mForeground.getBackground().setHotspot(x, y);"
        errorLine2="                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="111"
            column="41"/>
    </issue>

    <issue
        id="UseSwitchCompatOrMaterialCode"
        message="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        errorLine1="            Switch switchView = (Switch) LayoutInflater.from(getContext()).inflate("
        errorLine2="            ^">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="119"
            column="13"/>
    </issue>

    <issue
        id="UseSwitchCompatOrMaterialXml"
        message="Use `SwitchCompat` from AppCompat or `SwitchMaterial` from Material library"
        errorLine1="&lt;Switch xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="src/main/res/layout/abc_slice_switch.xml"
            line="18"
            column="1"/>
    </issue>

    <issue
        id="VectorRaster"
        message="This attribute is not supported in images generated from this vector icon for API &lt; 21; check generated icon to make sure it looks acceptable"
        errorLine1="        android:autoMirrored=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/drawable/abc_ic_slice_send.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="SwitchIntDef"
        message="Switch statement on an `int` with known associated constant missing case `IconCompat.TYPE_ADAPTIVE_BITMAP`, `IconCompat.TYPE_BITMAP`, `IconCompat.TYPE_DATA`, `IconCompat.TYPE_RESOURCE`, `IconCompat.TYPE_UNKNOWN`, `IconCompat.TYPE_URI`, `IconCompat.TYPE_URI_ADAPTIVE_BITMAP`"
        errorLine1="        switch (icon.getType()) {"
        errorLine2="        ~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="246"
            column="9"/>
    </issue>

    <issue
        id="SwitchIntDef"
        message="Unexpected constant; expected one of: `IconCompat.TYPE_ADAPTIVE_BITMAP`, `IconCompat.TYPE_BITMAP`, `IconCompat.TYPE_DATA`, `IconCompat.TYPE_RESOURCE`, `IconCompat.TYPE_UNKNOWN`, `IconCompat.TYPE_URI`, `IconCompat.TYPE_URI_ADAPTIVE_BITMAP`"
        errorLine1="            case Icon.TYPE_RESOURCE:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="247"
            column="18"/>
    </issue>

    <issue
        id="SwitchIntDef"
        message="Switch statement on an `int` with known associated constant missing case `IconCompat.TYPE_ADAPTIVE_BITMAP`, `IconCompat.TYPE_BITMAP`, `IconCompat.TYPE_DATA`, `IconCompat.TYPE_RESOURCE`, `IconCompat.TYPE_UNKNOWN`, `IconCompat.TYPE_URI`, `IconCompat.TYPE_URI_ADAPTIVE_BITMAP`"
        errorLine1="                    switch (icon.getType()) {"
        errorLine2="                    ~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceXml.java"
            line="285"
            column="21"/>
    </issue>

    <issue
        id="SwitchIntDef"
        message="Unexpected constant; expected one of: `IconCompat.TYPE_ADAPTIVE_BITMAP`, `IconCompat.TYPE_BITMAP`, `IconCompat.TYPE_DATA`, `IconCompat.TYPE_RESOURCE`, `IconCompat.TYPE_UNKNOWN`, `IconCompat.TYPE_URI`, `IconCompat.TYPE_URI_ADAPTIVE_BITMAP`"
        errorLine1="                        case Icon.TYPE_RESOURCE:"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceXml.java"
            line="286"
            column="30"/>
    </issue>

    <issue
        id="SwitchIntDef"
        message="Unexpected constant; expected one of: `IconCompat.TYPE_ADAPTIVE_BITMAP`, `IconCompat.TYPE_BITMAP`, `IconCompat.TYPE_DATA`, `IconCompat.TYPE_RESOURCE`, `IconCompat.TYPE_UNKNOWN`, `IconCompat.TYPE_URI`, `IconCompat.TYPE_URI_ADAPTIVE_BITMAP`"
        errorLine1="                        case Icon.TYPE_URI:"
        errorLine2="                             ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceXml.java"
            line="289"
            column="30"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        message="Invalid layout param in a `LinearLayout`: `layout_alignStart`"
        errorLine1="            android:layout_alignStart=&quot;@android:id/title&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_message.xml"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        message="Invalid layout param in a `LinearLayout`: `layout_alignLeft`"
        errorLine1="            android:layout_alignLeft=&quot;@android:id/title&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_message.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="NestedWeights"
        message="Nested weights are bad for performance"
        errorLine1="            android:layout_weight=&quot;1&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_small_template.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="Overdraw"
        message="Possible overdraw: Root element paints background `?android:attr/activatedBackgroundIndicator` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        errorLine1="    android:background=&quot;?android:attr/activatedBackgroundIndicator&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_grid.xml"
            line="22"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        message="Possible overdraw: Root element paints background `?android:attr/activatedBackgroundIndicator` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        errorLine1="    android:background=&quot;?android:attr/activatedBackgroundIndicator&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_message.xml"
            line="26"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        message="Possible overdraw: Root element paints background `?android:attr/activatedBackgroundIndicator` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        errorLine1="    android:background=&quot;?android:attr/activatedBackgroundIndicator&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_message_local.xml"
            line="27"
            column="5"/>
    </issue>

    <issue
        id="ViewConstructor"
        message="Custom view `ActionRow` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        errorLine1="public class ActionRow extends FrameLayout {"
        errorLine2="             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ActionRow.java"
            line="58"
            column="14"/>
    </issue>

    <issue
        id="ViewConstructor"
        message="Custom view `SliceActionView` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        errorLine1="public class SliceActionView extends FrameLayout implements View.OnClickListener,"
        errorLine2="             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="59"
            column="14"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="Custom view ``LinearLayout`` has `setOnTouchListener` called on it but does not override `performClick`"
        errorLine1="        mViewContainer.setOnTouchListener(isClickable ? this : null);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="688"
            column="9"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="Custom view `RemoteInputView` overrides `onTouchEvent` but not `performClick`"
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="177"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="`ShortcutView#performClick` should call `super#performClick`"
        errorLine1="    public boolean performClick() {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ShortcutView.java"
            line="107"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="`SliceViewHolder#onTouch` should call `View#performClick` when a click is detected"
        errorLine1="        public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="364"
            column="24"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        message="Custom view `SliceView` overrides `onTouchEvent` but not `performClick`"
        errorLine1="    public boolean onTouchEvent(MotionEvent ev) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="306"
            column="20"/>
    </issue>

    <issue
        id="ContentDescription"
        message="Missing `contentDescription` attribute on image"
        errorLine1="            &lt;ImageView"
        errorLine2="             ~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_message.xml"
            line="47"
            column="14"/>
    </issue>

    <issue
        id="ContentDescription"
        message="Missing `contentDescription` attribute on image"
        errorLine1="        &lt;ImageButton"
        errorLine2="         ~~~~~~~~~~~">
        <location
            file="src/main/res/layout/abc_slice_remote_input.xml"
            line="54"
            column="10"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ActionRow(Context context, boolean fullActions) {"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ActionRow.java"
            line="68"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridContent(SliceItem gridItem, int position) {"
        errorLine2="                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="75"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="254"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="254"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public CellContent(SliceItem cellItem) {"
        errorLine2="                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="275"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean populate(SliceItem cellItem) {"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridContent.java"
            line="282"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridRowView(Context context) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="123"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridRowView(Context context, AttributeSet attrs) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="127"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GridRowView(Context context, AttributeSet attrs) {"
        errorLine2="                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="127"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceItem(SliceContent slice, boolean isHeader, int rowIndex,"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="193"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int rowCount, SliceView.OnSliceActionListener observer) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="194"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onClick(View view) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="711"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouch(View view, MotionEvent event) {"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="732"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouch(View view, MotionEvent event) {"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/GridRowView.java"
            line="732"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ListContent(Context context, @NonNull Slice slice) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="75"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="131"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="131"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DisplayedListItems getRowItems(int availableHeight, SliceStyle style,"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="144"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DisplayedListItems getRowItems(int availableHeight, SliceStyle style,"
        errorLine2="                                                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="144"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SliceViewPolicy policy) {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="145"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceContent getSeeMoreItem() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="180"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getRowType(SliceContent content, boolean isHeader,"
        errorLine2="                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="253"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                                 List&lt;SliceAction> actions) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="254"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getListHeight(List&lt;SliceContent> listItems, SliceStyle style,"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="293"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getListHeight(List&lt;SliceContent> listItems, SliceStyle style,"
        errorLine2="                                                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="293"
            column="67"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SliceViewPolicy policy) {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ListContent.java"
            line="294"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft,"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/LocationBasedViewTracker.java"
            line="74"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void trackInputFocused(ViewGroup parent) {"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/LocationBasedViewTracker.java"
            line="116"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void trackA11yFocus(ViewGroup parent) {"
        errorLine2="                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/LocationBasedViewTracker.java"
            line="128"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public MessageView(Context context) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/MessageView.java"
            line="49"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceItem(SliceContent content, boolean isHeader, int index,"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/MessageView.java"
            line="71"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int rowCount, SliceView.OnSliceActionListener observer) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/MessageView.java"
            line="72"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteInputView(Context context, AttributeSet attrs) {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="87"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RemoteInputView(Context context, AttributeSet attrs) {"
        errorLine2="                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="87"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static RemoteInputView inflate(Context context, ViewGroup root) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="162"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static RemoteInputView inflate(Context context, ViewGroup root) {"
        errorLine2="                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="162"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static RemoteInputView inflate(Context context, ViewGroup root) {"
        errorLine2="                                                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="162"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onClick(View v) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="170"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="177"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setAction(SliceItem action) {"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="191"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setRemoteInput(RemoteInput[] remoteInputs, RemoteInput remoteInput) {"
        errorLine2="                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="198"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setRemoteInput(RemoteInput[] remoteInputs, RemoteInput remoteInput) {"
        errorLine2="                                                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="198"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onRequestSendAccessibilityEvent(View child, AccessibilityEvent event) {"
        errorLine2="                                                   ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="240"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onRequestSendAccessibilityEvent(View child, AccessibilityEvent event) {"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="240"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void beforeTextChanged(CharSequence s, int start, int count, int after) {"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="255"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onTextChanged(CharSequence s, int start, int before, int count) {"
        errorLine2="                              ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="259"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void afterTextChanged(Editable s) {"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="263"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteEditText(Context context, AttributeSet attrs) {"
        errorLine2="                              ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="305"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteEditText(Context context, AttributeSet attrs) {"
        errorLine2="                                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="305"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        protected void onVisibilityChanged(View changedView, int visibility) {"
        errorLine2="                                           ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="335"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        protected void onFocusChanged(boolean focused, int direction, Rect previouslyFocusedRect) {"
        errorLine2="                                                                      ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="344"
            column="71"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void getFocusedRect(Rect r) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="352"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean onKeyDown(int keyCode, KeyEvent event) {"
        errorLine2="                                              ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="359"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean onKeyUp(int keyCode, KeyEvent event) {"
        errorLine2="                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="368"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public InputConnection onCreateInputConnection(EditorInfo outAttrs) {"
        errorLine2="               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="377"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public InputConnection onCreateInputConnection(EditorInfo outAttrs) {"
        errorLine2="                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="377"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onCommitCompletion(CompletionInfo text) {"
        errorLine2="                                       ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="401"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void setCustomSelectionActionModeCallback(ActionMode.Callback actionModeCallback) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RemoteInputView.java"
            line="427"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RowContent(SliceItem rowSlice, int position) {"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="82"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ArrayList&lt;SliceItem> getEndItems() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="337"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ArrayList&lt;SliceAction> getToggleItems() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="344"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="356"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowContent.java"
            line="356"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RowStyle(Context context, int resId, @NonNull SliceStyle sliceStyle) {"
        errorLine2="                    ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowStyle.java"
            line="74"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Set&lt;SliceItem> mLoadingActions = new HashSet&lt;>();"
        errorLine2="              ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="163"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RowView(Context context) {"
        errorLine2="                   ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="211"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setStyle(SliceStyle styles, RowStyle rowStyle) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="237"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setStyle(SliceStyle styles, RowStyle rowStyle) {"
        errorLine2="                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="237"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActions(List&lt;SliceAction> actions) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="345"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceItem(SliceContent content, boolean isHeader, int index,"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="440"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int rowCount, SliceView.OnSliceActionListener observer) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="441"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLoadingActions(Set&lt;SliceItem> actions) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1073"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onClick(View view) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1085"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemSelected(AdapterView&lt;?> parent, View view, int position, long id) {"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1235"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onItemSelected(AdapterView&lt;?> parent, View view, int position, long id) {"
        errorLine2="                                                      ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/RowView.java"
            line="1235"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ShortcutView(Context context) {"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ShortcutView.java"
            line="58"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceContent(ListContent sliceContent) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ShortcutView.java"
            line="66"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLoadingActions(Set&lt;SliceItem> actions) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ShortcutView.java"
            line="133"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Set&lt;SliceItem> getLoadingActions() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/ShortcutView.java"
            line="138"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceActionView(Context context, SliceStyle style, RowStyle rowStyle) {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="85"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceActionView(Context context, SliceStyle style, RowStyle rowStyle) {"
        errorLine2="                                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="85"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceActionView(Context context, SliceStyle style, RowStyle rowStyle) {"
        errorLine2="                                                              ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="85"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setAction(@NonNull SliceActionImpl action, EventInfo info,"
        errorLine2="                                                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="101"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SliceView.OnSliceActionListener listener, int color,"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="102"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SliceActionLoadingListener loadingListener) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceActionView.java"
            line="103"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceAdapter(Context context) {"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="98"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setParents(SliceView parent, TemplateView templateView) {"
        errorLine2="                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="106"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setParents(SliceView parent, TemplateView templateView) {"
        errorLine2="                                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="106"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceObserver(SliceView.OnSliceActionListener observer) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="126"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActions(List&lt;SliceAction> actions) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="133"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceItems(List&lt;SliceContent> slices, int color, int mode) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="141"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setStyle(SliceStyle style) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="159"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setPolicy(SliceViewPolicy p) {"
        errorLine2="                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="167"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLoadingActions(Set&lt;SliceItem> actions) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="194"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Set&lt;SliceItem> getLoadingActions() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="206"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onSliceActionLoading(SliceItem actionItem, int position) {"
        errorLine2="                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="211"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="238"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {"
        errorLine2="                                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="238"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onBindViewHolder(SliceViewHolder holder, int position) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="260"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SliceViewHolder(View itemView) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="316"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onClick(View v) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="356"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="364"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceAdapter.java"
            line="364"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceView.OnSliceActionListener mObserver;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="44"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceActionView.SliceActionLoadingListener mLoadingListener;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="53"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceStyle mSliceStyle;"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="54"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected RowStyle mRowStyle;"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="55"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceViewPolicy mViewPolicy;"
        errorLine2="              ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="56"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceChildView(Context context, AttributeSet attributeSet) {"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="62"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceChildView(Context context, AttributeSet attributeSet) {"
        errorLine2="                                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="62"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceContent(ListContent content) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="74"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceItem(SliceContent slice, boolean isHeader, int rowIndex,"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="91"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int rowCount, SliceView.OnSliceActionListener observer) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="92"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActions(List&lt;SliceAction> actions) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="99"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActionListener(SliceView.OnSliceActionListener observer) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="135"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActionLoadingListener(SliceActionView.SliceActionLoadingListener listener) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="142"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setActionLoading(SliceItem item) {"
        errorLine2="                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="149"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLoadingActions(Set&lt;SliceItem> loadingActions) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="155"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Set&lt;SliceItem> getLoadingActions() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="167"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setStyle(SliceStyle styles, @NonNull RowStyle rowStyle) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceChildView.java"
            line="174"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceItem mSliceItem;"
        errorLine2="              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="62"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceItem mColorItem;"
        errorLine2="              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="63"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceItem mLayoutDirItem;"
        errorLine2="              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="64"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected SliceItem mContentDescr;"
        errorLine2="              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="65"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceContent(Slice slice) {"
        errorLine2="                        ~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="68"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceContent(SliceItem item, int rowIndex) {"
        errorLine2="                        ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="75"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="131"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getHeight(SliceStyle style, SliceViewPolicy policy) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceContent.java"
            line="131"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            @NonNull InputStream input, OnErrorListener listener) {"
        errorLine2="                                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceLiveData.java"
            line="127"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            @NonNull InputStream input, OnErrorListener listener) {"
        errorLine2="                                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceLiveData.java"
            line="136"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SliceViewManager manager, @NonNull InputStream input, OnErrorListener listener) {"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceLiveData.java"
            line="147"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SliceViewManager manager, @NonNull InputStream input, OnErrorListener listener) {"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceLiveData.java"
            line="147"
            column="67"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;SliceAction> getToggles() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="246"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean sendToggleAction(SliceAction toggleAction, boolean toggleValue)"
        errorLine2="                                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="276"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ListContent getListContent() {"
        errorLine2="           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceMetadata.java"
            line="523"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceStructure(Slice s) {"
        errorLine2="                          ~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceStructure.java"
            line="50"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceStructure(SliceItem s) {"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceStructure.java"
            line="62"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceStyle(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="96"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceStyle(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="96"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getRowHeight(RowContent row, SliceViewPolicy policy) {"
        errorLine2="                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="323"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getRowHeight(RowContent row, SliceViewPolicy policy) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="323"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getGridHeight(GridContent grid, SliceViewPolicy policy) {"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="361"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getGridHeight(GridContent grid, SliceViewPolicy policy) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="361"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getListHeight(ListContent list, SliceViewPolicy policy) {"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="401"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getListHeight(ListContent list, SliceViewPolicy policy) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="401"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getListItemsHeight(List&lt;SliceContent> listItems, SliceViewPolicy policy) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="432"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getListItemsHeight(List&lt;SliceContent> listItems, SliceViewPolicy policy) {"
        errorLine2="                                                                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="432"
            column="65"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DisplayedListItems getListItemsForNonScrollingList(ListContent list,"
        errorLine2="                                                              ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="459"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                                                             SliceViewPolicy policy) {"
        errorLine2="                                                             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceStyle.java"
            line="461"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat convert(Context context, IconCompat icon, SerializeOptions options) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="245"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat convert(Context context, IconCompat icon, SerializeOptions options) {"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="245"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat convert(Context context, IconCompat icon, SerializeOptions options) {"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="245"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat convert(Context context, IconCompat icon, SerializeOptions options) {"
        errorLine2="                                                                       ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="245"
            column="72"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void checkThrow(String format) {"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="383"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Bitmap.CompressFormat getFormat() {"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="434"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SerializeOptions setActionMode(@FormatMode int mode) {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="453"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SerializeOptions setImageMode(@FormatMode int mode) {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="465"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SerializeOptions setMaxImageWidth(int width) {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="477"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SerializeOptions setMaxImageHeight(int height) {"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="489"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SerializeOptions setImageConversionFormat(Bitmap.CompressFormat format,"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="502"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SerializeOptions setImageConversionFormat(Bitmap.CompressFormat format,"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="502"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void onSliceAction(Uri actionUri, Context context, Intent intent);"
        errorLine2="                           ~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="523"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void onSliceAction(Uri actionUri, Context context, Intent intent);"
        errorLine2="                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="523"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void onSliceAction(Uri actionUri, Context context, Intent intent);"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="523"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SliceParseException(String s, Throwable e) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="535"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SliceParseException(String s, Throwable e) {"
        errorLine2="                                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="535"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public SliceParseException(String s) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/slice/SliceUtils.java"
            line="543"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceView(Context context) {"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="188"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceView(Context context, @Nullable AttributeSet attrs) {"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="192"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="196"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="202"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public SliceView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="202"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setClickInfo(int[] info) {"
        errorLine2="                             ~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="258"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onClick(View v) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="263"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setOnClickListener(View.OnClickListener listener) {"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="289"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setOnLongClickListener(View.OnLongClickListener listener) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="294"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onInterceptTouchEvent(MotionEvent ev) {"
        errorLine2="                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="300"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouchEvent(MotionEvent ev) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="306"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String modeToString(@SliceMode int mode) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="848"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onVisibilityChanged(View changedView, int visibility) {"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceView.java"
            line="889"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setListener(PolicyChangeListener listener) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewPolicy.java"
            line="64"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Drawable getDrawable(@NonNull Context context, @AttrRes int attr) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="135"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createIconFromDrawable(Drawable d) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="146"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createIconFromDrawable(Drawable d) {"
        errorLine2="                                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="146"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            IconCompat icon, boolean isLarge, ViewGroup parent) {"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="161"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            IconCompat icon, boolean isLarge, ViewGroup parent) {"
        errorLine2="                                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="161"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static @NonNull Bitmap getCircularBitmap(Bitmap bitmap) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="185"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getTimestampString(Context context, long time) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="202"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getTimestampString(Context context, long time) {"
        errorLine2="                                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="202"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void tintIndeterminateProgressBar(Context context, ProgressBar bar) {"
        errorLine2="                                                    ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="229"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void tintIndeterminateProgressBar(Context context, ProgressBar bar) {"
        errorLine2="                                                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/SliceViewUtil.java"
            line="229"
            column="70"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public TemplateView(Context context) {"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="55"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onForegroundActivated(MotionEvent event) {"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="101"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setPolicy(SliceViewPolicy policy) {"
        errorLine2="                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="124"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setActionLoading(SliceItem item) {"
        errorLine2="                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="131"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLoadingActions(Set&lt;SliceItem> loadingActions) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="136"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Set&lt;SliceItem> getLoadingActions() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="141"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActionListener(SliceView.OnSliceActionListener observer) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="152"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceActions(List&lt;SliceAction> actions) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="160"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSliceContent(ListContent sliceContent) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="165"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setStyle(SliceStyle style, @NonNull RowStyle rowStyle) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/slice/widget/TemplateView.java"
            line="172"
            column="26"/>
    </issue>

</issues>
