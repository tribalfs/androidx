/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package androidx.sqlite.inspection;

option java_package = "androidx.sqlite.inspection";
option java_outer_classname = "SqliteInspectorProtocol";

// --- Commands ---

// Generic Command object grouping all Inspector Command types. Expected in
// Inspector's onReceiveCommand.
message Command {
  // Wrapped specialised Command.
  oneof OneOf {
    TrackDatabasesCommand track_databases = 1;
  }
}

// Request for the Inspector to track database connections (existing and new)
// and notify of those via DatabaseOpenedEvent objects.
message TrackDatabasesCommand {}

// --- Responses ---

// Generic Response object grouping all Inspector Response types to Command
// objects.
message Response {
  // Wrapped specialised Response.
  oneof OneOf {
    TrackDatabasesResponse track_databases = 1;
  }
}

// Object expected as a response to TrackDatabasesCommand.
message TrackDatabasesResponse {}

// --- Events ---

// Generic Event object grouping all Inspector Event types. Expected in
// Connection's sendEvent method.
message Event {
  // Wrapped specialised Event.
  oneof union { DatabaseOpenedEvent database_opened = 1; }
}

// Notification of a database connection established (new) / discovered
// (existing).
message DatabaseOpenedEvent {
  // Id uniquely identifying a connection to a database. Required to perform
  // requests on the database.
  int32 id = 1;
  // Display name of the database: depending on a database type, e.g. in case of
  // a vanilla SQLite database a path to the database. Note: it is not
  // necessarily unique between databases.
  string name = 2;
}
