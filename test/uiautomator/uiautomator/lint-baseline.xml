<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.4.0-alpha01" type="baseline" client="gradle" dependencies="false" name="AGP (7.4.0-alpha01)" variant="all" version="7.4.0-alpha01">

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityNodeInfo#getWindow`"
        errorLine1="            if (node.getWindow() != null) {"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityNodeInfo#getWindow`"
        errorLine1="              node.getWindow().getBoundsInScreen(window);"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityWindowInfo#getBoundsInScreen`"
        errorLine1="              node.getWindow().getBoundsInScreen(window);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.app.UiAutomation#executeShellCommand`"
        errorLine1="        ParcelFileDescriptor pfd = getUiAutomation().executeShellCommand(cmd);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 30 (current min is 18): `android.app.UiAutomation#getWindowsOnAllDisplays`"
        errorLine1="                getUiAutomation().getWindowsOnAllDisplays();"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.app.UiAutomation#getWindows`"
        errorLine1="            return getUiAutomation().getWindows();"
        errorLine2="                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityWindowInfo#getRoot`"
        errorLine1="            final AccessibilityNodeInfo root = window.getRoot();"
        errorLine2="                                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 18): `android.app.Instrumentation#getUiAutomation`"
        errorLine1="            return instrumentation.getUiAutomation(flags);"
        errorLine2="                                   ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 18): `android.app.Instrumentation#getUiAutomation`"
        errorLine1="        doReturn(automation).when(mockInstrumentation).getUiAutomation(anyInt());"
        errorLine2="                                                       ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/test/uiautomator/UiDeviceTests.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 18): `android.app.Instrumentation#getUiAutomation`"
        errorLine1="            Mockito.verify(mockInstrumentation, atLeastOnce()).getUiAutomation(eq(defaultFlags));"
        errorLine2="                                                               ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/test/uiautomator/UiDeviceTests.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 18): `android.app.Instrumentation#getUiAutomation`"
        errorLine1="        doReturn(automation).when(mockInstrumentation).getUiAutomation(anyInt());"
        errorLine2="                                                       ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/test/uiautomator/UiDeviceTests.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 18): `android.app.Instrumentation#getUiAutomation`"
        errorLine1="            Mockito.verify(mockInstrumentation, atLeastOnce()).getUiAutomation(eq(flags));"
        errorLine2="                                                               ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/test/uiautomator/UiDeviceTests.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 23 (current min is 18): `android.content.Context#getSystemService`"
        errorLine1="            mDevice.getInstrumentation().getContext().getSystemService(DisplayManager.class);"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityNodeInfo#getWindow`"
        errorLine1="        final AccessibilityWindowInfo window = getAccessibilityNodeInfo().getWindow();"
        errorLine2="                                                                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 30 (current min is 18): `android.view.accessibility.AccessibilityWindowInfo#getDisplayId`"
        errorLine1="            return window.getDisplayId();"
        errorLine2="                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 23 (current min is 18): `android.content.Context#getSystemService`"
        errorLine1="                mDevice.getInstrumentation().getContext().getSystemService(DisplayManager.class);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityNodeInfo#getWindow`"
        errorLine1="            if (node.getWindow() != null) {"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityNodeInfo#getWindow`"
        errorLine1="                node.getWindow().getBoundsInScreen(window);"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 21 (current min is 18): `android.view.accessibility.AccessibilityWindowInfo#getBoundsInScreen`"
        errorLine1="                node.getWindow().getBoundsInScreen(window);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: 0, UiAutomation.FLAG_DONT_SUPPRESS_ACCESSIBILITY_SERVICES, UiAutomation.FLAG_DONT_USE_ACCESSIBILITY"
        errorLine1="            return instrumentation.getUiAutomation(flags);"
        errorLine2="                                                   ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling `Method.invoke` without an SDK check"
        errorLine1="                    sMotionEvent_setDisplayId.invoke(ev, displayId);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/GestureController.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.AccessibilityNodeInfoHelper is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            if (node.getWindow() != null) {"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.AccessibilityNodeInfoHelper is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="              node.getWindow().getBoundsInScreen(window);"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.AccessibilityNodeInfoHelper is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="              node.getWindow().getBoundsInScreen(window);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiDevice is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        ParcelFileDescriptor pfd = getUiAutomation().executeShellCommand(cmd);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 30; however, the containing class androidx.test.uiautomator.UiDevice is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                getUiAutomation().getWindowsOnAllDisplays();"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiDevice is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            return getUiAutomation().getWindows();"
        errorLine2="                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiDevice is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            final AccessibilityNodeInfo root = window.getRoot();"
        errorLine2="                                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.test.uiautomator.UiDevice is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            return instrumentation.getUiAutomation(flags);"
        errorLine2="                                   ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 23; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mDevice.getInstrumentation().getContext().getSystemService(DisplayManager.class);"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        final AccessibilityWindowInfo window = getAccessibilityNodeInfo().getWindow();"
        errorLine2="                                                                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 30; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            return window.getDisplayId();"
        errorLine2="                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 23; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                mDevice.getInstrumentation().getContext().getSystemService(DisplayManager.class);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            if (node.getWindow() != null) {"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                node.getWindow().getBoundsInScreen(window);"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.test.uiautomator.UiObject2 is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                node.getWindow().getBoundsInScreen(window);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class is missing private constructor"
        errorLine1="class AccessibilityNodeInfoDumper {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoDumper.java"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class is missing private constructor"
        errorLine1="class AccessibilityNodeInfoHelper {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/AccessibilityNodeInfoHelper.java"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class is missing private constructor"
        errorLine1="public class Until {"
        errorLine2="             ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="            if (checkCriteria(selector.mClazz, node.getClassName()) &amp;&amp;"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mDesc, node.getContentDescription()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mPkg, node.getPackageName()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mRes, node.getViewIdResourceName()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mText, node.getText()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mChecked, node.isChecked()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mCheckable, node.isCheckable()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mClickable, node.isClickable()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mEnabled, node.isEnabled()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mFocused, node.isFocused()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mFocusable, node.isFocusable()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mLongClickable, node.isLongClickable()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mScrollable, node.isScrollable()) &amp;&amp;"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `checkCriteria` of class `ByMatcher` requires synthetic accessor"
        errorLine1="                    checkCriteria(selector.mSelected, node.isSelected())) {"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mHead` of class `SinglyLinkedList` requires synthetic accessor"
        errorLine1="                private Node&lt;T> mNext = mHead;"
        errorLine2="                                        ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/ByMatcher.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `injectEventSync` of class `InteractionController` requires synthetic accessor"
        errorLine1="                if (injectEventSync(downEvent)) {"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/InteractionController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `injectEventSync` of class `InteractionController` requires synthetic accessor"
        errorLine1="                    injectEventSync(upEvent);"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/InteractionController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `touchDown` of class `InteractionController` requires synthetic accessor"
        errorLine1="                if(touchDown(x, y)) {"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/InteractionController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `touchUp` of class `InteractionController` requires synthetic accessor"
        errorLine1="                    touchUp(x, y);"
        errorLine2="                    ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/InteractionController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `touchDown` of class `InteractionController` requires synthetic accessor"
        errorLine1="                if(touchDown(x, y)) {"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/InteractionController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `touchUp` of class `InteractionController` requires synthetic accessor"
        errorLine1="                    touchUp(x, y);"
        errorLine2="                    ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/InteractionController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mLock` of class `QueryController` requires synthetic accessor"
        errorLine1="            synchronized (mLock) {"
        errorLine2="                          ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mLastActivityName` of class `QueryController` requires synthetic accessor"
        errorLine1="                                mLastActivityName = event.getText().get(0).toString();"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mLastTraversedText` of class `QueryController` requires synthetic accessor"
        errorLine1="                                mLastTraversedText = event.getText().get(0).toString();"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `DEBUG` of class `QueryController` requires synthetic accessor"
        errorLine1="                        if (DEBUG)"
        errorLine2="                            ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `LOG_TAG` of class `QueryController` requires synthetic accessor"
        errorLine1="                            Log.d(LOG_TAG, &quot;Last text selection reported: &quot; +"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mLastTraversedText` of class `QueryController` requires synthetic accessor"
        errorLine1="                                    mLastTraversedText);"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mLock` of class `QueryController` requires synthetic accessor"
        errorLine1="                mLock.notifyAll();"
        errorLine2="                ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/QueryController.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` member of class `LogcatSink` requires synthetic accessor"
        errorLine1="                    mSinks.add(new LogcatSink());"
        errorLine2="                               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Tracer.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` member of class `LogcatSink` requires synthetic accessor"
        errorLine1="                    mSinks.add(new LogcatSink());"
        errorLine2="                               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Tracer.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;action&quot;, in androidx.test.uiautomator.UiDevice.performActionAndWait) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="    public &lt;R> R performActionAndWait(Runnable action, EventCondition&lt;R> condition, long timeout) {"
        errorLine2="                                                                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector copy(BySelector original) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector copy(BySelector original) {"
        errorLine2="                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(String className) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(String className) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(String packageName, String className) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(String packageName, String className) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(String packageName, String className) {"
        errorLine2="                                                       ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(Class clazz) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(Class clazz) {"
        errorLine2="                                   ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(Pattern className) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clazz(Pattern className) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector desc(String contentDescription) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector desc(String contentDescription) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector descContains(String substring) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector descContains(String substring) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector descStartsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector descStartsWith(String substring) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector descEndsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector descEndsWith(String substring) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector desc(Pattern contentDescription) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector desc(Pattern contentDescription) {"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector pkg(String applicationPackage) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector pkg(String applicationPackage) {"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector pkg(Pattern applicationPackage) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector pkg(Pattern applicationPackage) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(String resourceName) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(String resourceName) {"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(String resourcePackage, String resourceId) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(String resourcePackage, String resourceId) {"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(String resourcePackage, String resourceId) {"
        errorLine2="                                                         ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(Pattern resourceName) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector res(Pattern resourceName) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector text(String text) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector text(String text) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector textContains(String substring) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector textContains(String substring) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector textStartsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector textStartsWith(String substring) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector textEndsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector textEndsWith(String substring) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector text(Pattern regex) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector text(Pattern regex) {"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector checkable(boolean isCheckable) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector checked(boolean isChecked) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector clickable(boolean isClickable) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector enabled(boolean isEnabled) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector focusable(boolean isFocusable) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector focused(boolean isFocused) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector longClickable(boolean isLongClickable) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector scrollable(boolean isScrollable) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector selected(boolean isSelected) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector depth(int depth) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector hasChild(BySelector childSelector) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector hasChild(BySelector childSelector) {"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector hasDescendant(BySelector descendantSelector) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector hasDescendant(BySelector descendantSelector) {"
        errorLine2="                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector hasDescendant(BySelector descendantSelector, int maxDepth) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static BySelector hasDescendant(BySelector descendantSelector, int maxDepth) {"
        errorLine2="                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/By.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(String className) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(String className) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(String packageName, String className) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(String packageName, String className) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(String packageName, String className) {"
        errorLine2="                                                ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(Class clazz) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(Class clazz) {"
        errorLine2="                            ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(Pattern className) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clazz(Pattern className) {"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector desc(String contentDescription) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector desc(String contentDescription) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector descContains(String substring) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector descContains(String substring) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector descStartsWith(String substring) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector descStartsWith(String substring) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector descEndsWith(String substring) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector descEndsWith(String substring) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector desc(Pattern contentDescription) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector desc(Pattern contentDescription) {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector pkg(String applicationPackage) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector pkg(String applicationPackage) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector pkg(Pattern applicationPackage) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector pkg(Pattern applicationPackage) {"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(String resourceName) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(String resourceName) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(String resourcePackage, String resourceId) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(String resourcePackage, String resourceId) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(String resourcePackage, String resourceId) {"
        errorLine2="                                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(Pattern resourceName) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector res(Pattern resourceName) {"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector text(String textValue) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector text(String textValue) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector textContains(String substring) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector textContains(String substring) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector textStartsWith(String substring) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector textStartsWith(String substring) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector textEndsWith(String substring) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector textEndsWith(String substring) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector text(Pattern textValue) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector text(Pattern textValue) {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector checkable(boolean isCheckable) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector checked(boolean isChecked) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector clickable(boolean isClickable) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector enabled(boolean isEnabled) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector focusable(boolean isFocusable) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector focused(boolean isFocused) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector longClickable(boolean isLongClickable) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector scrollable(boolean isScrollable) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector selected(boolean isSelected) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector depth(int exactDepth) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector depth(int min, int max) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector minDepth(int min) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector maxDepth(int max) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector hasChild(BySelector childSelector) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector hasChild(BySelector childSelector) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector hasDescendant(BySelector descendantSelector) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector hasDescendant(BySelector descendantSelector) {"
        errorLine2="                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector hasDescendant(BySelector descendantSelector, int maxDepth) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BySelector hasDescendant(BySelector descendantSelector, int maxDepth) {"
        errorLine2="                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/BySelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Configurator getInstance() {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setWaitForIdleTimeout(long timeout) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setWaitForSelectorTimeout(long timeout) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setScrollAcknowledgmentTimeout(long timeout) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setActionAcknowledgmentTimeout(long timeout) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setKeyInjectionDelay(long delay) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setToolType(final int toolType) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Configurator setUiAutomationFlags(int flags) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Configurator.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Direction reverse(Direction direction) {"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Direction.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Direction reverse(Direction direction) {"
        errorLine2="                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Direction.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void sendStatus(int resultCode, Bundle status);"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/IAutomationSupport.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Tracer getInstance() {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Tracer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setOutputMode(Mode mode) {"
        errorLine2="                              ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Tracer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setOutputFilename(String filename) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Tracer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void trace(Object... arguments) {"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Tracer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void initializeUiAutomatorTest(UiAutomatorTestCase test) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiAutomatorInstrumentationTestRunner.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected AndroidTestRunner getAndroidTestRunner() {"
        errorLine2="              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiAutomatorInstrumentationTestRunner.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiCollection(UiSelector selector) {"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text)"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text)"
        errorLine2="                                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByInstance(UiSelector childPattern, int instance)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByInstance(UiSelector childPattern, int instance)"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text)"
        errorLine2="                                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text)"
        errorLine2="                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public int getChildCount(UiSelector childPattern) {"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiCollection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject findObject(UiSelector selector) {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject findObject(UiSelector selector) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean hasObject(BySelector selector) {"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject2 findObject(BySelector selector) {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject2 findObject(BySelector selector) {"
        errorLine2="                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;UiObject2> findObjects(BySelector selector) {"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;UiObject2> findObjects(BySelector selector) {"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R wait(SearchCondition&lt;R> condition, long timeout) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R performActionAndWait(Runnable action, EventCondition&lt;R> condition, long timeout) {"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R performActionAndWait(Runnable action, EventCondition&lt;R> condition, long timeout) {"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiDevice getInstance(Instrumentation instrumentation) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiDevice getInstance(Instrumentation instrumentation) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Point getDisplaySizeDp() {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getProductName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getLastTraversedText() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean swipe(Point[] segments, int segmentSteps) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getCurrentPackageName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerWatcher(String name, UiWatcher watcher) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerWatcher(String name, UiWatcher watcher) {"
        errorLine2="                                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void removeWatcher(String name) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean hasWatcherTriggered(String watcherName) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void dumpWindowHierarchy(File dest) throws IOException {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void dumpWindowHierarchy(OutputStream out) throws IOException {"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean waitForWindowUpdate(final String packageName, long timeout) {"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean takeScreenshot(File storePath) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean takeScreenshot(File storePath, float scale, int quality) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getLauncherPackageName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String executeShellCommand(String cmd) throws IOException {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String executeShellCommand(String cmd) throws IOException {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiDevice.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final UiSelector getSelector() {"
        errorLine2="                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChild(UiSelector selector) throws UiObjectNotFoundException {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChild(UiSelector selector) throws UiObjectNotFoundException {"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getFromParent(UiSelector selector) throws UiObjectNotFoundException {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getFromParent(UiSelector selector) throws UiObjectNotFoundException {"
        errorLine2="                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected AccessibilityNodeInfo findAccessibilityNodeInfo(long timeout) {"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean dragTo(UiObject destObj, int steps) throws UiObjectNotFoundException {"
        errorLine2="                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getText() throws UiObjectNotFoundException {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getClassName() throws UiObjectNotFoundException {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getContentDescription() throws UiObjectNotFoundException {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void legacySetText(String text) throws UiObjectNotFoundException {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean setText(String text) throws UiObjectNotFoundException {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getPackageName() throws UiObjectNotFoundException {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Rect getVisibleBounds() throws UiObjectNotFoundException {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Rect getBounds() throws UiObjectNotFoundException {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean performTwoPointerGesture(Point startPoint1, Point startPoint2, Point endPoint1,"
        errorLine2="                                            ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean performTwoPointerGesture(Point startPoint1, Point startPoint2, Point endPoint1,"
        errorLine2="                                                               ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean performTwoPointerGesture(Point startPoint1, Point startPoint2, Point endPoint1,"
        errorLine2="                                                                                  ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Point endPoint2, int steps) {"
        errorLine2="            ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean performMultiPointerGesture(PointerCoords[] ...touches) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R wait(UiObject2Condition&lt;R> condition, long timeout) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R wait(SearchCondition&lt;R> condition, long timeout) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject2 getParent() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;UiObject2> getChildren() {"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean hasObject(BySelector selector) {"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject2 findObject(BySelector selector) {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject2 findObject(BySelector selector) {"
        errorLine2="                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;UiObject2> findObjects(BySelector selector) {"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;UiObject2> findObjects(BySelector selector) {"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Rect getVisibleBounds() {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Point getVisibleCenter() {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getClassName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getContentDescription() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getApplicationPackage() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getResourceName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getText() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void click(Point point) {"
        errorLine2="                      ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void click(Point point, long duration) {"
        errorLine2="                      ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R clickAndWait(EventCondition&lt;R> condition, long timeout) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R clickAndWait(Point point, EventCondition&lt;R> condition, long timeout) {"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;R> R clickAndWait(Point point, EventCondition&lt;R> condition, long timeout) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void drag(Point dest) {"
        errorLine2="                     ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void drag(Point dest, int speed) {"
        errorLine2="                     ~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void swipe(Direction direction, float percent) {"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void swipe(Direction direction, float percent, int speed) {"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean scroll(final Direction direction, final float percent) {"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean scroll(Direction direction, float percent, final int speed) {"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean fling(final Direction direction) {"
        errorLine2="                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean fling(final Direction direction, final int speed) {"
        errorLine2="                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void legacySetText(String text) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setText(String text) {"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObject2.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObjectNotFoundException(String msg) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObjectNotFoundException.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObjectNotFoundException(String detailMessage, Throwable throwable) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObjectNotFoundException.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObjectNotFoundException(String detailMessage, Throwable throwable) {"
        errorLine2="                                                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObjectNotFoundException.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObjectNotFoundException(Throwable throwable) {"
        errorLine2="                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiObjectNotFoundException.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiScrollable(UiSelector container) {"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiScrollable setAsVerticalList() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiScrollable setAsHorizontalList() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected boolean exists(UiSelector selector) {"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text)"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text)"
        errorLine2="                                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text,"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text,"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByDescription(UiSelector childPattern, String text,"
        errorLine2="                                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByInstance(UiSelector childPattern, int instance)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByInstance(UiSelector childPattern, int instance)"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text)"
        errorLine2="                                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text)"
        errorLine2="                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text, boolean allowScrollSearch)"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text, boolean allowScrollSearch)"
        errorLine2="                                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiObject getChildByText(UiSelector childPattern, String text, boolean allowScrollSearch)"
        errorLine2="                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean scrollDescriptionIntoView(String text) throws UiObjectNotFoundException {"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean scrollIntoView(UiObject obj) throws UiObjectNotFoundException {"
        errorLine2="                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean scrollIntoView(UiSelector selector) throws UiObjectNotFoundException {"
        errorLine2="                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean ensureFullyVisible(UiObject childObject) throws UiObjectNotFoundException {"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean scrollTextIntoView(String text) throws UiObjectNotFoundException {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiScrollable setMaxSearchSwipes(int swipes) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiScrollable setSwipeDeadZonePercentage(double swipeDeadZonePercentage) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiScrollable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected UiSelector cloneSelector() {"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector text(String text) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector text(String text) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector textMatches(String regex) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector textMatches(String regex) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector textStartsWith(String text) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector textStartsWith(String text) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector textContains(String text) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector textContains(String text) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector className(String className) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector className(String className) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector classNameMatches(String regex) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector classNameMatches(String regex) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;T> UiSelector className(Class&lt;T> type) {"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;T> UiSelector className(Class&lt;T> type) {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector description(String desc) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector description(String desc) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector descriptionMatches(String regex) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector descriptionMatches(String regex) {"
        errorLine2="                                         ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector descriptionStartsWith(String desc) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector descriptionStartsWith(String desc) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector descriptionContains(String desc) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector descriptionContains(String desc) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector resourceId(String id) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector resourceId(String id) {"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector resourceIdMatches(String regex) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector resourceIdMatches(String regex) {"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector index(final int index) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector instance(final int instance) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector enabled(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector focused(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector focusable(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector scrollable(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector selected(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector checked(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector clickable(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector checkable(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector longClickable(boolean val) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector childSelector(UiSelector selector) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector childSelector(UiSelector selector) {"
        errorLine2="                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector fromParent(UiSelector selector) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector fromParent(UiSelector selector) {"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector packageName(String name) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector packageName(String name) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector packageNameMatches(String regex) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public UiSelector packageNameMatches(String regex) {"
        errorLine2="                                         ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/UiSelector.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;Boolean> gone(final BySelector selector) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;Boolean> gone(final BySelector selector) {"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;Boolean> hasObject(final BySelector selector) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;Boolean> hasObject(final BySelector selector) {"
        errorLine2="                                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;UiObject2> findObject(final BySelector selector) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;UiObject2> findObject(final BySelector selector) {"
        errorLine2="                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;List&lt;UiObject2>> findObjects(final BySelector selector) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SearchCondition&lt;List&lt;UiObject2>> findObjects(final BySelector selector) {"
        errorLine2="                                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> checkable(final boolean isCheckable) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> checked(final boolean isChecked) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> clickable(final boolean isClickable) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> enabled(final boolean isEnabled) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> focusable(final boolean isFocusable) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> focused(final boolean isFocused) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> longClickable(final boolean isLongClickable) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> scrollable(final boolean isScrollable) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> selected(final boolean isSelected) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descMatches(final Pattern regex) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descMatches(final Pattern regex) {"
        errorLine2="                                                                ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descMatches(String regex) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descMatches(String regex) {"
        errorLine2="                                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descEquals(String contentDescription) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descEquals(String contentDescription) {"
        errorLine2="                                                         ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descContains(String substring) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descContains(String substring) {"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descStartsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descStartsWith(String substring) {"
        errorLine2="                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descEndsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> descEndsWith(String substring) {"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textMatches(final Pattern regex) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textMatches(final Pattern regex) {"
        errorLine2="                                                                ~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textMatches(String regex) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textMatches(String regex) {"
        errorLine2="                                                          ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textNotEquals(final String text) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textNotEquals(final String text) {"
        errorLine2="                                                                  ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textEquals(String text) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textEquals(String text) {"
        errorLine2="                                                         ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textContains(String substring) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textContains(String substring) {"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textStartsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textStartsWith(String substring) {"
        errorLine2="                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textEndsWith(String substring) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static UiObject2Condition&lt;Boolean> textEndsWith(String substring) {"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EventCondition&lt;Boolean> newWindow() {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EventCondition&lt;Boolean> scrollFinished(final Direction direction) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EventCondition&lt;Boolean> scrollFinished(final Direction direction) {"
        errorLine2="                                                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/test/uiautomator/Until.java"/>
    </issue>

</issues>
