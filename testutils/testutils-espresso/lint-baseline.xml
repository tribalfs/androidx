<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.2.0-alpha15" type="baseline" client="gradle" dependencies="false" name="AGP (8.2.0-alpha15)" variant="all" version="8.2.0-alpha15">

    <issue
        id="RestrictedApiAndroidX"
        message="UiThreadStatement.runOnUiThread can only be called from within the same library (androidx.test:runner)"
        errorLine1="    if (requestLayout) UiThreadStatement.runOnUiThread { requestLayout() }"
        errorLine2="                                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeExclusionRects.kt"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SwipeToLocation swipeTo(float[] targetLocation) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SwipeToLocation swipeTo(float[] targetLocation) {"
        errorLine2="                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SwipeToLocation flingTo(float[] targetLocation) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SwipeToLocation flingTo(float[] targetLocation) {"
        errorLine2="                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SwipeToLocation swipeToCenter() {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SwipeToLocation flingToCenter() {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Matcher&lt;View> getConstraints() {"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getDescription() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void perform(UiController uiController, View view) {"
        errorLine2="                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void perform(UiController uiController, View view) {"
        errorLine2="                                                   ~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void perform(Instrumentation instrumentation) {"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/testutils/SwipeToLocation.java"/>
    </issue>

</issues>
