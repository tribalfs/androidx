<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.0-beta05" type="baseline" client="gradle" dependencies="false" name="AGP (8.1.0-beta05)" variant="all" version="8.1.0-beta05">

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(5000L)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/java/androidx/tv/foundation/lazy/list/LazyListTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(5000L)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/java/androidx/tv/foundation/lazy/list/LazyListTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(5)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidTest/java/androidx/tv/foundation/lazy/list/LazyScrollTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(5)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidTest/java/androidx/tv/foundation/lazy/grid/LazyScrollTest.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;key&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="        key: ((index: Int) -> Any)? = null,"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;contentType&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="        contentType: (index: Int) -> Any? = { null },"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemContent&apos; with type Function2&lt;? super TvLazyListItemScope, ? super Integer, Unit>."
        errorLine1="        itemContent: @Composable TvLazyListItemScope.(index: Int) -> Unit"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;key&apos; with type Function2&lt;? super Integer, ? super T, ? extends Object>."
        errorLine1="    noinline key: ((index: Int, item: T) -> Any)? = null,"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;key&apos; with type Function2&lt;? super Integer, ? super T, ? extends Object>."
        errorLine1="    noinline key: ((index: Int, item: T) -> Any)? = null,"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method LazyGrid has parameter &apos;slots&apos; with type Function2&lt;? super Density, ? super Constraints, LazyGridSlots>."
        errorLine1="    slots: Density.(Constraints) -> LazyGridSlots,"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;measurePolicy&apos; with type Function2&lt;? super LazyLayoutMeasureScope, ? super Constraints, ? extends MeasureResult>."
        errorLine1="    val measurePolicy = rememberLazyGridMeasurePolicy("
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;LazyLayoutMeasureScope, Constraints, MeasureResult> of &apos;rememberLazyGridMeasurePolicy&apos;."
        errorLine1="private fun rememberLazyGridMeasurePolicy("
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method rememberLazyGridMeasurePolicy has parameter &apos;slots&apos; with type Function2&lt;? super Density, ? super Constraints, LazyGridSlots>."
        errorLine1="    slots: Density.(Constraints) -> LazyGridSlots,"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGrid.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;lineOf&apos; with type Function1&lt;? super Integer, ? extends Integer>."
        errorLine1="        val lineOf: (Int) -> Int = {"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridAnimateScrollScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;Density, Constraints, LazyGridSlots> of &apos;rememberColumnWidthSums&apos;."
        errorLine1="private fun rememberColumnWidthSums("
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;Density, Constraints, LazyGridSlots> of &apos;rememberRowHeightSums&apos;."
        errorLine1="private fun rememberRowHeightSums("
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor GridSlotCache has parameter &apos;calculation&apos; with type Function2&lt;? super Density, ? super Constraints, LazyGridSlots>."
        errorLine1="    private val calculation: Density.(Constraints) -> LazyGridSlots"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method item has parameter &apos;span&apos; with type Function1&lt;? super TvLazyGridItemSpanScope, TvGridItemSpan>."
        errorLine1="        span: (TvLazyGridItemSpanScope.() -> TvGridItemSpan)? = null,"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;key&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="        key: ((index: Int) -> Any)? = null,"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;span&apos; with type Function2&lt;? super TvLazyGridItemSpanScope, ? super Integer, TvGridItemSpan>."
        errorLine1="        span: (TvLazyGridItemSpanScope.(index: Int) -> TvGridItemSpan)? = null,"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;contentType&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="        contentType: (index: Int) -> Any? = { null },"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;itemContent&apos; with type Function2&lt;? super TvLazyGridItemScope, ? super Integer, Unit>."
        errorLine1="        itemContent: @Composable TvLazyGridItemScope.(index: Int) -> Unit"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;span&apos; with type Function2&lt;? super TvLazyGridItemSpanScope, ? super T, TvGridItemSpan>."
        errorLine1="    noinline span: (TvLazyGridItemSpanScope.(item: T) -> TvGridItemSpan)? = null,"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;key&apos; with type Function2&lt;? super Integer, ? super T, ? extends Object>."
        errorLine1="    noinline key: ((index: Int, item: T) -> Any)? = null,"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;span&apos; with type Function3&lt;? super TvLazyGridItemSpanScope, ? super Integer, ? super T, TvGridItemSpan>."
        errorLine1="    noinline span: (TvLazyGridItemSpanScope.(index: Int, item: T) -> TvGridItemSpan)? = null,"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method items has parameter &apos;span&apos; with type Function2&lt;? super TvLazyGridItemSpanScope, ? super T, TvGridItemSpan>."
        errorLine1="    noinline span: (TvLazyGridItemSpanScope.(item: T) -> TvGridItemSpan)? = null,"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;key&apos; with type Function2&lt;? super Integer, ? super T, ? extends Object>."
        errorLine1="    noinline key: ((index: Int, item: T) -> Any)? = null,"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method itemsIndexed has parameter &apos;span&apos; with type Function3&lt;? super TvLazyGridItemSpanScope, ? super Integer, ? super T, TvGridItemSpan>."
        errorLine1="    noinline span: (TvLazyGridItemSpanScope.(index: Int, item: T) -> TvGridItemSpan)? = null,"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridDsl.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method measureLazyGrid has parameter &apos;layout&apos; with type Function3&lt;? super Integer, ? super Integer, ? super Function1&lt;? super PlacementScope, Unit>, ? extends MeasureResult>."
        errorLine1="    layout: (Int, Int, Placeable.PlacementScope.() -> Unit) -> MeasureResult"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridMeasure.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;reverseAware&apos; with type Function1&lt;? super Integer, ? extends Integer>."
        errorLine1="        fun Int.reverseAware() ="
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridMeasure.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;var72d50710&apos; with type Function2&lt;? super TvLazyGridItemSpanScope, ? super Integer, ? extends TvGridItemSpan>."
        errorLine1="                span = span?.let { { span() } } ?: DefaultSpan,"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;vara1157cff&apos; with type Function2&lt;? super TvLazyGridItemSpanScope, ? super Integer, ? extends TvGridItemSpan>."
        errorLine1="                span = span ?: DefaultSpan,"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;TvLazyGridItemSpanScope, Integer, TvGridItemSpan> of &apos;getDefaultSpan&apos;."
        errorLine1="        val DefaultSpan: TvLazyGridItemSpanScope.(Int) -> TvGridItemSpan ="
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor LazyGridInterval has parameter &apos;key&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="    override val key: ((index: Int) -> Any)?,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor LazyGridInterval has parameter &apos;span&apos; with type Function2&lt;? super TvLazyGridItemSpanScope, ? super Integer, TvGridItemSpan>."
        errorLine1="    val span: TvLazyGridItemSpanScope.(Int) -> TvGridItemSpan,"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;TvLazyGridItemSpanScope, Integer, TvGridItemSpan> of &apos;getSpan&apos;."
        errorLine1="    val span: TvLazyGridItemSpanScope.(Int) -> TvGridItemSpan,"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor LazyGridInterval has parameter &apos;type&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="    override val type: ((index: Int) -> Any?),"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor LazyGridInterval has parameter &apos;item&apos; with type Function2&lt;? super TvLazyGridItemScope, ? super Integer, Unit>."
        errorLine1="    val item: @Composable TvLazyGridItemScope.(Int) -> Unit"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;TvLazyGridItemScope, Integer, Unit> of &apos;getItem&apos;."
        errorLine1="    val item: @Composable TvLazyGridItemScope.(Int) -> Unit"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/LazyGridSpanLayoutProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;keyFactory&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="                    val keyFactory = it.value.key"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/layout/LazyLayoutKeyIndexMap.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;indexForKeyMapping&apos; with type Function1&lt;? super Object, ? extends Integer>."
        errorLine1="            val indexForKeyMapping: (Any) -> Int = { needle ->"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/layout/LazyLayoutSemantics.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;scrollByAction&apos; with type Function2&lt;? super Float, ? super Float, ? extends Boolean>."
        errorLine1="            val scrollByAction: ((x: Float, y: Float) -> Boolean)? = if (userScrollEnabled) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/layout/LazyLayoutSemantics.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;scrollToIndexAction&apos; with type Function1&lt;? super Integer, ? extends Boolean>."
        errorLine1="            val scrollToIndexAction: ((Int) -> Boolean)? = if (userScrollEnabled) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/layout/LazyLayoutSemantics.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;measurePolicy&apos; with type Function2&lt;? super LazyLayoutMeasureScope, ? super Constraints, ? extends MeasureResult>."
        errorLine1="    val measurePolicy = rememberLazyListMeasurePolicy("
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyList.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;LazyLayoutMeasureScope, Constraints, MeasureResult> of &apos;rememberLazyListMeasurePolicy&apos;."
        errorLine1="private fun rememberLazyListMeasurePolicy("
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyList.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;reverseAware&apos; with type Function1&lt;? super Integer, ? extends Integer>."
        errorLine1="        fun Int.reverseAware() ="
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/LazyListMeasure.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method setPrefetchInfoRetriever$lint_module has parameter &apos;&lt;set-?>&apos; with type Function1&lt;? super Integer, ? extends List&lt;Pair&lt;Integer, Constraints>>>."
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/TvLazyGridState.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function1&lt;Integer, List&lt;Pair&lt;Integer, Constraints>>> of &apos;getPrefetchInfoRetriever$lint_module&apos;."
        errorLine1="    internal var prefetchInfoRetriever: (line: Int) -> List&lt;Pair&lt;Int, Constraints>> by"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/grid/TvLazyGridState.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor TvLazyListInterval has parameter &apos;key&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="    override val key: ((index: Int) -> Any)?,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/TvLazyListIntervalContent.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor TvLazyListInterval has parameter &apos;type&apos; with type Function1&lt;? super Integer, ? extends Object>."
        errorLine1="    override val type: ((index: Int) -> Any?),"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/TvLazyListIntervalContent.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor TvLazyListInterval has parameter &apos;item&apos; with type Function2&lt;? super TvLazyListItemScope, ? super Integer, Unit>."
        errorLine1="    val item: @Composable TvLazyListItemScope.(index: Int) -> Unit"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/TvLazyListIntervalContent.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function2&lt;TvLazyListItemScope, Integer, Unit> of &apos;getItem&apos;."
        errorLine1="    val item: @Composable TvLazyListItemScope.(index: Int) -> Unit"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/tv/foundation/lazy/list/TvLazyListIntervalContent.kt"/>
    </issue>

</issues>
