// Signature format: 3.0
package androidx.ui.core {

  public final class ComplexMeasureBox extends com.google.r4a.Component {
    ctor public ComplexMeasureBox(kotlin.jvm.functions.Function1<? super androidx.ui.core.ComplexMeasureBoxReceiver,kotlin.Unit> block);
    method public void compose();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.ComplexMeasureBoxReceiver,kotlin.Unit> getBlock();
    method public void setBlock(kotlin.jvm.functions.Function1<? super androidx.ui.core.ComplexMeasureBoxReceiver,kotlin.Unit> p);
    field public static final androidx.ui.core.ComplexMeasureBox.Companion! Companion;
  }

  public static final class ComplexMeasureBox.Companion {
  }

  public final class ComplexMeasureBoxReceiver implements androidx.ui.core.DensityReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public void layout(kotlin.jvm.functions.Function2<? super androidx.ui.core.LayoutBlockReceiver,? super androidx.ui.core.Constraints,kotlin.Unit> block);
    method public void maxIntrinsicHeight(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    method public void maxIntrinsicWidth(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    method public void minIntrinsicHeight(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    method public void minIntrinsicWidth(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    property public androidx.ui.core.Density density;
  }

  public final class CraneWrapper extends com.google.r4a.Component {
    ctor public CraneWrapper(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
  }

  public final class CurrentTextStyle extends com.google.r4a.Component {
    ctor public CurrentTextStyle(kotlin.jvm.functions.Function1<? super androidx.ui.painting.TextStyle,kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function1<androidx.ui.painting.TextStyle,kotlin.Unit> getChildren();
    method public void setChildren(kotlin.jvm.functions.Function1<? super androidx.ui.painting.TextStyle,kotlin.Unit> p);
  }

  public final class CurrentTextStyleProvider extends com.google.r4a.Component {
    ctor public CurrentTextStyleProvider(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public androidx.ui.painting.TextStyle? getValue();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setValue(androidx.ui.painting.TextStyle? p);
    property public final androidx.ui.painting.TextStyle? value;
  }

  public final class Draw extends com.google.r4a.Component {
    ctor public Draw(kotlin.jvm.functions.Function3<? super androidx.ui.core.DensityReceiver,? super androidx.ui.painting.Canvas,? super androidx.ui.core.PxSize,kotlin.Unit> onPaint);
    method public void compose();
    method public kotlin.jvm.functions.Function3<androidx.ui.core.DensityReceiver,androidx.ui.painting.Canvas,androidx.ui.core.PxSize,kotlin.Unit> getOnPaint();
    method public void setOnPaint(kotlin.jvm.functions.Function3<? super androidx.ui.core.DensityReceiver,? super androidx.ui.painting.Canvas,? super androidx.ui.core.PxSize,kotlin.Unit> p);
  }

  public final class DrawKt {
    ctor public DrawKt();
    method public static void DrawComposable(kotlin.jvm.functions.Function3<? super androidx.ui.core.DensityReceiver,? super androidx.ui.painting.Canvas,? super androidx.ui.core.PxSize,kotlin.Unit> onPaint);
  }

  public final class IntrinsicMeasurementsReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.IntPx maxIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx maxIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    method public androidx.ui.core.IntPx minIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx minIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
  }

  public final class LayoutBlockReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void layoutResult(androidx.ui.core.IntPx width, androidx.ui.core.IntPx height, kotlin.jvm.functions.Function1<? super androidx.ui.core.PositioningBlockReceiver,kotlin.Unit> block);
    method public androidx.ui.core.IntPx maxIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx maxIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    method public androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints constraints);
    method public androidx.ui.core.IntPx minIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx minIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
  }

  public interface LayoutCoordinates {
    method public androidx.ui.core.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates child, androidx.ui.core.PxPosition childLocal);
    method public androidx.ui.core.LayoutCoordinates? getParentCoordinates();
    method public androidx.ui.core.PxPosition getPosition();
    method public androidx.ui.core.PxSize getSize();
    method public androidx.ui.core.PxPosition globalToLocal(androidx.ui.core.PxPosition global);
    method public androidx.ui.core.PxPosition localToGlobal(androidx.ui.core.PxPosition local);
    property public abstract androidx.ui.core.PxPosition position;
    property public abstract androidx.ui.core.PxSize size;
  }

  public final class LayoutKt {
    ctor public LayoutKt();
    method public static void OnChildPositioned(kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,kotlin.Unit> onPositioned, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void OnPositioned(kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,kotlin.Unit> onPositioned);
  }

  public final class MeasureBox extends com.google.r4a.Component {
    ctor public MeasureBox(kotlin.jvm.functions.Function2<? super androidx.ui.core.MeasureBoxReceiver,? super androidx.ui.core.Constraints,kotlin.Unit> block);
    method public void compose();
    method public kotlin.jvm.functions.Function2<androidx.ui.core.MeasureBoxReceiver,androidx.ui.core.Constraints,kotlin.Unit> getBlock();
    method public void setBlock(kotlin.jvm.functions.Function2<? super androidx.ui.core.MeasureBoxReceiver,? super androidx.ui.core.Constraints,kotlin.Unit> p);
  }

  public final class MeasureBoxReceiver implements androidx.ui.core.DensityReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public void layout(androidx.ui.core.IntPx width, androidx.ui.core.IntPx height, kotlin.jvm.functions.Function1<? super androidx.ui.core.PositioningBlockReceiver,kotlin.Unit> block);
    method public androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints constraints);
  }

  public final class PointerInput extends com.google.r4a.Component {
    ctor public PointerInput(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public kotlin.jvm.functions.Function2<androidx.ui.core.PointerInputChange,androidx.ui.core.PointerEventPass,androidx.ui.core.PointerInputChange> getPointerInputHandler();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setPointerInputHandler(kotlin.jvm.functions.Function2<? super androidx.ui.core.PointerInputChange,? super androidx.ui.core.PointerEventPass,androidx.ui.core.PointerInputChange> p);
    property public final kotlin.jvm.functions.Function2<androidx.ui.core.PointerInputChange,androidx.ui.core.PointerEventPass,androidx.ui.core.PointerInputChange> pointerInputHandler;
  }

  public final class SemanticsKt {
    ctor public SemanticsKt();
    method public static void Semantics(kotlin.jvm.functions.Function0<kotlin.Unit> children, boolean container = false, boolean explicitChildNodes = false, boolean enabled = false, boolean checked = false, boolean selected = false, boolean button = false, boolean header = false, boolean textField = false, boolean focused = false, boolean inMutuallyExclusiveGroup = false, boolean obscured = false, boolean scopesRoute = false, boolean namesRoute = false, boolean hidden = false, String? label = null, String? value = null, String? increasedValue = null, String? decreasedValue = null, String? hint = null, androidx.ui.engine.text.TextDirection? textDirection = null, androidx.ui.core.semantics.SemanticsSortKey? sortKey = null, String? testTag = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onTap = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onLongPress = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onScrollLeft = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onScrollRight = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onScrollUp = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onScrollDown = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onIncrease = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onDecrease = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onCopy = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onCut = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onPaste = null, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onMoveCursorForwardByCharacter = null, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onMoveCursorBackwardByCharacter = null, kotlin.jvm.functions.Function1<? super androidx.ui.services.text_editing.TextSelection,kotlin.Unit>? onSetSelection = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onDidGainAccessibilityFocus = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onDidLoseAccessibilityFocus = null);
  }

  public final class Text extends com.google.r4a.Component {
    ctor public Text();
    method public void compose();
    method public Integer? getMaxLines();
    method public androidx.ui.rendering.paragraph.TextOverflow getOverflow();
    method public androidx.ui.services.text_editing.TextSelection? getSelection();
    method public androidx.ui.painting.Color getSelectionColor();
    method public kotlin.Pair<androidx.ui.engine.geometry.Offset,androidx.ui.engine.geometry.Offset>? getSelectionPosition();
    method public boolean getSoftWrap();
    method public androidx.ui.painting.TextSpan getText();
    method public androidx.ui.engine.text.TextAlign getTextAlign();
    method public androidx.ui.engine.text.TextDirection getTextDirection();
    method public float getTextScaleFactor();
    method public void setMaxLines(Integer? p);
    method public void setOverflow(androidx.ui.rendering.paragraph.TextOverflow p);
    method public void setSelection(androidx.ui.services.text_editing.TextSelection? p);
    method public void setSelectionColor(androidx.ui.painting.Color p);
    method public void setSelectionPosition(kotlin.Pair<androidx.ui.engine.geometry.Offset,androidx.ui.engine.geometry.Offset>? p);
    method public void setSoftWrap(boolean p);
    method public void setText(androidx.ui.painting.TextSpan p);
    method public void setTextAlign(androidx.ui.engine.text.TextAlign p);
    method public void setTextDirection(androidx.ui.engine.text.TextDirection p);
    method public void setTextScaleFactor(float p);
    property public final Integer? maxLines;
    property public final androidx.ui.rendering.paragraph.TextOverflow overflow;
    property public final androidx.ui.services.text_editing.TextSelection? selection;
    property public final androidx.ui.painting.Color selectionColor;
    property public final kotlin.Pair<androidx.ui.engine.geometry.Offset,androidx.ui.engine.geometry.Offset>? selectionPosition;
    property public final boolean softWrap;
    property public final androidx.ui.painting.TextSpan text;
    property public final androidx.ui.engine.text.TextAlign textAlign;
    property public final androidx.ui.engine.text.TextDirection textDirection;
    property public final float textScaleFactor;
    field public androidx.ui.painting.TextSpan text;
  }

  public final class TextKt {
    ctor public TextKt();
    method public static void TextComposable(androidx.ui.painting.TextSpan text, androidx.ui.engine.text.TextAlign textAlign = TextAlign.START, androidx.ui.engine.text.TextDirection textDirection = TextDirection.LTR, boolean softWrap = true, androidx.ui.rendering.paragraph.TextOverflow overflow = TextOverflow.CLIP, float textScaleFactor = 1.0f, Integer? maxLines = null, androidx.ui.services.text_editing.TextSelection? selection = null);
  }

  public final class WrapperKt {
    ctor public WrapperKt();
    method public static void CraneWrapperComposable(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @CheckResult("+") public static com.google.r4a.Effect<androidx.ui.core.Density> ambientDensity();
    method public static com.google.r4a.Ambient<android.content.Context> getContextAmbient();
    method @CheckResult("+") public static <R> com.google.r4a.Effect<R> withDensity(kotlin.jvm.functions.Function1<? super androidx.ui.core.DensityReceiver,? extends R> block);
  }

}

package androidx.ui.core.gesture {

  public final class PressGestureDetectorKt {
    ctor public PressGestureDetectorKt();
    method public static void PressGestureDetector(kotlin.jvm.functions.Function1<? super androidx.ui.core.PxPosition,kotlin.Unit>? onPress = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onRelease = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onCancel = null, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class PressIndicatorGestureDetector extends com.google.r4a.Component {
    ctor public PressIndicatorGestureDetector(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnCancel();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.PxPosition,kotlin.Unit>? getOnStart();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnStop();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setOnCancel(kotlin.jvm.functions.Function0<kotlin.Unit>? value);
    method public void setOnStart(kotlin.jvm.functions.Function1<? super androidx.ui.core.PxPosition,kotlin.Unit>? p);
    method public void setOnStop(kotlin.jvm.functions.Function0<kotlin.Unit>? value);
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onCancel;
    property public final kotlin.jvm.functions.Function1<androidx.ui.core.PxPosition,kotlin.Unit>? onStart;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onStop;
  }

  public final class PressReleasedGestureDetector extends com.google.r4a.Component {
    ctor public PressReleasedGestureDetector(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public boolean getConsumeDownOnStart();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnRelease();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setConsumeDownOnStart(boolean value);
    method public void setOnRelease(kotlin.jvm.functions.Function0<kotlin.Unit>? value);
    property public final boolean consumeDownOnStart;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onRelease;
  }

}

package androidx.ui.core.vectorgraphics {

  public final class VectorKt {
    ctor public VectorKt();
    method public static android.view.View? adoptVectorGraphic(Object? parent, Object? child);
    method public static void group(String name = "", float rotate = 0.0f, float pivotX = 0.0f, float pivotY = 0.0f, float scaleX = 1.0f, float scaleY = 1.0f, float translateX = 0.0f, float translateY = 0.0f, Object clipPathData = EMPTY_PATH, kotlin.jvm.functions.Function0<kotlin.Unit> childNodes);
    method public static androidx.ui.vectorgraphics.PathNode[] parsePathNodes(String? pathStr);
    method public static void path(Object pathData, String name = "", Object? fill = null, float fillAlpha = 1.0f, Object? stroke = null, float strokeAlpha = 1.0f, float strokeLineWidth = 0.0f, androidx.ui.painting.StrokeCap strokeLineCap = DEFAULT_STROKE_LINE_CAP, androidx.ui.painting.StrokeJoin strokeLineJoin = DEFAULT_STROKE_LINE_JOIN, float strokeLineMiter = 4.0f);
    method public static void vector(String name = "", float viewportWidth, float viewportHeight, float defaultWidth = viewportWidth, float defaultHeight = viewportHeight, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

}

package androidx.ui.core.vectorgraphics.compat {

  public final class VectorResourceKt {
    ctor public VectorResourceKt();
    method public static void vectorResource(android.content.res.Resources res, int resId);
  }

}

