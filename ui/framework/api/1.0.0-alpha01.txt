// Signature format: 3.0
package androidx.ui.core {

  @Deprecated public final class ComplexMeasureBox extends com.google.r4a.Component {
    ctor @Deprecated public ComplexMeasureBox(kotlin.jvm.functions.Function1<? super androidx.ui.core.ComplexMeasureBoxReceiver,kotlin.Unit> block);
    method @Deprecated public void compose();
    method @Deprecated public kotlin.jvm.functions.Function1<androidx.ui.core.ComplexMeasureBoxReceiver,kotlin.Unit> getBlock();
    method @Deprecated public void setBlock(kotlin.jvm.functions.Function1<? super androidx.ui.core.ComplexMeasureBoxReceiver,kotlin.Unit> p);
    field @Deprecated public static final androidx.ui.core.ComplexMeasureBox.Companion! Companion;
  }

  @Deprecated public static final class ComplexMeasureBox.Companion {
  }

  public final class ComplexMeasureBoxReceiver implements androidx.ui.core.DensityReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public void layout(kotlin.jvm.functions.Function2<? super androidx.ui.core.LayoutBlockReceiver,? super androidx.ui.core.Constraints,kotlin.Unit> block);
    method public void maxIntrinsicHeight(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    method public void maxIntrinsicWidth(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    method public void minIntrinsicHeight(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    method public void minIntrinsicWidth(kotlin.jvm.functions.Function2<? super androidx.ui.core.IntrinsicMeasurementsReceiver,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> block);
    property public androidx.ui.core.Density density;
  }

  public final class Draw extends com.google.r4a.Component {
    ctor public Draw(kotlin.jvm.functions.Function3<? super androidx.ui.core.DensityReceiver,? super androidx.ui.painting.Canvas,? super androidx.ui.core.PxSize,kotlin.Unit> onPaint);
    method public void compose();
    method public kotlin.jvm.functions.Function3<androidx.ui.core.DensityReceiver,androidx.ui.painting.Canvas,androidx.ui.core.PxSize,kotlin.Unit> getOnPaint();
    method public void setOnPaint(kotlin.jvm.functions.Function3<? super androidx.ui.core.DensityReceiver,? super androidx.ui.painting.Canvas,? super androidx.ui.core.PxSize,kotlin.Unit> p);
  }

  public final class IntrinsicMeasurementsReceiver implements androidx.ui.core.DensityReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public androidx.ui.core.IntPx maxIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx maxIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    method public androidx.ui.core.IntPx minIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx minIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    property public androidx.ui.core.Density density;
  }

  public final class LayoutBlockReceiver implements androidx.ui.core.DensityReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public void layoutResult(androidx.ui.core.IntPx width, androidx.ui.core.IntPx height, kotlin.jvm.functions.Function1<? super androidx.ui.core.PositioningBlockReceiver,kotlin.Unit> block);
    method public androidx.ui.core.IntPx maxIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx maxIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    method public androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints constraints);
    method public androidx.ui.core.IntPx minIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx minIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    property public androidx.ui.core.Density density;
  }

  public interface LayoutCoordinates {
    method public androidx.ui.core.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates child, androidx.ui.core.PxPosition childLocal);
    method public androidx.ui.core.LayoutCoordinates? getParentCoordinates();
    method public androidx.ui.core.PxPosition getPosition();
    method public androidx.ui.core.PxSize getSize();
    method public androidx.ui.core.PxPosition globalToLocal(androidx.ui.core.PxPosition global);
    method public androidx.ui.core.PxPosition localToGlobal(androidx.ui.core.PxPosition local);
    property public abstract androidx.ui.core.PxPosition position;
    property public abstract androidx.ui.core.PxSize size;
  }

  public final class LayoutKt {
    ctor public LayoutKt();
    method public static void OnChildPositioned(kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,kotlin.Unit> onPositioned, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void OnPositioned(kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,kotlin.Unit> onPositioned);
  }

  public interface Measurable {
    method public Object? getParentData();
    property public abstract Object? parentData;
  }

  @Deprecated public final class MeasureBox extends com.google.r4a.Component {
    ctor @Deprecated public MeasureBox(kotlin.jvm.functions.Function2<? super androidx.ui.core.MeasureBoxReceiver,? super androidx.ui.core.Constraints,kotlin.Unit> block);
    method @Deprecated public void compose();
    method @Deprecated public kotlin.jvm.functions.Function2<androidx.ui.core.MeasureBoxReceiver,androidx.ui.core.Constraints,kotlin.Unit> getBlock();
    method @Deprecated public void setBlock(kotlin.jvm.functions.Function2<? super androidx.ui.core.MeasureBoxReceiver,? super androidx.ui.core.Constraints,kotlin.Unit> p);
  }

  public final class MeasureBoxReceiver implements androidx.ui.core.DensityReceiver {
    method public java.util.List<androidx.ui.core.Measurable> collect(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public void layout(androidx.ui.core.IntPx width, androidx.ui.core.IntPx height, kotlin.jvm.functions.Function1<? super androidx.ui.core.PositioningBlockReceiver,kotlin.Unit> block);
    method public androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints constraints);
  }

  public final class ParentDataKt {
    ctor public ParentDataKt();
    method public static void ParentData(Object data, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public class Placeable {
    ctor public Placeable(internal kotlin.jvm.functions.Function2<? super androidx.ui.core.IntPx,? super androidx.ui.core.IntPx,kotlin.Unit> placeBlock);
    method public androidx.ui.core.IntPx getHeight();
    method public androidx.ui.core.IntPx getWidth();
    property public androidx.ui.core.IntPx height;
    property public androidx.ui.core.IntPx width;
  }

  public final class PointerInput extends com.google.r4a.Component {
    ctor public PointerInput(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public kotlin.jvm.functions.Function2<androidx.ui.core.PointerInputChange,androidx.ui.core.PointerEventPass,androidx.ui.core.PointerInputChange> getPointerInputHandler();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setPointerInputHandler(kotlin.jvm.functions.Function2<? super androidx.ui.core.PointerInputChange,? super androidx.ui.core.PointerEventPass,androidx.ui.core.PointerInputChange> p);
    property public final kotlin.jvm.functions.Function2<androidx.ui.core.PointerInputChange,androidx.ui.core.PointerEventPass,androidx.ui.core.PointerInputChange> pointerInputHandler;
  }

  public final class PositioningBlockReceiver {
    ctor public PositioningBlockReceiver();
    method public void place(androidx.ui.core.Placeable, androidx.ui.core.IntPx x, androidx.ui.core.IntPx y);
    method public void place(androidx.ui.core.Placeable, androidx.ui.core.Px x, androidx.ui.core.Px y);
  }

  public final class SemanticsKt {
    ctor public SemanticsKt();
    method public static void Semantics(kotlin.jvm.functions.Function0<kotlin.Unit> children, boolean container = false, boolean explicitChildNodes = false, Boolean? enabled = null, Boolean? checked = null, Boolean? selected = null, Boolean? button = null, Boolean? inMutuallyExclusiveGroup = null, Boolean? hidden = null, String? label = null, String? value = null, androidx.ui.engine.text.TextDirection? textDirection = null, String? testTag = null, java.util.List<? extends androidx.ui.core.semantics.SemanticsAction<?>> actions = emptyList());
  }

  public final class SingleCompositionIntrinsicMeasurementsReceiver implements androidx.ui.core.DensityReceiver {
    method public androidx.ui.core.Density getDensity();
    method public androidx.ui.core.IntPx maxIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx maxIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    method public androidx.ui.core.IntPx minIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx minIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    property public androidx.ui.core.Density density;
  }

  public final class SingleCompositionLayoutBlockReceiver implements androidx.ui.core.DensityReceiver {
    method public androidx.ui.core.Density getDensity();
    method public void layoutResult(androidx.ui.core.IntPx width, androidx.ui.core.IntPx height, kotlin.jvm.functions.Function1<? super androidx.ui.core.PositioningBlockReceiver,kotlin.Unit> block);
    method public androidx.ui.core.IntPx maxIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx maxIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    method public androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints constraints);
    method public androidx.ui.core.IntPx minIntrinsicHeight(androidx.ui.core.Measurable, androidx.ui.core.IntPx w);
    method public androidx.ui.core.IntPx minIntrinsicWidth(androidx.ui.core.Measurable, androidx.ui.core.IntPx h);
    property public androidx.ui.core.Density density;
  }

  public final class SingleCompositionLayoutKt {
    ctor public SingleCompositionLayoutKt();
    method public static void ComplexLayout(kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionLayoutBlockReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.Constraints,kotlin.Unit> layoutBlock, kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionIntrinsicMeasurementsReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> minIntrinsicWidthBlock, kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionIntrinsicMeasurementsReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> maxIntrinsicWidthBlock, kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionIntrinsicMeasurementsReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> minIntrinsicHeightBlock, kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionIntrinsicMeasurementsReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.IntPx,androidx.ui.core.IntPx> maxIntrinsicHeightBlock, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void Layout(kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionMeasureBoxReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.Constraints,kotlin.Unit> layoutBlock, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void MultiChildLayout(kotlin.jvm.functions.Function0<kotlin.Unit>[] childrenArray, kotlin.jvm.functions.Function3<? super androidx.ui.core.SingleCompositionMeasureBoxReceiver,? super java.util.List<? extends androidx.ui.core.Measurable>,? super androidx.ui.core.Constraints,kotlin.Unit> layoutBlock);
    method public static void WithConstraints(kotlin.jvm.functions.Function1<? super androidx.ui.core.Constraints,kotlin.Unit> children);
  }

  public final class SingleCompositionMeasureBoxReceiver implements androidx.ui.core.DensityReceiver {
    method public operator java.util.List<androidx.ui.core.Measurable> get(java.util.List<? extends androidx.ui.core.Measurable>, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public androidx.ui.core.Density getDensity();
    method public void layout(androidx.ui.core.IntPx width, androidx.ui.core.IntPx height, kotlin.jvm.functions.Function1<? super androidx.ui.core.PositioningBlockReceiver,kotlin.Unit> block);
    method public androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints constraints);
  }

  public final class TestTagProviderKt {
    ctor public TestTagProviderKt();
    method public static void TestTag(String tag, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static String getDefaultTestTag();
    method public static com.google.r4a.Ambient<java.lang.String> getTestTagAmbient();
  }

  public final class Text extends com.google.r4a.Component {
    ctor public Text();
    method public void compose();
    method public Integer? getMaxLines();
    method public androidx.ui.rendering.paragraph.TextOverflow getOverflow();
    method public androidx.ui.services.text_editing.TextSelection? getSelection();
    method public androidx.ui.painting.Color getSelectionColor();
    method public kotlin.Pair<androidx.ui.engine.geometry.Offset,androidx.ui.engine.geometry.Offset>? getSelectionPosition();
    method public boolean getSoftWrap();
    method public androidx.ui.painting.TextSpan getText();
    method public androidx.ui.engine.text.TextAlign getTextAlign();
    method public androidx.ui.engine.text.TextDirection getTextDirection();
    method public float getTextScaleFactor();
    method public void setMaxLines(Integer? p);
    method public void setOverflow(androidx.ui.rendering.paragraph.TextOverflow p);
    method public void setSelection(androidx.ui.services.text_editing.TextSelection? p);
    method public void setSelectionColor(androidx.ui.painting.Color p);
    method public void setSelectionPosition(kotlin.Pair<androidx.ui.engine.geometry.Offset,androidx.ui.engine.geometry.Offset>? p);
    method public void setSoftWrap(boolean p);
    method public void setText(androidx.ui.painting.TextSpan p);
    method public void setTextAlign(androidx.ui.engine.text.TextAlign p);
    method public void setTextDirection(androidx.ui.engine.text.TextDirection p);
    method public void setTextScaleFactor(float p);
    property public final Integer? maxLines;
    property public final androidx.ui.rendering.paragraph.TextOverflow overflow;
    property public final androidx.ui.services.text_editing.TextSelection? selection;
    property public final androidx.ui.painting.Color selectionColor;
    property public final kotlin.Pair<androidx.ui.engine.geometry.Offset,androidx.ui.engine.geometry.Offset>? selectionPosition;
    property public final boolean softWrap;
    property public final androidx.ui.painting.TextSpan text;
    property public final androidx.ui.engine.text.TextAlign textAlign;
    property public final androidx.ui.engine.text.TextDirection textDirection;
    property public final float textScaleFactor;
    field public androidx.ui.painting.TextSpan text;
  }

  public final class TextKt {
    ctor public TextKt();
    method public static void CurrentTextStyleProvider(androidx.ui.painting.TextStyle value, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static com.google.r4a.Effect<androidx.ui.painting.TextStyle> currentTextStyle();
  }

  public final class WrapperKt {
    ctor public WrapperKt();
    method public static void CraneWrapper(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @CheckResult("+") public static com.google.r4a.Effect<androidx.ui.core.Density> ambientDensity();
    method public static com.google.r4a.Ambient<android.content.Context> getContextAmbient();
    method public static com.google.r4a.Ambient<androidx.ui.core.Density> getDensityAmbient();
    method @CheckResult("+") public static <R> com.google.r4a.Effect<R> withDensity(kotlin.jvm.functions.Function1<? super androidx.ui.core.DensityReceiver,? extends R> block);
  }

}

package androidx.ui.core.gesture {

  public final class ConstantsKt {
    ctor public ConstantsKt();
    method public static androidx.ui.core.Duration getDoubleTapMinTime();
    method public static androidx.ui.core.Dp getDoubleTapSlop();
    method public static androidx.ui.core.Duration getDoubleTapTimeout();
    method public static androidx.ui.core.Dp getDoubleTapTouchSlop();
    method public static androidx.ui.core.Dp getHoverTapSlop();
    method public static androidx.ui.core.Duration getHoverTapTimeout();
    method public static androidx.ui.core.Duration getJumpTapTimeout();
    method public static androidx.ui.core.Duration getLongPressTimeout();
    method public static androidx.ui.core.Dp getMaxFlingVelocity();
    method public static androidx.ui.core.Dp getMinFlingVelocity();
    method public static float getPagingTouchSlop();
    method public static float getPanSlop();
    method public static androidx.ui.core.Duration getPressTimeout();
    method public static androidx.ui.core.Dp getScaleSlop();
    method public static androidx.ui.core.Dp getTouchSlop();
    method public static androidx.ui.core.Dp getWindowTouchSlop();
    method public static androidx.ui.core.Duration getZoomControlsTimeout();
  }

  public final class DragGestureDetector extends com.google.r4a.Component {
    ctor public DragGestureDetector(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.Direction,java.lang.Boolean>? getCanDrag();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public androidx.ui.core.gesture.DragObserver? getDragObserver();
    method public void setCanDrag(kotlin.jvm.functions.Function1<? super androidx.ui.core.Direction,java.lang.Boolean>? value);
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setDragObserver(androidx.ui.core.gesture.DragObserver? value);
    property public final kotlin.jvm.functions.Function1<androidx.ui.core.Direction,java.lang.Boolean>? canDrag;
    property public final androidx.ui.core.gesture.DragObserver? dragObserver;
  }

  public interface DragObserver {
    method public default androidx.ui.core.PxPosition onDrag(androidx.ui.core.PxPosition dragDistance);
    method public default void onStart();
    method public default void onStop(androidx.ui.core.PxPosition velocity);
  }

  public final class PressGestureDetectorKt {
    ctor public PressGestureDetectorKt();
    method public static void PressGestureDetector(kotlin.jvm.functions.Function1<? super androidx.ui.core.PxPosition,kotlin.Unit>? onPress = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onRelease = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onCancel = null, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class PressIndicatorGestureDetector extends com.google.r4a.Component {
    ctor public PressIndicatorGestureDetector(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnCancel();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.PxPosition,kotlin.Unit>? getOnStart();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnStop();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setOnCancel(kotlin.jvm.functions.Function0<kotlin.Unit>? value);
    method public void setOnStart(kotlin.jvm.functions.Function1<? super androidx.ui.core.PxPosition,kotlin.Unit>? p);
    method public void setOnStop(kotlin.jvm.functions.Function0<kotlin.Unit>? value);
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onCancel;
    property public final kotlin.jvm.functions.Function1<androidx.ui.core.PxPosition,kotlin.Unit>? onStart;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onStop;
  }

  public final class PressReleasedGestureDetector extends com.google.r4a.Component {
    ctor public PressReleasedGestureDetector(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public boolean getConsumeDownOnStart();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnRelease();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setConsumeDownOnStart(boolean value);
    method public void setOnRelease(kotlin.jvm.functions.Function0<kotlin.Unit>? value);
    property public final boolean consumeDownOnStart;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onRelease;
  }

}

package androidx.ui.core.gesture.util {

  public final class PolyFitLeastSquaresKt {
    ctor public PolyFitLeastSquaresKt();
  }

  public final class VelocityTracker {
    ctor public VelocityTracker();
    method public void addPosition(androidx.ui.core.Timestamp time, androidx.ui.core.PxPosition position);
    method public androidx.ui.core.Velocity calculateVelocity();
    method public void resetTracking();
  }

  public final class VelocityTrackerKt {
    ctor public VelocityTrackerKt();
  }

}

package androidx.ui.core.vectorgraphics {

  public interface Brush {
    method public void applyBrush(androidx.ui.painting.Paint p);
  }

  public final class BrushKt {
    ctor public BrushKt();
    method public static androidx.ui.core.vectorgraphics.Brush getEmptyBrush();
    method public static androidx.ui.core.vectorgraphics.Brush obtainBrush(Object? brush);
  }

  public final class LinearGradient implements androidx.ui.core.vectorgraphics.Brush {
    ctor public LinearGradient(kotlin.Pair<androidx.ui.painting.Color,java.lang.Float>[] colorStops, float startX, float startY, float endX, float endY, androidx.ui.painting.TileMode tileMode);
    method public void applyBrush(androidx.ui.painting.Paint p);
    method public float getEndX();
    method public float getEndY();
    method public float getStartX();
    method public float getStartY();
    method public androidx.ui.painting.TileMode getTileMode();
  }

  public final class PathBuilder {
    ctor public PathBuilder();
    method public androidx.ui.core.vectorgraphics.PathBuilder arcTo(float horizontalEllipseRadius, float verticalEllipseRadius, float theta, float largeArcFlag, float sweepFlag, float x1, float y1);
    method public androidx.ui.core.vectorgraphics.PathBuilder arcToRelative(float a, float b, float theta, float largeArcFlag, float sweepFlag, float x1, float y1);
    method public androidx.ui.core.vectorgraphics.PathBuilder close();
    method public androidx.ui.core.vectorgraphics.PathBuilder curveTo(float x1, float y1, float x2, float y2, float x3, float y3);
    method public androidx.ui.core.vectorgraphics.PathBuilder curveToRelative(float dx1, float dy1, float dx2, float dy2, float dx3, float dy3);
    method public androidx.ui.core.vectorgraphics.PathNode[] getNodes();
    method public androidx.ui.core.vectorgraphics.PathBuilder horizontalLineTo(float x);
    method public androidx.ui.core.vectorgraphics.PathBuilder horizontalLineToRelative(float x);
    method public androidx.ui.core.vectorgraphics.PathBuilder lineTo(float x, float y);
    method public androidx.ui.core.vectorgraphics.PathBuilder lineToRelative(float x, float y);
    method public androidx.ui.core.vectorgraphics.PathBuilder moveTo(float x, float y);
    method public androidx.ui.core.vectorgraphics.PathBuilder moveToRelative(float x, float y);
    method public androidx.ui.core.vectorgraphics.PathBuilder quadTo(float x1, float y1, float x2, float y2);
    method public androidx.ui.core.vectorgraphics.PathBuilder quadToRelative(float x1, float y1, float x2, float y2);
    method public androidx.ui.core.vectorgraphics.PathBuilder reflectiveCurveTo(float x1, float y1, float x2, float y2);
    method public androidx.ui.core.vectorgraphics.PathBuilder reflectiveCurveToRelative(float x1, float y1, float x2, float y2);
    method public androidx.ui.core.vectorgraphics.PathBuilder reflectiveQuadTo(float x1, float y1);
    method public androidx.ui.core.vectorgraphics.PathBuilder reflectiveQuadToRelative(float x1, float y1);
    method public androidx.ui.core.vectorgraphics.PathBuilder verticalLineTo(float y);
    method public androidx.ui.core.vectorgraphics.PathBuilder verticalLineToRelative(float y);
  }

  public enum PathCommand {
    method public static androidx.ui.core.vectorgraphics.PathCommand! pathCommandFromKey(char) throws java.lang.IllegalArgumentException;
    method public char toKey();
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand ArcTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand Close;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand CurveTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand HorizontalLineTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand LineTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand MoveTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand QuadTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand ReflectiveCurveTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand ReflectiveQuadTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeArcTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeClose;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeCurveTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeHorizontalTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeLineTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeMoveTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeQuadTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeReflectiveCurveTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeReflectiveQuadTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand RelativeVerticalTo;
    enum_constant public static final androidx.ui.core.vectorgraphics.PathCommand VerticalLineTo;
  }

  public final class PathDelegate {
    ctor public PathDelegate(kotlin.jvm.functions.Function1<? super androidx.ui.core.vectorgraphics.PathBuilder,kotlin.Unit> delegate);
    method public kotlin.jvm.functions.Function1<androidx.ui.core.vectorgraphics.PathBuilder,kotlin.Unit> getDelegate();
  }

  public final class PathNode {
    ctor public PathNode(androidx.ui.core.vectorgraphics.PathCommand command, float[] args);
    method public androidx.ui.core.vectorgraphics.PathCommand component1();
    method public float[] component2();
    method public androidx.ui.core.vectorgraphics.PathNode copy(androidx.ui.core.vectorgraphics.PathCommand command, float[] args);
    method public float[] getArgs();
    method public androidx.ui.core.vectorgraphics.PathCommand getCommand();
  }

  public final class PathNodeKt {
    ctor public PathNodeKt();
    method public static operator StringBuilder plus(StringBuilder, androidx.ui.core.vectorgraphics.PathNode node);
  }

  public final class PathParser {
    ctor public PathParser();
    method public androidx.ui.core.vectorgraphics.PathParser addPathNodes(androidx.ui.core.vectorgraphics.PathNode[] nodes);
    method public void clear();
    method public androidx.ui.core.vectorgraphics.PathParser parsePathString(String pathData) throws java.lang.IllegalArgumentException, java.lang.NumberFormatException;
    method public androidx.ui.core.vectorgraphics.PathNode[] toNodes();
    method public androidx.ui.painting.Path toPath(androidx.ui.painting.Path target = Path());
  }

  public final class PathParserKt {
    ctor public PathParserKt();
  }

  public final class RadialGradient implements androidx.ui.core.vectorgraphics.Brush {
    ctor public RadialGradient(kotlin.Pair<androidx.ui.painting.Color,java.lang.Float>[] colorStops, float centerX, float centerY, float radius, androidx.ui.painting.TileMode tileMode);
    method public void applyBrush(androidx.ui.painting.Paint p);
  }

  public final class SolidColor implements androidx.ui.core.vectorgraphics.Brush {
    ctor public SolidColor(androidx.ui.painting.Color value);
    method public void applyBrush(androidx.ui.painting.Paint p);
  }

  public final class VectorKt {
    ctor public VectorKt();
    method public static androidx.ui.core.vectorgraphics.PathNode[] addPathNodes(String? pathStr);
    method public static android.view.View? adoptVectorGraphic(Object? parent, Object? child);
    method public static androidx.ui.painting.StrokeCap getDefaultStrokeLineCap();
    method public static androidx.ui.painting.StrokeJoin getDefaultStrokeLineJoin();
    method public static androidx.ui.core.vectorgraphics.PathNode[] getEmptyPath();
    method public static void group(String name = "", float rotate = 0.0f, float pivotX = 0.0f, float pivotY = 0.0f, float scaleX = 1.0f, float scaleY = 1.0f, float translateX = 0.0f, float translateY = 0.0f, Object? clipPathData = EmptyPath, kotlin.jvm.functions.Function0<kotlin.Unit> childNodes);
    method public static void path(Object? pathData, String name = "", Object fill = EmptyBrush, float fillAlpha = 1.0f, Object stroke = EmptyBrush, float strokeAlpha = 1.0f, float strokeLineWidth = 0.0f, androidx.ui.painting.StrokeCap strokeLineCap = DefaultStrokeLineCap, androidx.ui.painting.StrokeJoin strokeLineJoin = DefaultStrokeLineJoin, float strokeLineMiter = 4.0f);
    method public static void vector(String name = "", float viewportWidth, float viewportHeight, float defaultWidth = viewportWidth, float defaultHeight = viewportHeight, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    field public static final float DefaultAlpha = 1.0f;
    field public static final String DefaultGroupName = "";
    field public static final String DefaultPathName = "";
    field public static final float DefaultPivotX = 0.0f;
    field public static final float DefaultPivotY = 0.0f;
    field public static final float DefaultRotate = 0.0f;
    field public static final float DefaultScaleX = 1.0f;
    field public static final float DefaultScaleY = 1.0f;
    field public static final float DefaultStrokeLineMiter = 4.0f;
    field public static final float DefaultStrokeLineWidth = 0.0f;
    field public static final float DefaultTranslateX = 0.0f;
    field public static final float DefaultTranslateY = 0.0f;
  }

}

package androidx.ui.core.vectorgraphics.compat {

  public final class VectorResourceKt {
    ctor public VectorResourceKt();
    method public static void vectorResource(android.content.res.Resources res, int resId);
  }

}

