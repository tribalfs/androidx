// Signature format: 3.0
package androidx.ui.layout {

  public final class AlignKt {
    ctor public AlignKt();
    method public static void Align(androidx.ui.layout.Alignment alignment, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void Center(kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class Alignment {
    ctor public Alignment(float verticalBias, float horizontalBias);
    method public androidx.ui.core.IntPxPosition align(androidx.ui.core.IntPxSize size);
    method public float component1();
    method public float component2();
    method public androidx.ui.layout.Alignment copy(float verticalBias, float horizontalBias);
    method public float getHorizontalBias();
    method public float getVerticalBias();
    field public static final androidx.ui.layout.Alignment.Companion! Companion;
  }

  public static final class Alignment.Companion {
    method public androidx.ui.layout.Alignment getBottomCenter();
    method public androidx.ui.layout.Alignment getBottomLeft();
    method public androidx.ui.layout.Alignment getBottomRight();
    method public androidx.ui.layout.Alignment getCenter();
    method public androidx.ui.layout.Alignment getCenterLeft();
    method public androidx.ui.layout.Alignment getCenterRight();
    method public androidx.ui.layout.Alignment getTopCenter();
    method public androidx.ui.layout.Alignment getTopLeft();
    method public androidx.ui.layout.Alignment getTopRight();
    property public final androidx.ui.layout.Alignment BottomCenter;
    property public final androidx.ui.layout.Alignment BottomLeft;
    property public final androidx.ui.layout.Alignment BottomRight;
    property public final androidx.ui.layout.Alignment Center;
    property public final androidx.ui.layout.Alignment CenterLeft;
    property public final androidx.ui.layout.Alignment CenterRight;
    property public final androidx.ui.layout.Alignment TopCenter;
    property public final androidx.ui.layout.Alignment TopLeft;
    property public final androidx.ui.layout.Alignment TopRight;
  }

  public final class ConstrainedBoxKt {
    ctor public ConstrainedBoxKt();
    method public static void ConstrainedBox(androidx.ui.layout.DpConstraints constraints, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class ContainerKt {
    ctor public ContainerKt();
    method public static void Container(androidx.ui.layout.EdgeInsets padding = androidx.ui.layout.EdgeInsets(0.dp), androidx.ui.layout.Alignment alignment = Alignment.Center, boolean expanded = false, androidx.ui.layout.DpConstraints constraints = androidx.ui.layout.DpConstraints(), androidx.ui.core.Dp? width = null, androidx.ui.core.Dp? height = null, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class CrossAxisAlignment {
    ctor public CrossAxisAlignment();
    field public static final androidx.ui.layout.CrossAxisAlignment.Companion! Companion;
  }

  public static final class CrossAxisAlignment.Companion {
    method public int getBaseline();
    method public int getCenter();
    method public int getEnd();
    method public int getStart();
    method public int getStretch();
    property public final int Baseline;
    property public final int Center;
    property public final int End;
    property public final int Start;
    property public final int Stretch;
  }

  public final class DpConstraints {
    ctor public DpConstraints(androidx.ui.core.Dp minWidth, androidx.ui.core.Dp maxWidth, androidx.ui.core.Dp minHeight, androidx.ui.core.Dp maxHeight);
    ctor public DpConstraints();
    method public androidx.ui.core.Dp component1();
    method public androidx.ui.core.Dp component2();
    method public androidx.ui.core.Dp component3();
    method public androidx.ui.core.Dp component4();
    method public androidx.ui.layout.DpConstraints copy(androidx.ui.core.Dp minWidth, androidx.ui.core.Dp maxWidth, androidx.ui.core.Dp minHeight, androidx.ui.core.Dp maxHeight);
    method public androidx.ui.core.Dp getMaxHeight();
    method public androidx.ui.core.Dp getMaxWidth();
    method public androidx.ui.core.Dp getMinHeight();
    method public androidx.ui.core.Dp getMinWidth();
    field public static final androidx.ui.layout.DpConstraints.Companion! Companion;
  }

  public static final class DpConstraints.Companion {
    method public androidx.ui.layout.DpConstraints tightConstraints(androidx.ui.core.Dp width, androidx.ui.core.Dp height);
    method public androidx.ui.layout.DpConstraints tightConstraintsForHeight(androidx.ui.core.Dp height);
    method public androidx.ui.layout.DpConstraints tightConstraintsForWidth(androidx.ui.core.Dp width);
  }

  public final class DpConstraintsKt {
    ctor public DpConstraintsKt();
    method public static androidx.ui.core.Constraints Constraints(androidx.ui.core.DensityReceiver, androidx.ui.layout.DpConstraints dpConstraints);
    method public static androidx.ui.layout.DpConstraints enforce(androidx.ui.layout.DpConstraints, androidx.ui.layout.DpConstraints otherConstraints);
    method public static boolean getHasBoundedHeight(androidx.ui.layout.DpConstraints);
    method public static boolean getHasBoundedWidth(androidx.ui.layout.DpConstraints);
    method public static boolean getHasTightHeight(androidx.ui.layout.DpConstraints);
    method public static boolean getHasTightWidth(androidx.ui.layout.DpConstraints);
    method public static boolean getSatisfiable(androidx.ui.layout.DpConstraints);
    method public static boolean isTight(androidx.ui.layout.DpConstraints);
    method public static boolean isZero(androidx.ui.layout.DpConstraints);
    method public static androidx.ui.layout.DpConstraints looseMax(androidx.ui.layout.DpConstraints);
    method public static androidx.ui.layout.DpConstraints looseMin(androidx.ui.layout.DpConstraints);
    method public static androidx.ui.layout.DpConstraints offset(androidx.ui.layout.DpConstraints, androidx.ui.core.Dp horizontal = 0.dp, androidx.ui.core.Dp vertical = 0.dp);
    method public static androidx.ui.layout.DpConstraints withTight(androidx.ui.layout.DpConstraints, androidx.ui.core.Dp? width = null, androidx.ui.core.Dp? height = null);
  }

  public final class EdgeInsets {
    ctor public EdgeInsets(androidx.ui.core.Dp left, androidx.ui.core.Dp top, androidx.ui.core.Dp right, androidx.ui.core.Dp bottom);
    ctor public EdgeInsets();
    ctor public EdgeInsets(androidx.ui.core.Dp all);
    method public androidx.ui.core.Dp component1();
    method public androidx.ui.core.Dp component2();
    method public androidx.ui.core.Dp component3();
    method public androidx.ui.core.Dp component4();
    method public androidx.ui.layout.EdgeInsets copy(androidx.ui.core.Dp left, androidx.ui.core.Dp top, androidx.ui.core.Dp right, androidx.ui.core.Dp bottom);
    method public androidx.ui.core.Dp getBottom();
    method public androidx.ui.core.Dp getLeft();
    method public androidx.ui.core.Dp getRight();
    method public androidx.ui.core.Dp getTop();
  }

  public final class FlexChildren {
    method public void expanded(@FloatRange(0.0) float flex, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void flexible(@FloatRange(0.0) float flex, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void inflexible(kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class FlexKt {
    ctor public FlexKt();
    method public static void Column(int mainAxisAlignment = 1, int mainAxisSize = 1, int crossAxisAlignment = 0, kotlin.jvm.functions.Function0<kotlin.Unit> block);
    method public static void FlexColumn(int mainAxisAlignment = 1, int mainAxisSize = 1, int crossAxisAlignment = 0, kotlin.jvm.functions.Function1<? super androidx.ui.layout.FlexChildren,kotlin.Unit> block);
    method public static void FlexRow(int mainAxisAlignment = 1, int mainAxisSize = 1, int crossAxisAlignment = 0, kotlin.jvm.functions.Function1<? super androidx.ui.layout.FlexChildren,kotlin.Unit> block);
    method public static void Row(int mainAxisAlignment = 1, int mainAxisSize = 1, int crossAxisAlignment = 0, kotlin.jvm.functions.Function0<kotlin.Unit> block);
  }

  public final class MainAxisAlignment {
    ctor public MainAxisAlignment();
    field public static final androidx.ui.layout.MainAxisAlignment.Companion! Companion;
  }

  public static final class MainAxisAlignment.Companion {
    method public int getCenter();
    method public int getEnd();
    method public int getSpaceAround();
    method public int getSpaceBetween();
    method public int getSpaceEvenly();
    method public int getStart();
    property public final int Center;
    property public final int End;
    property public final int SpaceAround;
    property public final int SpaceBetween;
    property public final int SpaceEvenly;
    property public final int Start;
  }

  public final class MainAxisSize {
    ctor public MainAxisSize();
    field public static final androidx.ui.layout.MainAxisSize.Companion! Companion;
  }

  public static final class MainAxisSize.Companion {
    method public int getMax();
    method public int getMin();
    property public final int Max;
    property public final int Min;
  }

  public final class PaddingKt {
    ctor public PaddingKt();
    method public static void Padding(androidx.ui.layout.EdgeInsets padding, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void Padding(androidx.ui.core.Dp left = 0.dp, androidx.ui.core.Dp top = 0.dp, androidx.ui.core.Dp right = 0.dp, androidx.ui.core.Dp bottom = 0.dp, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static void Padding(androidx.ui.core.Dp padding, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class ScrollerKt {
    ctor public ScrollerKt();
    method public static void VerticalScroller(androidx.ui.layout.ScrollerPosition scrollerPosition = +memo({ 
    <init>()
}), kotlin.jvm.functions.Function2<? super androidx.ui.core.Px,? super androidx.ui.core.Px,kotlin.Unit> onScrollChanged = { position, _ -> scrollerPosition.position = position }, kotlin.jvm.functions.Function0<kotlin.Unit> child);
  }

  public final class ScrollerPosition {
    ctor public ScrollerPosition();
    method public androidx.ui.core.Px getPosition();
    method public void setPosition(androidx.ui.core.Px p);
    property public final androidx.ui.core.Px position;
  }

  public final class SpacerKt {
    ctor public SpacerKt();
    method public static void FixedSpacer(androidx.ui.core.Dp width, androidx.ui.core.Dp height);
    method public static void HeightSpacer(androidx.ui.core.Dp height);
    method public static void WidthSpacer(androidx.ui.core.Dp width);
  }

  public final class StackChildren {
    ctor public StackChildren();
    method public void aligned(androidx.ui.layout.Alignment alignment, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void positioned(androidx.ui.core.Dp? leftInset = null, androidx.ui.core.Dp? topInset = null, androidx.ui.core.Dp? rightInset = null, androidx.ui.core.Dp? bottomInset = null, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public final class StackKt {
    ctor public StackKt();
    method public static void Stack(androidx.ui.layout.Alignment defaultAlignment = Alignment.Center, kotlin.jvm.functions.Function1<? super androidx.ui.layout.StackChildren,kotlin.Unit> block);
  }

  public final class WrapKt {
    ctor public WrapKt();
    method public static void Wrap(androidx.ui.layout.Alignment alignment = Alignment.TopLeft, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

}

