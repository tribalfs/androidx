// Signature format: 2.0
package androidx.ui.baseui.selection {

  public final class ToggleableKt {
    ctor public ToggleableKt();
    method public static void Toggleable(kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  public enum ToggleableState {
    enum_constant public static final androidx.ui.baseui.selection.ToggleableState CHECKED;
    enum_constant public static final androidx.ui.baseui.selection.ToggleableState INDETERMINATE;
    enum_constant public static final androidx.ui.baseui.selection.ToggleableState UNCHECKED;
  }

}

package androidx.ui.material {

  public enum Case {
    enum_constant public static final androidx.ui.material.Case ALLCAPS;
    enum_constant public static final androidx.ui.material.Case SENTENCE;
  }

  public final class Checkbox extends com.google.r4a.Component {
    ctor public Checkbox();
    method public void compose();
    method public androidx.ui.painting.Color? getColor();
    method public androidx.ui.baseui.selection.ToggleableState getValue();
    method public void setColor(androidx.ui.painting.Color? p);
    method public void setValue(androidx.ui.baseui.selection.ToggleableState p);
    property public final androidx.ui.painting.Color? color;
    property public final androidx.ui.baseui.selection.ToggleableState value;
  }

  public final class CheckboxKt {
    ctor public CheckboxKt();
  }

  public final class ConstantsKt {
    ctor public ConstantsKt();
    method public static androidx.ui.core.Duration getThemeChangeDuration();
  }

  public final class H1 extends com.google.r4a.Component {
    ctor public H1(kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
  }

  public abstract class InkFeature {
    ctor public InkFeature(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    method @CallSuper public void dispose();
    method public final androidx.ui.material.MaterialInkController getController();
    method public final androidx.ui.core.LayoutCoordinates getCoordinates();
    method public final kotlin.jvm.functions.Function0<kotlin.Unit>? getOnRemoved();
    method protected abstract void paintFeature(androidx.ui.painting.Canvas canvas, androidx.ui.vectormath64.Matrix4 transform, android.content.Context context);
  }

  public final class InkHighlight extends androidx.ui.material.InteractiveInkFeature {
    ctor public InkHighlight(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.painting.Color color, androidx.ui.painting.borders.BoxShape shape, androidx.ui.painting.borderradius.BorderRadius? borderRadius, kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    method public void activate();
    method public void deactivate();
    method public boolean getActive();
    method protected void paintFeature(androidx.ui.painting.Canvas canvas, androidx.ui.vectormath64.Matrix4 transform, android.content.Context context);
    property public final boolean active;
  }

  public final class InkHiglightKt {
    ctor public InkHiglightKt();
  }

  public final class InkResponse extends com.google.r4a.Component {
    ctor public InkResponse(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public androidx.ui.painting.borderradius.BorderRadius? getBorderRadius();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? getBoundsCallback();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public boolean getContainedInkWell();
    method public boolean getEnableFeedback();
    method public boolean getExcludeFromSemantics();
    method public androidx.ui.painting.Color? getHighlightColor();
    method public androidx.ui.painting.borders.BoxShape getHighlightShape();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnDoubleTap();
    method public kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit>? getOnHighlightChanged();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnLongPress();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnTap();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnTapCancel();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.Position,kotlin.Unit>? getOnTapDown();
    method public androidx.ui.core.Dimension? getRadius();
    method public androidx.ui.painting.Color? getSplashColor();
    method public androidx.ui.material.InteractiveInkFeatureFactory? getSplashFactory();
    method public void setBorderRadius(androidx.ui.painting.borderradius.BorderRadius? p);
    method public void setBoundsCallback(kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? p);
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setContainedInkWell(boolean p);
    method public void setEnableFeedback(boolean p);
    method public void setExcludeFromSemantics(boolean p);
    method public void setHighlightColor(androidx.ui.painting.Color? p);
    method public void setHighlightShape(androidx.ui.painting.borders.BoxShape p);
    method public void setOnDoubleTap(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnHighlightChanged(kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? p);
    method public void setOnLongPress(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTap(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTapCancel(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTapDown(kotlin.jvm.functions.Function1<? super androidx.ui.core.Position,kotlin.Unit>? p);
    method public void setRadius(androidx.ui.core.Dimension? p);
    method public void setSplashColor(androidx.ui.painting.Color? p);
    method public void setSplashFactory(androidx.ui.material.InteractiveInkFeatureFactory? p);
    method public void updateHighlight(boolean value);
    property public final androidx.ui.painting.borderradius.BorderRadius? borderRadius;
    property public final kotlin.jvm.functions.Function1<androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback;
    property public final boolean containedInkWell;
    property public final boolean enableFeedback;
    property public final boolean excludeFromSemantics;
    property public final androidx.ui.painting.Color? highlightColor;
    property public final androidx.ui.painting.borders.BoxShape highlightShape;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onDoubleTap;
    property public final kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit>? onHighlightChanged;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onLongPress;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onTap;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onTapCancel;
    property public final kotlin.jvm.functions.Function1<androidx.ui.core.Position,kotlin.Unit>? onTapDown;
    property public final androidx.ui.core.Dimension? radius;
    property public final androidx.ui.painting.Color? splashColor;
    property public final androidx.ui.material.InteractiveInkFeatureFactory? splashFactory;
  }

  public final class InkRipple extends androidx.ui.material.InteractiveInkFeature {
    ctor public InkRipple(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.core.Position position, androidx.ui.painting.Color color, boolean containedInkWell, kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback, androidx.ui.painting.borderradius.BorderRadius? borderRadius, androidx.ui.core.Dimension? radiusParam, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    method protected void paintFeature(androidx.ui.painting.Canvas canvas, androidx.ui.vectormath64.Matrix4 transform, android.content.Context context);
  }

  public final class InkRippleFactory extends androidx.ui.material.InteractiveInkFeatureFactory {
    method public androidx.ui.material.InteractiveInkFeature create(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.core.Position position, androidx.ui.painting.Color color, boolean containedInkWell, kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback, androidx.ui.painting.borderradius.BorderRadius? borderRadius, androidx.ui.core.Dimension? radius, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    field public static final androidx.ui.material.InkRippleFactory! INSTANCE;
  }

  public final class InkRippleKt {
    ctor public InkRippleKt();
  }

  public final class InkSplash extends androidx.ui.material.InteractiveInkFeature {
    ctor public InkSplash(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.core.Position position, androidx.ui.painting.Color color, boolean containedInkWell, kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback, androidx.ui.painting.borderradius.BorderRadius? borderRadius, androidx.ui.core.Dimension? radiusParam, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    method protected void paintFeature(androidx.ui.painting.Canvas canvas, androidx.ui.vectormath64.Matrix4 transform, android.content.Context context);
  }

  public final class InkSplashFactory extends androidx.ui.material.InteractiveInkFeatureFactory {
    method public androidx.ui.material.InteractiveInkFeature create(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.core.Position position, androidx.ui.painting.Color color, boolean containedInkWell, kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback, androidx.ui.painting.borderradius.BorderRadius? borderRadius, androidx.ui.core.Dimension? radius, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    field public static final androidx.ui.material.InkSplashFactory! INSTANCE;
  }

  public final class InkSplashKt {
    ctor public InkSplashKt();
  }

  public final class InkTmpGestureDetector extends com.google.r4a.Component {
    ctor public InkTmpGestureDetector(kotlin.jvm.functions.Function1<? super androidx.ui.core.Position,kotlin.Unit>? onTapDown, kotlin.jvm.functions.Function0<kotlin.Unit>? onTap, kotlin.jvm.functions.Function0<kotlin.Unit>? onTapCancel, kotlin.jvm.functions.Function0<kotlin.Unit>? onDoubleTap, kotlin.jvm.functions.Function0<kotlin.Unit>? onLongPress, androidx.ui.rendering.proxybox.HitTestBehavior? behavior, boolean excludeFromSemantics, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public androidx.ui.rendering.proxybox.HitTestBehavior? getBehavior();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public boolean getExcludeFromSemantics();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnDoubleTap();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnLongPress();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnTap();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnTapCancel();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.Position,kotlin.Unit>? getOnTapDown();
    method public void setBehavior(androidx.ui.rendering.proxybox.HitTestBehavior? p);
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setOnDoubleTap(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnLongPress(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTap(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTapCancel(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTapDown(kotlin.jvm.functions.Function1<? super androidx.ui.core.Position,kotlin.Unit>? p);
  }

  public final class InkTmpGestureDetectorKt {
    ctor public InkTmpGestureDetectorKt();
  }

  public final class InkTmpGestureHost extends com.google.r4a.Component {
    ctor public InkTmpGestureHost(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
  }

  public final class InkWell extends com.google.r4a.Component {
    ctor public InkWell(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public androidx.ui.painting.borderradius.BorderRadius? getBorderRadius();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public boolean getEnableFeedback();
    method public boolean getExcludeFromSemantics();
    method public androidx.ui.painting.Color? getHighlightColor();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnDoubleTap();
    method public kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit>? getOnHighlightChanged();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnLongPress();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnTap();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnTapCancel();
    method public kotlin.jvm.functions.Function1<androidx.ui.core.Position,kotlin.Unit>? getOnTapDown();
    method public androidx.ui.core.Dimension? getRadius();
    method public androidx.ui.painting.Color? getSplashColor();
    method public androidx.ui.material.InteractiveInkFeatureFactory? getSplashFactory();
    method public void setBorderRadius(androidx.ui.painting.borderradius.BorderRadius? p);
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setEnableFeedback(boolean p);
    method public void setExcludeFromSemantics(boolean p);
    method public void setHighlightColor(androidx.ui.painting.Color? p);
    method public void setOnDoubleTap(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnHighlightChanged(kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? p);
    method public void setOnLongPress(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTap(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTapCancel(kotlin.jvm.functions.Function0<kotlin.Unit>? p);
    method public void setOnTapDown(kotlin.jvm.functions.Function1<? super androidx.ui.core.Position,kotlin.Unit>? p);
    method public void setRadius(androidx.ui.core.Dimension? p);
    method public void setSplashColor(androidx.ui.painting.Color? p);
    method public void setSplashFactory(androidx.ui.material.InteractiveInkFeatureFactory? p);
    property public final androidx.ui.painting.borderradius.BorderRadius? borderRadius;
    property public final boolean enableFeedback;
    property public final boolean excludeFromSemantics;
    property public final androidx.ui.painting.Color? highlightColor;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onDoubleTap;
    property public final kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit>? onHighlightChanged;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onLongPress;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onTap;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit>? onTapCancel;
    property public final kotlin.jvm.functions.Function1<androidx.ui.core.Position,kotlin.Unit>? onTapDown;
    property public final androidx.ui.core.Dimension? radius;
    property public final androidx.ui.painting.Color? splashColor;
    property public final androidx.ui.material.InteractiveInkFeatureFactory? splashFactory;
  }

  public abstract class InteractiveInkFeature extends androidx.ui.material.InkFeature {
    ctor public InteractiveInkFeature(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.painting.Color color, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved);
    method public void cancel();
    method public void confirm();
    method public final androidx.ui.painting.Color getColor();
    method public final void setColor(androidx.ui.painting.Color value);
    property public final androidx.ui.painting.Color color;
  }

  public abstract class InteractiveInkFeatureFactory {
    ctor public InteractiveInkFeatureFactory();
    method public abstract androidx.ui.material.InteractiveInkFeature create(androidx.ui.material.MaterialInkController controller, androidx.ui.core.LayoutCoordinates coordinates, androidx.ui.core.Position position, androidx.ui.painting.Color color, boolean containedInkWell = false, kotlin.jvm.functions.Function1<? super androidx.ui.core.LayoutCoordinates,androidx.ui.core.Bounds>? boundsCallback = null, androidx.ui.painting.borderradius.BorderRadius? borderRadius = null, androidx.ui.core.Dimension? radius = null, kotlin.jvm.functions.Function0<kotlin.Unit>? onRemoved = null);
  }

  public final class Material extends com.google.r4a.Component {
    ctor public Material(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public androidx.ui.core.Duration getAnimationDuration();
    method public androidx.ui.painting.borderradius.BorderRadius? getBorderRadius();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public androidx.ui.painting.Color? getColor();
    method public float getElevation();
    method public androidx.ui.painting.Color getShadowColor();
    method public androidx.ui.painting.borders.ShapeBorder? getShape();
    method public androidx.ui.material.MaterialType getType();
    method public void setAnimationDuration(androidx.ui.core.Duration p);
    method public void setBorderRadius(androidx.ui.painting.borderradius.BorderRadius? p);
    method public void setChildren(kotlin.jvm.functions.Function0<kotlin.Unit> p);
    method public void setColor(androidx.ui.painting.Color? p);
    method public void setElevation(float p);
    method public void setShadowColor(androidx.ui.painting.Color p);
    method public void setShape(androidx.ui.painting.borders.ShapeBorder? p);
    method public void setType(androidx.ui.material.MaterialType p);
    property public final androidx.ui.core.Duration animationDuration;
    property public final androidx.ui.painting.borderradius.BorderRadius? borderRadius;
    property public final androidx.ui.painting.Color? color;
    property public final float elevation;
    property public final androidx.ui.painting.Color shadowColor;
    property public final androidx.ui.painting.borders.ShapeBorder? shape;
    property public final androidx.ui.material.MaterialType type;
  }

  public final class MaterialAnimationUtilKt {
    ctor public MaterialAnimationUtilKt();
    method public static androidx.ui.animation.Tween<androidx.ui.core.Dimension> Tween(androidx.ui.core.Dimension? begin = null, androidx.ui.core.Dimension? end = null);
    method public static void UseTickerProvider(kotlin.jvm.functions.Function1<? super androidx.ui.scheduler.ticker.TickerProvider,kotlin.Unit> children);
  }

  public final class MaterialColors {
    ctor public MaterialColors(androidx.ui.painting.Color primary, androidx.ui.painting.Color primaryVariant, androidx.ui.painting.Color secondary, androidx.ui.painting.Color secondaryVariant, androidx.ui.painting.Color background, androidx.ui.painting.Color surface, androidx.ui.painting.Color error, androidx.ui.painting.Color onPrimary, androidx.ui.painting.Color onSecondary, androidx.ui.painting.Color onBackground, androidx.ui.painting.Color onSurface, androidx.ui.painting.Color onError);
    ctor public MaterialColors();
    method public androidx.ui.painting.Color component1();
    method public androidx.ui.painting.Color component10();
    method public androidx.ui.painting.Color component11();
    method public androidx.ui.painting.Color component12();
    method public androidx.ui.painting.Color component2();
    method public androidx.ui.painting.Color component3();
    method public androidx.ui.painting.Color component4();
    method public androidx.ui.painting.Color component5();
    method public androidx.ui.painting.Color component6();
    method public androidx.ui.painting.Color component7();
    method public androidx.ui.painting.Color component8();
    method public androidx.ui.painting.Color component9();
    method public androidx.ui.material.MaterialColors copy(androidx.ui.painting.Color primary, androidx.ui.painting.Color primaryVariant, androidx.ui.painting.Color secondary, androidx.ui.painting.Color secondaryVariant, androidx.ui.painting.Color background, androidx.ui.painting.Color surface, androidx.ui.painting.Color error, androidx.ui.painting.Color onPrimary, androidx.ui.painting.Color onSecondary, androidx.ui.painting.Color onBackground, androidx.ui.painting.Color onSurface, androidx.ui.painting.Color onError);
    method public androidx.ui.painting.Color getBackground();
    method public androidx.ui.painting.Color getError();
    method public androidx.ui.painting.Color getOnBackground();
    method public androidx.ui.painting.Color getOnError();
    method public androidx.ui.painting.Color getOnPrimary();
    method public androidx.ui.painting.Color getOnSecondary();
    method public androidx.ui.painting.Color getOnSurface();
    method public androidx.ui.painting.Color getPrimary();
    method public androidx.ui.painting.Color getPrimaryVariant();
    method public androidx.ui.painting.Color getSecondary();
    method public androidx.ui.painting.Color getSecondaryVariant();
    method public androidx.ui.painting.Color getSurface();
  }

  public interface MaterialInkController {
    method public void addInkFeature(androidx.ui.material.InkFeature feature);
    method public androidx.ui.painting.Color? getColor();
    method public androidx.ui.scheduler.ticker.TickerProvider getVsync();
    method public void markNeedsPaint();
    property public abstract androidx.ui.painting.Color? color;
    property public abstract androidx.ui.scheduler.ticker.TickerProvider vsync;
  }

  public final class MaterialKt {
    ctor public MaterialKt();
    method public static void MaterialInkControllerProvider(kotlin.jvm.functions.Function1<? super androidx.ui.material.MaterialInkController,kotlin.Unit> children);
    method public static androidx.ui.core.Dimension getDefaultSplashRadius();
    method public static java.util.Map<androidx.ui.material.MaterialType,androidx.ui.painting.borderradius.BorderRadius> getMaterialEdges();
  }

  public final class MaterialTheme extends com.google.r4a.Component {
    ctor public MaterialTheme(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public void compose();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getChildren();
    method public androidx.ui.material.MaterialColors getColors();
    method public androidx.ui.material.MaterialTypography getTypography();
    method public void setColors(androidx.ui.material.MaterialColors p);
    method public void setTypography(androidx.ui.material.MaterialTypography p);
    property public final androidx.ui.material.MaterialColors colors;
    property public final androidx.ui.material.MaterialTypography typography;
  }

  public final class MaterialThemeKt {
    ctor public MaterialThemeKt();
    method public static com.google.r4a.Ambient<androidx.ui.material.MaterialColors> getColors();
    method public static com.google.r4a.Ambient<androidx.ui.material.MaterialTypography> getTypography();
  }

  public enum MaterialType {
    enum_constant public static final androidx.ui.material.MaterialType BUTTON;
    enum_constant public static final androidx.ui.material.MaterialType CANVAS;
    enum_constant public static final androidx.ui.material.MaterialType CARD;
    enum_constant public static final androidx.ui.material.MaterialType CIRCLE;
    enum_constant public static final androidx.ui.material.MaterialType TRANSPARENCY;
  }

  public final class MaterialTypography {
    ctor public MaterialTypography(androidx.ui.painting.TextStyle h1, androidx.ui.painting.TextStyle h2, androidx.ui.painting.TextStyle h3, androidx.ui.painting.TextStyle h4, androidx.ui.painting.TextStyle h5, androidx.ui.painting.TextStyle h6, androidx.ui.painting.TextStyle subtitle1, androidx.ui.painting.TextStyle subtitle2, androidx.ui.painting.TextStyle body1, androidx.ui.painting.TextStyle body2, androidx.ui.painting.TextStyle button, androidx.ui.painting.TextStyle caption, androidx.ui.painting.TextStyle overline);
    ctor public MaterialTypography();
    method public androidx.ui.painting.TextStyle component1();
    method public androidx.ui.painting.TextStyle component10();
    method public androidx.ui.painting.TextStyle component11();
    method public androidx.ui.painting.TextStyle component12();
    method public androidx.ui.painting.TextStyle component13();
    method public androidx.ui.painting.TextStyle component2();
    method public androidx.ui.painting.TextStyle component3();
    method public androidx.ui.painting.TextStyle component4();
    method public androidx.ui.painting.TextStyle component5();
    method public androidx.ui.painting.TextStyle component6();
    method public androidx.ui.painting.TextStyle component7();
    method public androidx.ui.painting.TextStyle component8();
    method public androidx.ui.painting.TextStyle component9();
    method public androidx.ui.material.MaterialTypography copy(androidx.ui.painting.TextStyle h1, androidx.ui.painting.TextStyle h2, androidx.ui.painting.TextStyle h3, androidx.ui.painting.TextStyle h4, androidx.ui.painting.TextStyle h5, androidx.ui.painting.TextStyle h6, androidx.ui.painting.TextStyle subtitle1, androidx.ui.painting.TextStyle subtitle2, androidx.ui.painting.TextStyle body1, androidx.ui.painting.TextStyle body2, androidx.ui.painting.TextStyle button, androidx.ui.painting.TextStyle caption, androidx.ui.painting.TextStyle overline);
    method public androidx.ui.painting.TextStyle getBody1();
    method public androidx.ui.painting.TextStyle getBody2();
    method public androidx.ui.painting.TextStyle getButton();
    method public androidx.ui.painting.TextStyle getCaption();
    method public androidx.ui.painting.TextStyle getH1();
    method public androidx.ui.painting.TextStyle getH2();
    method public androidx.ui.painting.TextStyle getH3();
    method public androidx.ui.painting.TextStyle getH4();
    method public androidx.ui.painting.TextStyle getH5();
    method public androidx.ui.painting.TextStyle getH6();
    method public androidx.ui.painting.TextStyle getOverline();
    method public androidx.ui.painting.TextStyle getSubtitle1();
    method public androidx.ui.painting.TextStyle getSubtitle2();
  }

}

package androidx.ui.material.demos {

  public final class InksDemo extends com.google.r4a.Component {
    ctor public InksDemo();
    method public void compose();
  }

  public final class InksDemoKt {
    ctor public InksDemoKt();
  }

}

