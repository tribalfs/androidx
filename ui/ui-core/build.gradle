/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXUiPlugin")
    id("org.jetbrains.kotlin.android")
}

dependencies {
    kotlinPlugin project(path: ":compose:compose-compiler")
    implementation(KOTLIN_STDLIB)
    implementation(KOTLIN_COROUTINES_ANDROID)

    api "androidx.annotation:annotation:1.1.0"
    api "androidx.activity:activity:1.2.0-alpha05"

    api project(":ui:ui-unit")
    api project(":ui:ui-graphics")
    api project(":ui:ui-text-core")
    api project(":ui:ui-animation-core")
    api project(":ui:ui-saved-instance-state")
    implementation project(":ui:ui-util")

    implementation project(":compose:compose-runtime")
    implementation "androidx.autofill:autofill:1.0.0"

    // we don't use these dependencies but we need to ensure at least these versions are used if
    // the user adds these dependencies as otherwise AppCompatActivity and Fragment will not
    // propagate ViewTree*Owners we are relying on and we will crash.
    implementation "androidx.fragment:fragment:1.3.0-alpha05"
    // due to b/152023266 we can't add these dependency right now
    // to be fixed as part of b/158301343
    // implementation "androidx.appcompat:appcompat:1.3.0-alpha01"

    testImplementation(ANDROIDX_TEST_RULES)
    testImplementation(ANDROIDX_TEST_RUNNER)
    testImplementation(JUNIT)
    testImplementation(TRUTH)
    testImplementation(MOCKITO_CORE)
    testImplementation(ROBOLECTRIC)
    testImplementation MOCKITO_KOTLIN, {
        exclude group: 'org.mockito' // to keep control on the mockito version
    }
    testImplementation project(":ui:ui-test")

    androidTestImplementation(ANDROIDX_TEST_RULES)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ESPRESSO_CORE)
    androidTestImplementation(JUNIT)
    androidTestImplementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker
    androidTestImplementation(MOCKITO_CORE, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker
    androidTestImplementation(TRUTH)
    androidTestImplementation MOCKITO_KOTLIN, {
        exclude group: 'org.mockito' // to keep control on the mockito version
    }

    androidTestImplementation project(":ui:ui-test")
    androidTestImplementation project(":ui:ui-test-font")
    androidTestImplementation project(":ui:ui-layout")
    androidTestImplementation project(":ui:ui-foundation")
    androidTestImplementation "androidx.fragment:fragment:1.2.4"
    androidTestImplementation "androidx.appcompat:appcompat:1.1.0"
}

androidx {
    name = "AndroidX UI Core"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.UI
    mavenGroup = LibraryGroups.UI
    inceptionYear = "2019"
    description = "AndroidX UI classes used by all other UI modules."
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
            "-Xuse-experimental=kotlin.Experimental",
            "-XXLanguage:+InlineClasses"
        ]
        useIR = true
    }
}

android {
    buildTypes {
        debug {
            testCoverageEnabled = false // Breaks Kotlin compiler.
        }
    }
    testOptions.unitTests.includeAndroidResources = true
}
