// Signature format: 4.0
package androidx.wear.compose.foundation {

  public final inline class AnchorType {
    ctor public AnchorType();
  }

  public static final class AnchorType.Companion {
    method public float getCenter();
    method public float getEnd();
    method public float getStart();
    property public final float Center;
    property public final float End;
    property public final float Start;
  }

  @androidx.compose.runtime.Stable public interface ArcPaddingValues {
    method public float calculateEndPadding();
    method public float calculateInnerPadding();
    method public float calculateOuterPadding();
    method public float calculateStartPadding();
  }

  public final class BasicCurvedTextKt {
    method public static androidx.wear.compose.foundation.ArcPaddingValues ArcPaddingValues(optional float outer, optional float inner, optional float start, optional float end);
    method public static androidx.wear.compose.foundation.ArcPaddingValues ArcPaddingValues(float all);
    method public static androidx.wear.compose.foundation.ArcPaddingValues ArcPaddingValues(optional float radial, optional float angular);
    method public static void basicCurvedText(androidx.wear.compose.foundation.CurvedScope, String text, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional boolean clockwise, optional androidx.wear.compose.foundation.ArcPaddingValues contentArcPadding, optional kotlin.jvm.functions.Function0<androidx.wear.compose.foundation.CurvedTextStyle> style);
    method public static void basicCurvedText(androidx.wear.compose.foundation.CurvedScope, String text, androidx.wear.compose.foundation.CurvedTextStyle style, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional boolean clockwise, optional androidx.wear.compose.foundation.ArcPaddingValues contentArcPadding);
  }

  public interface CurvedAlignment {
  }

  public static final inline class CurvedAlignment.Angular {
    ctor public CurvedAlignment.Angular();
  }

  public static final class CurvedAlignment.Angular.Companion {
    method public float Custom(float ratio);
    method public float getCenter();
    method public float getEnd();
    method public float getStart();
    property public final float Center;
    property public final float End;
    property public final float Start;
  }

  public static final inline class CurvedAlignment.Radial {
    ctor public CurvedAlignment.Radial();
  }

  public static final class CurvedAlignment.Radial.Companion {
    method public float Custom(float ratio);
    method public float getCenter();
    method public float getInner();
    method public float getOuter();
    property public final float Center;
    property public final float Inner;
    property public final float Outer;
  }

  public final class CurvedColumnKt {
    method public static void curvedColumn(androidx.wear.compose.foundation.CurvedScope, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional boolean outsideIn, optional androidx.wear.compose.foundation.CurvedAlignment.Angular? angularAlignment, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit> contentBuilder);
  }

  public final class CurvedComposableKt {
    method public static void curvedComposable(androidx.wear.compose.foundation.CurvedScope, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional float radialAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class CurvedLayoutKt {
    method @androidx.compose.runtime.Composable public static void CurvedLayout(optional androidx.compose.ui.Modifier modifier, optional float anchor, optional float anchorType, optional androidx.wear.compose.foundation.CurvedAlignment.Radial? radialAlignment, optional boolean clockwise, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit> contentBuilder);
  }

  @androidx.compose.runtime.Stable public sealed interface CurvedModifier {
    method public default infix androidx.wear.compose.foundation.CurvedModifier then(androidx.wear.compose.foundation.CurvedModifier other);
    field public static final androidx.wear.compose.foundation.CurvedModifier.Companion Companion;
  }

  public static final class CurvedModifier.Companion implements androidx.wear.compose.foundation.CurvedModifier {
  }

  public final class CurvedModifierKt {
  }

  public final class CurvedRowKt {
    method public static void curvedRow(androidx.wear.compose.foundation.CurvedScope, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional androidx.wear.compose.foundation.CurvedAlignment.Radial? radialAlignment, optional boolean clockwise, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit> contentBuilder);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker public final class CurvedScope {
    method public boolean getReverseLayout();
    property public final boolean reverseLayout;
  }

  public final class CurvedSizeKt {
    method public static androidx.wear.compose.foundation.CurvedModifier angularSize(androidx.wear.compose.foundation.CurvedModifier, float angularSizeDegrees);
    method public static androidx.wear.compose.foundation.CurvedModifier radialSize(androidx.wear.compose.foundation.CurvedModifier, float radialSize);
    method public static androidx.wear.compose.foundation.CurvedModifier size(androidx.wear.compose.foundation.CurvedModifier, float angularSizeDegrees, float radialSize);
    method public static androidx.wear.compose.foundation.CurvedModifier sizeIn(androidx.wear.compose.foundation.CurvedModifier, optional float angularMinDegrees, optional float angularMaxDegrees, optional float radialSizeMin, optional float radialSizeMax);
  }

  public final class CurvedTextStyle {
    ctor public CurvedTextStyle(optional long color, optional long fontSize, optional long background);
    ctor public CurvedTextStyle(androidx.compose.ui.text.TextStyle style);
    method public androidx.wear.compose.foundation.CurvedTextStyle copy(optional long color, optional long fontSize, optional long background);
    method public operator boolean equals(Object? other);
    method public long getBackground();
    method public long getColor();
    method public long getFontSize();
    method public androidx.wear.compose.foundation.CurvedTextStyle merge(optional androidx.wear.compose.foundation.CurvedTextStyle? other);
    method public operator androidx.wear.compose.foundation.CurvedTextStyle plus(androidx.wear.compose.foundation.CurvedTextStyle other);
    property public final long background;
    property public final long color;
    property public final long fontSize;
  }

  public final class CurvedTextStyleKt {
  }

}

