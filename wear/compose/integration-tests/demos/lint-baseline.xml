<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.2.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.2.0-beta01)" variant="all" version="8.2.0-beta01">

    <issue
        id="WearStandaloneAppFlag"
        message="Missing `&lt;meta-data android:name=&quot;com.google.android.wearable.standalone&quot; ../>` element"
        errorLine1="    &lt;application"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="src/main/AndroidManifest.xml"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(300)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/BottomNavigationScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/ButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/CheckboxScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/FloatingActionButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/MaterialRippleThemeTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(300)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/MaterialRippleThemeTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(300)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/NavigationRailScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="    Thread.sleep(1)"
        errorLine2="           ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/ObservableThemeTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/RadioButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/RadioButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/RadioButtonScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/SwitchScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/SwitchScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(300)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/SwitchScreenshotTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(300)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/material/TabScreenshotTest.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor AnchoredDraggableState has parameter &apos;positionalThreshold&apos; with type Function1&lt;? super Float, Float>."
        errorLine1="    internal val positionalThreshold: (totalDistance: Float) -> Float,"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function1&lt;Float, Float> of &apos;getPositionalThreshold$lint_module&apos;."
        errorLine1="    internal val positionalThreshold: (totalDistance: Float) -> Float,"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor AnchoredDraggableState has parameter &apos;velocityThreshold&apos; with type Function0&lt;Float>."
        errorLine1="    internal val velocityThreshold: () -> Float,"
        errorLine2="                                    ~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function0&lt;Float> of &apos;getVelocityThreshold$lint_module&apos;."
        errorLine1="    internal val velocityThreshold: () -> Float,"
        errorLine2="                                    ~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor AnchoredDraggableState has parameter &apos;positionalThreshold&apos; with type Function1&lt;? super Float, Float>."
        errorLine1="        positionalThreshold: (totalDistance: Float) -> Float,"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor AnchoredDraggableState has parameter &apos;velocityThreshold&apos; with type Function0&lt;Float>."
        errorLine1="        velocityThreshold: () -> Float,"
        errorLine2="                           ~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method Saver has parameter &apos;positionalThreshold&apos; with type Function1&lt;? super Float, Float>."
        errorLine1="            positionalThreshold: (distance: Float) -> Float,"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method Saver has parameter &apos;velocityThreshold&apos; with type Function0&lt;Float>."
        errorLine1="            velocityThreshold: () -> Float,"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/AnchoredDraggable.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;calculateBackLayerConstraints&apos; with type Function1&lt;? super Constraints, ? extends Constraints>."
        errorLine1="    val calculateBackLayerConstraints: (Constraints) -> Constraints = {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BackdropScaffold.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method BackdropStack has parameter &apos;calculateBackLayerConstraints&apos; with type Function1&lt;? super Constraints, Constraints>."
        errorLine1="    calculateBackLayerConstraints: (Constraints) -> Constraints,"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BackdropScaffold.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method BackdropStack has parameter &apos;frontLayer&apos; with type Function2&lt;? super Constraints, ? super Float, Unit>."
        errorLine1="    frontLayer: @Composable @UiComposable (Constraints, Float) -> Unit"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BackdropScaffold.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method BottomNavigationTransition has parameter &apos;content&apos; with type Function1&lt;? super Float, Unit>."
        errorLine1="    content: @Composable (animationProgress: Float) -> Unit"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BottomNavigation.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method BottomSheet has parameter &apos;calculateAnchors&apos; with type Function1&lt;? super IntSize, ? extends DraggableAnchors&lt;BottomSheetValue>>."
        errorLine1="    calculateAnchors: (sheetSize: IntSize) -> DraggableAnchors&lt;BottomSheetValue>,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BottomSheetScaffold.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method BottomSheetScaffoldLayout has parameter &apos;bottomSheet&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="    bottomSheet: @Composable (layoutHeight: Int) -> Unit,"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BottomSheetScaffold.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method BottomSheetScaffoldLayout has parameter &apos;sheetOffset&apos; with type Function0&lt;Float>."
        errorLine1="    sheetOffset: () -> Float,"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/BottomSheetScaffold.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method awaitHorizontalPointerSlopOrCancellation has parameter &apos;onPointerSlopReached&apos; with type Function2&lt;? super PointerInputChange, ? super Float, Unit>."
        errorLine1="    onPointerSlopReached: (change: PointerInputChange, overSlop: Float) -> Unit"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/DragGestureDetectorCopy.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method Scrim has parameter &apos;fraction&apos; with type Function0&lt;Float>."
        errorLine1="    fraction: () -> Float,"
        errorLine2="              ~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/Drawer.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method updateHeight has parameter &apos;onHeightUpdate&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="    onHeightUpdate: (Int) -> Unit"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/material/ExposedDropdownMenu.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method NavigationRailTransition has parameter &apos;content&apos; with type Function1&lt;? super Float, Unit>."
        errorLine1="    content: @Composable (animationProgress: Float) -> Unit"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/NavigationRail.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method OutlinedTextFieldLayout has parameter &apos;onLabelMeasured&apos; with type Function1&lt;? super Size, Unit>."
        errorLine1="    onLabelMeasured: (Size) -> Unit,"
        errorLine2="                     ~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/OutlinedTextField.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in constructor OutlinedTextFieldMeasurePolicy has parameter &apos;onLabelMeasured&apos; with type Function1&lt;? super Size, Unit>."
        errorLine1="    private val onLabelMeasured: (Size) -> Unit,"
        errorLine2="                                 ~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/OutlinedTextField.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method intrinsicWidth has parameter &apos;intrinsicMeasurer&apos; with type Function2&lt;? super IntrinsicMeasurable, ? super Integer, Integer>."
        errorLine1="        intrinsicMeasurer: (IntrinsicMeasurable, Int) -> Int"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/OutlinedTextField.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method intrinsicHeight has parameter &apos;intrinsicMeasurer&apos; with type Function2&lt;? super IntrinsicMeasurable, ? super Integer, Integer>."
        errorLine1="        intrinsicMeasurer: (IntrinsicMeasurable, Int) -> Int"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/material/OutlinedTextField.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in variable &apos;pickerOption&apos; with type Function3&lt;? super PickerScope, ? super Integer, ? super Boolean, ? extends Unit>."
        errorLine1="        val pickerOption = pickerTextOption(textStyle) { &quot;%02d&quot;.format(it) }"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/integration/demos/PickerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method pickerGroupItemWithRSB has parameter &apos;option&apos; with type Function3&lt;? super PickerScope, ? super Integer, ? super Boolean, Unit>."
        errorLine1="    option: @Composable PickerScope.(optionIndex: Int, pickerSelected: Boolean) -> Unit"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/integration/demos/PickerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method pickerTextOption has parameter &apos;indexToText&apos; with type Function1&lt;? super Integer, String>."
        errorLine1="private fun pickerTextOption(textStyle: TextStyle, indexToText: (Int) -> String):"
        errorLine2="                                                                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/integration/demos/PickerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in return type Function3&lt;PickerScope, Integer, Boolean, Unit> of &apos;pickerTextOption&apos;."
        errorLine1="    (@Composable PickerScope.(optionIndex: Int, pickerSelected: Boolean) -> Unit) = {"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/integration/demos/PickerDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method DefaultInlineSlider has parameter &apos;onValueChange&apos; with type Function1&lt;? super Float, Unit>."
        errorLine1="    onValueChange: (Float) -> Unit,"
        errorLine2="                   ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/integration/demos/SliderDemo.kt"/>
    </issue>

    <issue
        id="PrimitiveInLambda"
        message="Use a functional interface instead of lambda syntax for lambdas with primitive values in method DefaultInlineSlider has parameter &apos;onValueChange&apos; with type Function1&lt;? super Integer, Unit>."
        errorLine1="    onValueChange: (Int) -> Unit,"
        errorLine2="                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/integration/demos/SliderDemo.kt"/>
    </issue>

</issues>
