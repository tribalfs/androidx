/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.build.dependencies.DependenciesKt.*

import androidx.build.LibraryGroups
import androidx.build.LibraryType
import androidx.build.LibraryVersions

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("kotlin-android")
}

dependencies {
    api("androidx.annotation:annotation:1.1.0")
    api(GUAVA_LISTENABLE_FUTURE)
    implementation 'androidx.annotation:annotation:1.2.0-alpha01'
    implementation "androidx.concurrent:concurrent-futures:1.1.0"
    implementation "androidx.core:core:1.3.2"
    implementation(project(":wear:wear-tiles"))
    implementation(project(path: ":wear:wear-tiles-proto", configuration: "shadow"))
    implementation(KOTLIN_COROUTINES_CORE)
    implementation(KOTLIN_COROUTINES_ANDROID)

    testImplementation(ANDROIDX_TEST_EXT_JUNIT)
    testImplementation(ANDROIDX_TEST_EXT_TRUTH)
    testImplementation(ANDROIDX_TEST_CORE)
    testImplementation(ANDROIDX_TEST_RUNNER)
    testImplementation(ANDROIDX_TEST_RULES)
    testImplementation(KOTLIN_COROUTINES_TEST)
    testImplementation(ROBOLECTRIC)
    testImplementation(MOCKITO_CORE)
    testImplementation(TRUTH)
}

android {
    defaultConfig {
        minSdkVersion 25
    }

    // Use Robolectric 4.+
    testOptions.unitTests.includeAndroidResources = true
}

// Allow usage of Kotlin's @OptIn.
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}

androidx {
    name = "Android Wear Tiles Renderer"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.WEAR
    // Tie the versions together to keep everything simpler.
    mavenVersion = LibraryVersions.WEAR_TILES
    inceptionYear = "2021"
    description = "Android Wear Tiles Renderer components. These components can be used to parse " +
            "and render an already constructed Wear Tile."
}
