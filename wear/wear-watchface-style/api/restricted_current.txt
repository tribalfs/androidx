// Signature format: 4.0
package androidx.wear.watchface.style {

  public final class BooleanUserStyleCategory extends androidx.wear.watchface.style.UserStyleCategory {
    ctor public BooleanUserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, boolean defaultValue, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers);
    method public boolean getDefaultValue();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.BooleanUserStyleCategoryWireFormat toWireFormat();
  }

  public static final class BooleanUserStyleCategory.BooleanOption extends androidx.wear.watchface.style.UserStyleCategory.Option {
    ctor public BooleanUserStyleCategory.BooleanOption(boolean value);
    method public boolean getValue();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.BooleanUserStyleCategoryWireFormat.BooleanOptionWireFormat toWireFormat();
    property public final boolean value;
  }

  public final class ComplicationsUserStyleCategory extends androidx.wear.watchface.style.UserStyleCategory {
    ctor public ComplicationsUserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, java.util.List<androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationsOption> complicationConfig, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.ComplicationsUserStyleCategoryWireFormat toWireFormat();
  }

  public static final class ComplicationsUserStyleCategory.ComplicationOverlay {
    method public android.graphics.RectF? getBounds();
    method public int getComplicationId();
    method public androidx.wear.complications.DefaultComplicationProviderPolicy? getDefaultProviderPolicy();
    method public Integer? getDefaultProviderType();
    method public int[]? getSupportedTypes();
    method public Boolean? isEnabled();
    property public final android.graphics.RectF? bounds;
    property public final int complicationId;
    property public final androidx.wear.complications.DefaultComplicationProviderPolicy? defaultProviderPolicy;
    property public final Integer? defaultProviderType;
    property public final Boolean? enabled;
    property public final int[]? supportedTypes;
  }

  public static final class ComplicationsUserStyleCategory.ComplicationOverlay.Builder {
    ctor public ComplicationsUserStyleCategory.ComplicationOverlay.Builder(int complicationId);
    method public androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay build();
    method public androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay.Builder setBounds(android.graphics.RectF bounds);
    method public androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay.Builder setDefaultProviderPolicy(androidx.wear.complications.DefaultComplicationProviderPolicy? defaultComplicationProviderPolicy);
    method public androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay.Builder setDefaultProviderType(@android.support.wearable.complications.ComplicationData.ComplicationType int defaultComplicationProviderType);
    method public androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay.Builder setEnabled(boolean enabled);
    method public androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay.Builder setSupportedTypes(int[] supportedTypes);
  }

  public static final class ComplicationsUserStyleCategory.ComplicationsOption extends androidx.wear.watchface.style.UserStyleCategory.Option {
    ctor public ComplicationsUserStyleCategory.ComplicationsOption(String id, CharSequence displayName, android.graphics.drawable.Icon? icon, java.util.Collection<androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay> complicationOverlays);
    method public java.util.Collection<androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay> getComplicationOverlays();
    method public CharSequence getDisplayName();
    method public android.graphics.drawable.Icon? getIcon();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.ComplicationsUserStyleCategoryWireFormat.ComplicationsOptionWireFormat toWireFormat();
    property public final java.util.Collection<androidx.wear.watchface.style.ComplicationsUserStyleCategory.ComplicationOverlay> complicationOverlays;
    property public final CharSequence displayName;
    property public final android.graphics.drawable.Icon? icon;
  }

  public final class DoubleRangeUserStyleCategory extends androidx.wear.watchface.style.UserStyleCategory {
    ctor public DoubleRangeUserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, double minimumValue, double maximumValue, double defaultValue, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers);
    method public double getDefaultValue();
    method public double getMaximumValue();
    method public double getMinimumValue();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.DoubleRangeUserStyleCategoryWireFormat toWireFormat();
  }

  public static final class DoubleRangeUserStyleCategory.DoubleRangeOption extends androidx.wear.watchface.style.UserStyleCategory.Option {
    ctor public DoubleRangeUserStyleCategory.DoubleRangeOption(double value);
    method public double getValue();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.DoubleRangeUserStyleCategoryWireFormat.DoubleRangeOptionWireFormat toWireFormat();
    property public final double value;
  }

  public enum Layer {
    enum_constant public static final androidx.wear.watchface.style.Layer BASE_LAYER;
    enum_constant public static final androidx.wear.watchface.style.Layer COMPLICATIONS;
    enum_constant public static final androidx.wear.watchface.style.Layer TOP_LAYER;
  }

  public class ListUserStyleCategory extends androidx.wear.watchface.style.UserStyleCategory {
    ctor public ListUserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, java.util.List<androidx.wear.watchface.style.ListUserStyleCategory.ListOption> options, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers, androidx.wear.watchface.style.ListUserStyleCategory.ListOption defaultOption);
    ctor public ListUserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, java.util.List<androidx.wear.watchface.style.ListUserStyleCategory.ListOption> options, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers);
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.ListUserStyleCategoryWireFormat toWireFormat();
  }

  public static final class ListUserStyleCategory.ListOption extends androidx.wear.watchface.style.UserStyleCategory.Option {
    ctor public ListUserStyleCategory.ListOption(String id, CharSequence displayName, android.graphics.drawable.Icon? icon);
    method public CharSequence getDisplayName();
    method public android.graphics.drawable.Icon? getIcon();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.ListUserStyleCategoryWireFormat.ListOptionWireFormat toWireFormat();
    property public final CharSequence displayName;
    property public final android.graphics.drawable.Icon? icon;
  }

  public final class LongRangeUserStyleCategory extends androidx.wear.watchface.style.UserStyleCategory {
    ctor public LongRangeUserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, long minimumValue, long maximumValue, long defaultValue, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers);
    method public long getDefaultValue();
    method public long getMaximumValue();
    method public long getMinimumValue();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.LongRangeUserStyleCategoryWireFormat toWireFormat();
  }

  public static final class LongRangeUserStyleCategory.LongRangeOption extends androidx.wear.watchface.style.UserStyleCategory.Option {
    ctor public LongRangeUserStyleCategory.LongRangeOption(long value);
    method public long getValue();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.LongRangeUserStyleCategoryWireFormat.LongRangeOptionWireFormat toWireFormat();
    property public final long value;
  }

  public final class UserStyle {
    ctor public UserStyle(java.util.Map<androidx.wear.watchface.style.UserStyleCategory,? extends androidx.wear.watchface.style.UserStyleCategory.Option> selectedOptions);
    ctor @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public UserStyle(androidx.wear.watchface.style.data.UserStyleWireFormat userStyle, androidx.wear.watchface.style.UserStyleSchema styleSchema);
    method public java.util.Map<androidx.wear.watchface.style.UserStyleCategory,androidx.wear.watchface.style.UserStyleCategory.Option> getSelectedOptions();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.UserStyleWireFormat toWireFormat();
    property public final java.util.Map<androidx.wear.watchface.style.UserStyleCategory,androidx.wear.watchface.style.UserStyleCategory.Option> selectedOptions;
  }

  public abstract class UserStyleCategory {
    ctor public UserStyleCategory(String id, CharSequence displayName, CharSequence description, android.graphics.drawable.Icon? icon, java.util.List<? extends androidx.wear.watchface.style.UserStyleCategory.Option> options, int defaultOptionIndex, java.util.Collection<? extends androidx.wear.watchface.style.Layer> affectsLayers);
    method public final java.util.Collection<androidx.wear.watchface.style.Layer> getAffectsLayers();
    method public final androidx.wear.watchface.style.UserStyleCategory.Option getDefaultOption();
    method public final int getDefaultOptionIndex();
    method public final CharSequence getDescription();
    method public final CharSequence getDisplayName();
    method public final android.graphics.drawable.Icon? getIcon();
    method public final String getId();
    method public androidx.wear.watchface.style.UserStyleCategory.Option getOptionForId(String optionId);
    method public final java.util.List<androidx.wear.watchface.style.UserStyleCategory.Option> getOptions();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public final java.util.List<androidx.wear.watchface.style.data.UserStyleCategoryWireFormat.OptionWireFormat> getWireFormatOptionsList();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public abstract androidx.wear.watchface.style.data.UserStyleCategoryWireFormat toWireFormat();
    property public final java.util.Collection<androidx.wear.watchface.style.Layer> affectsLayers;
    property public final int defaultOptionIndex;
    property public final CharSequence description;
    property public final CharSequence displayName;
    property public final android.graphics.drawable.Icon? icon;
    property public final String id;
    property public final java.util.List<androidx.wear.watchface.style.UserStyleCategory.Option> options;
  }

  public abstract static class UserStyleCategory.Option {
    ctor public UserStyleCategory.Option(String id);
    method public final String getId();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public abstract androidx.wear.watchface.style.data.UserStyleCategoryWireFormat.OptionWireFormat toWireFormat();
    property public final String id;
    field public static final androidx.wear.watchface.style.UserStyleCategory.Option.Companion Companion;
  }

  public static final class UserStyleCategory.Option.Companion {
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.UserStyleCategory.Option createFromWireFormat(androidx.wear.watchface.style.data.UserStyleCategoryWireFormat.OptionWireFormat wireFormat);
  }

  public final class UserStyleRepository {
    ctor public UserStyleRepository(androidx.wear.watchface.style.UserStyleSchema schema);
    method @UiThread public void addUserStyleListener(androidx.wear.watchface.style.UserStyleRepository.UserStyleListener userStyleListener);
    method public androidx.wear.watchface.style.UserStyleSchema getSchema();
    method @UiThread public androidx.wear.watchface.style.UserStyle getUserStyle();
    method @UiThread public void removeUserStyleListener(androidx.wear.watchface.style.UserStyleRepository.UserStyleListener userStyleListener);
    method @UiThread public void setUserStyle(androidx.wear.watchface.style.UserStyle style);
    property public final androidx.wear.watchface.style.UserStyleSchema schema;
    property @UiThread public final androidx.wear.watchface.style.UserStyle userStyle;
  }

  public static interface UserStyleRepository.UserStyleListener {
    method @UiThread public void onUserStyleChanged(androidx.wear.watchface.style.UserStyle userStyle);
  }

  public final class UserStyleSchema {
    ctor public UserStyleSchema(java.util.List<? extends androidx.wear.watchface.style.UserStyleCategory> userStyleCategories);
    ctor @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public UserStyleSchema(androidx.wear.watchface.style.data.UserStyleSchemaWireFormat wireFormat);
    method public java.util.List<androidx.wear.watchface.style.UserStyleCategory> getUserStyleCategories();
    method @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public androidx.wear.watchface.style.data.UserStyleSchemaWireFormat toWireFormat();
    property public final java.util.List<androidx.wear.watchface.style.UserStyleCategory> userStyleCategories;
  }

}

