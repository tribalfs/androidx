<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-beta02" client="gradle" variant="debug" version="4.2.0-beta02">

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="        return (PackageInfo) webViewFactoryClass.getMethod("
        errorLine2="                             ^">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="384"
            column="30"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="                webviewPackageName = (String) webviewUpdateServiceClass.getMethod("
        errorLine2="                                              ^">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="405"
            column="47"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="        return (InvocationHandler) createProviderFactoryMethod.invoke(null);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewGlueCommunicator.java"
            line="69"
            column="36"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Calling Method.invoke without an SDK check"
        errorLine1="            return getFactoryMethod.invoke(null);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewGlueCommunicator.java"
            line="116"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.AssetHelper is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return context.getDataDir();"
        errorLine2="                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/AssetHelper.java"
            line="188"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 27, the call containing class androidx.webkit.internal.SafeBrowsingResponseImpl is not annotated with @RequiresApi(x) where x is at least 27. Either annotate the containing class with at least @RequiresApi(27) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(27)."
        errorLine1="            getFrameworksImpl().showInterstitial(allowReporting);"
        errorLine2="                                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/SafeBrowsingResponseImpl.java"
            line="86"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 27, the call containing class androidx.webkit.internal.SafeBrowsingResponseImpl is not annotated with @RequiresApi(x) where x is at least 27. Either annotate the containing class with at least @RequiresApi(27) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(27)."
        errorLine1="            getFrameworksImpl().proceed(report);"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/SafeBrowsingResponseImpl.java"
            line="100"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 27, the call containing class androidx.webkit.internal.SafeBrowsingResponseImpl is not annotated with @RequiresApi(x) where x is at least 27. Either annotate the containing class with at least @RequiresApi(27) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(27)."
        errorLine1="            getFrameworksImpl().backToSafety(report);"
        errorLine2="                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/SafeBrowsingResponseImpl.java"
            line="114"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerControllerImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            mFrameworksImpl = ServiceWorkerController.getInstance();"
        errorLine2="                                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerControllerImpl.java"
            line="46"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerControllerImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    mFrameworksImpl.getServiceWorkerWebSettings());"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerControllerImpl.java"
            line="51"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerControllerImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            mFrameworksImpl = ServiceWorkerController.getInstance();"
        errorLine2="                                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerControllerImpl.java"
            line="65"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerControllerImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            getFrameworksImpl().setServiceWorkerClient(new FrameworkServiceWorkerClient(client));"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerControllerImpl.java"
            line="88"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            getFrameworksImpl().setCacheMode(mode);"
        errorLine2="                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="95"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return getFrameworksImpl().getCacheMode();"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="108"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            getFrameworksImpl().setAllowContentAccess(allow);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="121"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return getFrameworksImpl().getAllowContentAccess();"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="134"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            getFrameworksImpl().setAllowFileAccess(allow);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="147"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return getFrameworksImpl().getAllowFileAccess();"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="160"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            getFrameworksImpl().setBlockNetworkLoads(flag);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="174"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.internal.ServiceWorkerWebSettingsImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return getFrameworksImpl().getBlockNetworkLoads();"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/ServiceWorkerWebSettingsImpl.java"
            line="188"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mFrameworksImpl = android.webkit.TracingController.getInstance();"
        errorLine2="                                                               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="45"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mFrameworksImpl = android.webkit.TracingController.getInstance();"
        errorLine2="                                                               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="58"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return getFrameworksImpl().isTracing();"
        errorLine2="                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="76"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            android.webkit.TracingConfig config = new android.webkit.TracingConfig.Builder()"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="94"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    .addCategories(tracingConfig.getPredefinedCategories())"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="95"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    .addCategories(tracingConfig.getCustomIncludedCategories())"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="96"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    .setTracingMode(tracingConfig.getTracingMode())"
        errorLine2="                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="97"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    .build();"
        errorLine2="                     ~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="98"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            getFrameworksImpl().start(config);"
        errorLine2="                                ~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="99"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.TracingControllerImpl is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return getFrameworksImpl().stop(outputStream, executor);"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="114"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            getFrameworksImpl().postMessage(compatToFrameworkMessage(message));"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="78"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            getFrameworksImpl().close();"
        errorLine2="                                ~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="93"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            getFrameworksImpl().setWebMessageCallback(new WebMessagePort.WebMessageCallback() {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="107"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            getFrameworksImpl().setWebMessageCallback(new WebMessagePort.WebMessageCallback() {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="130"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        return new WebMessage("
        errorLine2="               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="193"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                message.getData(),"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="206"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebMessagePortImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                portsToCompat(message.getPorts()));"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="207"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebResourceErrorImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return getFrameworksImpl().getErrorCode();"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebResourceErrorImpl.java"
            line="84"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.internal.WebResourceErrorImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return getFrameworksImpl().getDescription();"
        errorLine2="                                       ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebResourceErrorImpl.java"
            line="99"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.WebResourceRequestCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return request.isRedirect();"
        errorLine2="                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebResourceRequestCompat.java"
            line="52"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            settings.setOffscreenPreRaster(enabled);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="67"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return settings.getOffscreenPreRaster();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="93"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            settings.setSafeBrowsingEnabled(enabled);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="126"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return settings.getSafeBrowsingEnabled();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="151"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            settings.setDisabledActionModeMenuItems(menuItems);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="191"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return settings.getDisabledActionModeMenuItems();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="217"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            settings.setForceDark(forceDarkMode);"
        errorLine2="                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="354"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.WebSettingsCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return settings.getForceDark();"
        errorLine2="                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebSettingsCompat.java"
            line="382"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.webkit.WebViewClientCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        if (request.isForMainFrame()) {"
        errorLine2="                    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewClientCompat.java"
            line="176"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.webkit.WebViewClientCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    request.getUrl().toString());"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewClientCompat.java"
            line="179"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.webkit.WebViewClientCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        return shouldOverrideUrlLoading(view, request.getUrl().toString());"
        errorLine2="                                                      ~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewClientCompat.java"
            line="296"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            webview.postVisualStateCallback(requestId,"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="167"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 27, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 27. Either annotate the containing class with at least @RequiresApi(27) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(27)."
        errorLine1="            WebView.startSafeBrowsing(context, callback);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="212"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 27, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 27. Either annotate the containing class with at least @RequiresApi(27) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(27)."
        errorLine1="            WebView.setSafeBrowsingWhitelist(hostsList, callback);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="263"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 27, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 27. Either annotate the containing class with at least @RequiresApi(27) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(27)."
        errorLine1="            return WebView.getSafeBrowsingPrivacyPolicyUrl();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="328"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return WebView.getCurrentWebViewPackage();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="358"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return WebMessagePortImpl.portsToCompat(webview.createWebMessageChannel());"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="453"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            webview.postWebMessage("
        errorLine2="                    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="493"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return webview.getWebViewClient();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="741"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return webview.getWebChromeClient();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="765"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            android.webkit.WebViewRenderProcess renderer = webview.getWebViewRenderProcess();"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="800"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            webview.setWebViewRenderProcessClient(executor, webViewRenderProcessClient != null"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="851"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            webview.setWebViewRenderProcessClient(webViewRenderProcessClient != null"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="890"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    webview.getWebViewRenderProcessClient();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="921"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            if (webview.getWebViewLooper() != Looper.myLooper()) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="966"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.WebViewCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        + &quot;(Expected Looper &quot; + webview.getWebViewLooper() + &quot; called on &quot;"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/WebViewCompat.java"
            line="970"
            column="57"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.webkit.internal.WebViewGlueCommunicator is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return WebView.getWebViewClassLoader();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewGlueCommunicator.java"
            line="105"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.webkit.internal.WebViewRenderProcessImpl is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return renderer != null ? renderer.terminate() : false;"
        errorLine2="                                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewRenderProcessImpl.java"
            line="94"
            column="48"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getWillSuppressErrorPage` such that `willSuppressErrorPage` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean willSuppressErrorPage() {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebSettingsAdapter.java"
            line="85"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean stop(OutputStream outputStream, Executor executor) {"
        errorLine2="                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="110"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean stop(OutputStream outputStream, Executor executor) {"
        errorLine2="                                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/TracingControllerImpl.java"
            line="110"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public VisualStateCallbackAdapter(WebViewCompat.VisualStateCallback visualStateCallback) {"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/VisualStateCallbackAdapter.java"
            line="30"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onMessage(InvocationHandler port, InvocationHandler message) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessageCallbackAdapter.java"
            line="40"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onMessage(InvocationHandler port, InvocationHandler message) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessageCallbackAdapter.java"
            line="40"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebMessagePortImpl(WebMessagePort frameworksImpl) {"
        errorLine2="                              ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="45"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebMessagePortImpl(InvocationHandler invocationHandler) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="49"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setWebMessageCallback(Handler handler,"
        errorLine2="                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="126"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebMessagePort getFrameworkPort() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="149"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public InvocationHandler getInvocationHandler() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="154"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static WebMessagePortCompat[] portsToCompat(WebMessagePort[] ports) {"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="163"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static WebMessagePort[] compatToPorts(WebMessagePortCompat[] compatPorts) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="178"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static WebMessage compatToFrameworkMessage(WebMessageCompat message) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="192"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static WebMessageCompat frameworkMessageToCompat(WebMessage message) {"
        errorLine2="                                                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebMessagePortImpl.java"
            line="204"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebResourceRequestAdapter(WebResourceRequestBoundaryInterface boundaryInterface) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebResourceRequestAdapter.java"
            line="30"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebSettingsAdapter(WebSettingsBoundaryInterface boundaryInterface) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebSettingsAdapter.java"
            line="29"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ClassLoader getWebViewClassLoader() {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewGlueCommunicator.java"
            line="103"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    WebViewProviderBoundaryInterface createWebView(WebView webview);"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="42"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    WebViewProviderBoundaryInterface createWebView(WebView webview);"
        errorLine2="                                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="42"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="48"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    StaticsBoundaryInterface getStatics();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="54"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    String[] getWebViewFeatures();"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="59"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    TracingControllerBoundaryInterface getTracingController();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="70"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    ProxyControllerBoundaryInterface getProxyController();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactory.java"
            line="75"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebViewProviderFactoryAdapter(WebViewProviderFactoryBoundaryInterface impl) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="40"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebViewProviderBoundaryInterface createWebView(WebView webview) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebViewProviderBoundaryInterface createWebView(WebView webview) {"
        errorLine2="                                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="50"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public StaticsBoundaryInterface getStatics() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="71"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String[] getWebViewFeatures() {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="80"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public TracingControllerBoundaryInterface getTracingController() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="100"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ProxyControllerBoundaryInterface getProxyController() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebViewProviderFactoryAdapter.java"
            line="110"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebkitToCompatConverter(WebkitToCompatConverterBoundaryInterface impl) {"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebkitToCompatConverter.java"
            line="46"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebSettingsAdapter convertSettings(WebSettings webSettings) {"
        errorLine2="                                              ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebkitToCompatConverter.java"
            line="56"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public WebResourceRequestAdapter convertWebResourceRequest(WebResourceRequest request) {"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/webkit/internal/WebkitToCompatConverter.java"
            line="66"
            column="64"/>
    </issue>

</issues>
