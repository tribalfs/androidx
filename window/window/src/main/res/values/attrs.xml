<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2021 The Android Open Source Project

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<resources xmlns:xs="http://schemas.android.com/apk/res/android">
    <!-- Defines what activity container should be given to the primary part of the task
     bounds. Values in range (0.0, 1.0) define the size of the primary container of the split
     relative to the corresponding task dimension size. 0.0 means the secondary activity container
     fills the full Task bounds, and occludes the primary activity container, which is also expanded
     to fill the full Task bounds. 0.5 means the primary and secondary container shares an equal
     split. Ratio larger than `0.5` means the primary container takes more partition. Otherwise,
     the secondary container takes more partition. -->
    <attr name="splitRatio" format="float" />
    <!-- The smallest value of width of the parent window when the split should be used. -->
    <attr name="splitMinWidth" format="dimension" />
    <!-- The smallest value of height of the parent window when the split should be used. -->
    <attr name="splitMinHeight" format="dimension" />
    <!-- The smallest value of the smallest-width (sw) of the parent window in any rotation when
     the split should be used. -->
    <attr name="splitMinSmallestWidth" format="dimension" />
    <attr name="splitLayoutDirection" format="enum">
        <!-- A layout direction that splits the task bounds vertically, and the direction is deduced
        from the language script of locale. The direction can be either rtl or ltr -->
        <enum name="locale" value="0" />
        <!-- The primary container is placed on the left, and the secondary is on the right hand
        side. -->
        <enum name="ltr" value="1" />
        <!-- The primary container is placed on the right, and the secondary is on the left hand
        side. -->
        <enum name="rtl" value="2" />
        <!-- The primary container is placed on top, and the secondary is at the bottom. -->
        <enum name="topToBottom" value="3" />
        <!-- The primary container is placed on bottom, and the secondary is at the top. -->
        <enum name="bottomToTop" value="4" />
    </attr>
    <attr name="finishPrimaryWithSecondary" format="enum">
        <enum name="never" value="0" />
        <enum name="always" value="1" />
        <enum name="adjacent" value="2" />
    </attr>
    <attr name="finishPrimaryWithPlaceholder" format="enum">
        <enum name="always" value="1" />
        <enum name="adjacent" value="2" />
    </attr>
    <attr name="finishSecondaryWithPrimary" format="enum">
        <enum name="never" value="0" />
        <enum name="always" value="1" />
        <enum name="adjacent" value="2" />
    </attr>
    <!-- An optional but unique string to identify a SplitPairRule, SplitPlaceholderRule or
    ActivityRule. The suggested usage is to set the tag to be able to differentiate between
    different rules in the callbacks. For example, it can be used to compute the right
    SplitAttributes for the right split rule in
    SplitAttributesCalculator#computeSplitAttributesForState.-->
    <attr name="tag" format="string" />

    <!-- Split configuration rules for activity pairs. Must contain at least one SplitPairFilter.
    See androidx.window.embedding.SplitPairRule for complete documentation. -->
    <declare-styleable name="SplitPairRule">
        <!-- When all activities are finished in the secondary container, the activity in the
         primary container that created the split should also be finished. Defaults to "never". -->
        <attr name="finishPrimaryWithSecondary" />
        <!-- When all activities are finished in the primary container, the activities in the
         secondary container in the split should also be finished. Defaults to "always". -->
        <attr name="finishSecondaryWithPrimary" />
        <!-- If there is an existing split with the same primary container, indicates whether the
        existing secondary container on top and all activities in it should be destroyed when a new
        split is created using this rule. Otherwise the new secondary will appear on top. Defaults
         to "false". -->
        <attr name="clearTop" format="boolean" />
        <attr name="splitRatio"/>
        <attr name="splitMinWidth"/>
        <attr name="splitMinHeight"/>
        <attr name="splitMinSmallestWidth"/>
        <attr name="splitLayoutDirection"/>
        <attr name="tag"/>
    </declare-styleable>

    <!-- Configuration rules for split placeholders. Must contain at least one ActivityFilter for
    the primary activity for which the rule should be applied.
    See androidx.window.embedding.SplitPlaceholderRule for complete documentation. -->
    <declare-styleable name="SplitPlaceholderRule">
        <!-- Component name of the placeholder activity in the split. Must be non-empty. -->
        <attr name="placeholderActivityName" format="string" />
        <!-- Determines whether the placeholder will show on top in a smaller window size after
        it first appeared in a split with sufficient minimum width. -->
        <attr name="stickyPlaceholder" format="boolean" />
        <!-- When all activities are finished in the secondary container, the activity in the
         primary container that created the split should also be finished. Defaults to "always". -->
        <attr name="finishPrimaryWithPlaceholder"/>
        <attr name="splitRatio"/>
        <attr name="splitMinWidth"/>
        <attr name="splitMinHeight"/>
        <attr name="splitMinSmallestWidth"/>
        <attr name="splitLayoutDirection"/>
        <attr name="tag"/>
    </declare-styleable>

    <!-- Filter used to find if a pair of activities should be put in a split. -->
    <declare-styleable name="SplitPairFilter">
        <!-- Component name of the primary activity in the split. Must be non-empty. Can contain a
         wildcard at the end or instead of package name and/or class name. -->
        <attr name="primaryActivityName" format="string" />
        <!-- Component name of the secondary activity in the split. Must be non-empty. Can contain a
         wildcard at the end or instead of package name and/or class name. -->
        <attr name="secondaryActivityName" format="string" />
        <!-- Action used for secondary activity launch. May be empty. Must not contain wildcards.
         -->
        <attr name="secondaryActivityAction" format="string" />
    </declare-styleable>

    <!-- Layout configuration rules for individual activities. Takes precedence over
    SplitPairRule. Must contain at least one ActivityFilter.
    See androidx.window.layout.ActivityRule for complete documentation. -->
    <declare-styleable name="ActivityRule">
        <!-- Whether the activity should always be expanded on launch. -->
        <attr name="alwaysExpand" format="boolean" />
        <attr name="tag"/>
    </declare-styleable>

    <!-- Filter for ActivityRule. -->
    <declare-styleable name="ActivityFilter">
        <!-- Component name of the primary activity in the split. Must be non-empty. Can contain a
         single wildcard at the end. -->
        <attr name="activityName" format="string" />
        <!-- Action used for activity launch. May be empty. Must not contain wildcards.
         -->
        <attr name="activityAction" format="string" />
    </declare-styleable>
</resources>