<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.3.0-alpha07" type="baseline" client="gradle" dependencies="false" name="AGP (7.3.0-alpha07)" variant="all" version="7.3.0-alpha07">

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 16; however, the containing class androidx.work.integration.testapp.imageprocessing.ImageProcessingActivity is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                &amp;&amp; Build.VERSION.SDK_INT >= 16 &amp;&amp; data.getClipData() != null) {"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageProcessingActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 16; however, the containing class androidx.work.integration.testapp.imageprocessing.ImageProcessingActivity is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            int count = data.getClipData().getItemCount();"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageProcessingActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 16; however, the containing class androidx.work.integration.testapp.imageprocessing.ImageProcessingActivity is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                String uriString = data.getClipData().getItemAt(i).getUri().toString();"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageProcessingActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class null is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                    jobScheduler.cancelAll();"
        errorLine2="                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/MainActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class null is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                        jobScheduler.schedule("
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/MainActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class null is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                                new JobInfo.Builder("
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/MainActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class null is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                                        .setMinimumLatency(10 * 60 * 1000)"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/MainActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class null is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                                        .build());"
        errorLine2="                                         ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/MainActivity.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mImageRecyclerViewAdapter` of class `ImageProcessingActivity` requires synthetic accessor"
        errorLine1="                        mImageRecyclerViewAdapter.updateList(images);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageProcessingActivity.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mShouldLoad` of class `ViewHolder` requires synthetic accessor"
        errorLine1="                        if (mShouldLoad) {"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mImageView` of class `ViewHolder` requires synthetic accessor"
        errorLine1="                            mImageView.setImageBitmap(bitmap);"
        errorLine2="                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mTextView` of class `ViewHolder` requires synthetic accessor"
        errorLine1="                            mTextView.setText(image.mOriginalAssetName);"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mProgressBar` of class `ViewHolder` requires synthetic accessor"
        errorLine1="                            mProgressBar.setVisibility(View.GONE);"
        errorLine2="                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mImageView` of class `ViewHolder` requires synthetic accessor"
        errorLine1="                            mImageView.setVisibility(View.VISIBLE);"
        errorLine2="                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `scheduleWork` of class `RetryActivity` requires synthetic accessor"
        errorLine1="                scheduleWork(&quot;one&quot;, 3, 0.2);"
        errorLine2="                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RetryActivity.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `scheduleWork` of class `RetryActivity` requires synthetic accessor"
        errorLine1="                scheduleWork(&quot;two&quot;, 5, 0.5);"
        errorLine2="                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RetryActivity.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mTextView` of class `RetryActivity` requires synthetic accessor"
        errorLine1="                            mTextView.setText(&quot;nothing to show&quot;);"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RetryActivity.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mTextView` of class `RetryActivity` requires synthetic accessor"
        errorLine1="                            mTextView.setText(text);"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RetryActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/sherlockholmes/AnalyzeSherlockHolmesActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String mProcessedFilePath;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/Image.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Bitmap mImage;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/Image.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insert(Image image);"
        errorLine2="                ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    List&lt;Image> getImages();"
        errorLine2="    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    int setProcessed(String originalAssetName, String processedFilePath);"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    int setProcessed(String originalAssetName, String processedFilePath);"
        errorLine2="                                               ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    LiveData&lt;List&lt;Image>> getImagesLiveData();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onCreate(Bundle savedInstanceState) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageProcessingActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onBindViewHolder(ViewHolder holder, int position) {"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onViewRecycled(ViewHolder holder) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onCreate(Bundle savedInstanceState) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/MainActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static String TAG = &quot;RecursiveWorker&quot;;"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RecursiveWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static TestDatabase getInstance(Context context) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static TestDatabase getInstance(Context context) {"
        errorLine2="                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract WordCountDao getWordCountDao();"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract ImageDao getImageDao();"
        errorLine2="                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String inputFile) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/sherlockholmes/TextMappingWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String inputFile) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/sherlockholmes/TextMappingWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String message) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/ToastWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String message) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/ToastWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insertWordCount(WordCount wordCount);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/WordCountDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    LiveData&lt;List&lt;WordCount>> getWordCounts();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/WordCountDao.java"/>
    </issue>

</issues>
