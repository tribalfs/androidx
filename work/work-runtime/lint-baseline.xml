<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.3.0-alpha07" type="baseline" client="gradle" dependencies="false" name="AGP (7.3.0-alpha07)" variant="all" version="7.3.0-alpha07">

    <issue
        id="NewApi"
        message="Call requires API level 18 (current min is 14): `android.os.HandlerThread#quitSafely`"
        errorLine1="        mHandlerThread.quitSafely();"
        errorLine2="                       ~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/workers/ConstraintTrackingWorkerTest.java"
            line="157"
            column="24"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `getTriggeredContentAuthorities`"
        errorLine1="                sTriggeredContentAuthorities = getTriggeredContentAuthorities();"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/background/systemjob/SystemJobServiceTest.java"
            line="304"
            column="48"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `getTriggeredContentUris`"
        errorLine1="                sTriggeredContentUris = getTriggeredContentUris();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/background/systemjob/SystemJobServiceTest.java"
            line="305"
            column="41"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 28 (current min is 23): `getNetwork`"
        errorLine1="                sNetwork = getNetwork();"
        errorLine2="                           ~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/background/systemjob/SystemJobServiceTest.java"
            line="325"
            column="28"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getTriggeredContentAuthorities`"
        errorLine1="        assertThat(worker.getTriggeredContentAuthorities(),"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkerWrapperTest.java"
            line="927"
            column="27"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getTriggeredContentUris`"
        errorLine1="        assertThat(worker.getTriggeredContentUris(),"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkerWrapperTest.java"
            line="929"
            column="27"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="                            @Override"
        errorLine2="                            ^">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="226"
            column="29"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @VisibleForTesting"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/impl/utils/WorkTimer.java"
            line="123"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @VisibleForTesting"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/impl/utils/WorkTimer.java"
            line="129"
            column="5"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`LiveData&lt;State>`) and setter parameter type (`State`) getter and setter methods for property `state` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public @NonNull LiveData&lt;State> getState() {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/OperationImpl.java"
            line="52"
            column="37"/>
        <location
            file="src/main/java/androidx/work/impl/OperationImpl.java"
            line="61"
            column="17"
            message="Setter here"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;mappingMethod&quot;, in androidx.work.impl.utils.LiveDataUtils.dedupedMappedLiveDataFor) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull final TaskExecutor workTaskExecutor) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/LiveDataUtils.java"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final void addListener(Runnable listener, Executor executor) {"
        errorLine2="                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="650"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public final void addListener(Runnable listener, Executor executor) {"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="650"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected boolean setException(Throwable throwable) {"
        errorLine2="                                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="707"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected boolean setFuture(ListenableFuture&lt;? extends V> future) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="743"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Operation getOperation() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static CancelWorkRunnable forId("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="113"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static CancelWorkRunnable forTag("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="140"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static CancelWorkRunnable forName("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="172"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static CancelWorkRunnable forAll(@NonNull final WorkManagerImpl workManagerImpl) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="206"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Intent newConstraintProxyUpdateIntent("
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/ConstraintProxyUpdateReceiver.java"
            line="61"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Context context,"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/ConstraintProxyUpdateReceiver.java"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static InputMerger fromClassName(String className) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/InputMerger.java"
            line="60"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static InputMerger fromClassName(String className) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/InputMerger.java"
            line="60"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;In, Out> LiveData&lt;Out> dedupedMappedLiveDataFor("
        errorLine2="                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/LiveDataUtils.java"
            line="51"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, Class&lt;?> klazz) {"
        errorLine2="                                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="66"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, Class&lt;?> klazz) {"
        errorLine2="                                                                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="66"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, String className) {"
        errorLine2="                                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="77"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, String className) {"
        errorLine2="                                                                        ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="77"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public PruneWorkRunnable(WorkManagerImpl workManagerImpl) {"
        errorLine2="                             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PruneWorkRunnable.java"
            line="39"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Operation getOperation() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PruneWorkRunnable.java"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            List&lt;Scheduler> schedulers) {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/Schedulers.java"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;V> SettableFuture&lt;V> create() {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/SettableFuture.java"
            line="45"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean setException(Throwable throwable) {"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/SettableFuture.java"
            line="55"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean setFuture(ListenableFuture&lt;? extends V> future) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/SettableFuture.java"
            line="60"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            WorkManagerImpl workManagerImpl,"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/StartWorkRunnable.java"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String workSpecId,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/StartWorkRunnable.java"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            WorkerParameters.RuntimeExtras runtimeExtras) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/StartWorkRunnable.java"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Context context,"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="78"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            WorkManagerImpl workManager,"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            JobScheduler jobScheduler,"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="80"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            SystemJobInfoConverter systemJobInfoConverter) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="81"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void scheduleInternal(WorkSpec workSpec, int jobId) {"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="181"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    Executor getMainThreadExecutor();"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="36"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    default void executeOnTaskThread(Runnable runnable) {"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="42"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    SerialExecutor getSerialTaskExecutor();"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="51"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static PowerManager.WakeLock newWakeLock("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/WakeLocks.java"
            line="53"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExistingWorkPolicy getExistingWorkPolicy() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;String> getAllIds() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="90"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;WorkContinuationImpl> getParents() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="105"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Set&lt;String> prerequisitesFor(WorkContinuationImpl continuation) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="276"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Executor getMainThreadExecutor() {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/WorkManagerTaskExecutor.java"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Network network;"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/work/WorkerParameters.java"
            line="216"
            column="16"/>
    </issue>

</issues>
